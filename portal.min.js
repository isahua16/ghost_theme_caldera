(function () {
    "use strict";
    try {
        if (typeof document < "u") {
            var t = document.createElement("style");
            t.appendChild(
                document.createTextNode(
                    ".gh-portal-account-header{display:flex;flex-direction:column;align-items:center;margin:0 0 32px}.gh-portal-account-header .gh-portal-avatar{margin:6px 0 8px!important}.gh-portal-account-data{margin-bottom:40px}footer.gh-portal-account-footer{display:flex}.gh-portal-account-footer.paid{margin-top:12px}.gh-portal-account-footermenu{display:flex;align-items:center;list-style:none;padding:0;margin:0}.gh-portal-account-footerright{display:flex;flex-grow:1;align-items:center;justify-content:flex-end}.gh-portal-account-footermenu li{margin-right:16px}.gh-portal-account-footermenu li:last-of-type{margin-right:0}.gh-portal-freeaccount-newsletter{display:flex;align-items:center;justify-content:space-between;margin-top:24px}.gh-portal-freeaccount-newsletter .label{display:flex;flex-direction:column;flex-grow:1}.gh-portal-free-ctatext{margin-top:-12px}.gh-portal-cancelcontinue-container{margin:24px 0 32px}.gh-portal-list-detail .gh-portal-email-notice{display:flex;align-items:center;gap:5px;margin-top:6px;color:var(--red);font-weight:500;font-size:1.25rem;letter-spacing:.2px}.gh-portal-email-notice-icon{width:20px;height:20px}.gh-portal-billing-button-loader{width:32px;height:32px;margin-right:-3px;opacity:.6}.gh-portal-product-icon{width:52px;margin-right:12px;border-radius:2px}.gh-portal-account-discountcontainer{position:relative;display:flex;align-items:center}.gh-portal-account-old-price{text-decoration:line-through;color:var(--grey9)!important}.gh-portal-account-tagicon{width:16px;height:16px;color:var(--brandcolor);margin-right:5px;z-index:999}@media (max-width: 390px){.gh-portal-account-footer{padding:0!important}}@media (max-width: 340px){.gh-portal-account-footer{padding:0!important;flex-wrap:wrap;gap:12px}.gh-portal-account-footer .gh-portal-account-footerright{justify-content:flex-start}}.gh-email-suppressed-page-title{margin-bottom:14px}.gh-email-suppressed-page-icon{display:block;width:38px;height:38px;margin:0 auto 18px}.gh-email-suppressed-page-text{padding:0 14px;text-align:center;color:var(--grey6)}.gh-email-faq-footer-text{color:var(--grey8)}.gh-portal-list-detail.email-newsletter .gh-email-faq-page-button{display:block;margin-top:3px}.accountEmail .gh-email-faq-page-button{margin-left:4px}.emailReceivingFAQ .gh-portal-btn-back,.emailReceivingFAQ .gh-portal-btn-back:hover{left:calc(6vmin - 14px)}.emailReceivingFAQ .gh-portal-closeicon-container{right:calc(6vmin - 20px)}@media (max-width: 480px){.emailReceivingFAQ .gh-portal-btn-back,.emailReceivingFAQ .gh-portal-btn-back:hover{left:16px}.emailReceivingFAQ .gh-portal-closeicon-container{right:24px}}.gh-email-faq-page-button{color:var(--brandcolor);cursor:pointer;background:none;transition:color linear .1s;font-size:1.45rem}"
                )
            ),
                document.head.appendChild(t);
        }
    } catch (e) {
        console.error("vite-plugin-css-injected-by-js", e);
    }
})();
var CE = Object.defineProperty;
var $E = (Pe, Xe, Ve) =>
    Xe in Pe
        ? CE(Pe, Xe, {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: Ve,
          })
        : (Pe[Xe] = Ve);
var J = (Pe, Xe, Ve) => ($E(Pe, typeof Xe != "symbol" ? Xe + "" : Xe, Ve), Ve);
(function (Pe) {
    typeof define == "function" && define.amd ? define(Pe) : Pe();
})(function () {
    var lu, fg, gg;
    ("use strict");
    function Pe(e) {
        return e &&
            e.__esModule &&
            Object.prototype.hasOwnProperty.call(e, "default")
            ? e.default
            : e;
    }
    var Xe = { exports: {} },
        Ve = {};
    /*
object-assign
(c) Sindre Sorhus
@license MIT
*/ var cu = Object.getOwnPropertySymbols,
        bg = Object.prototype.hasOwnProperty,
        yg = Object.prototype.propertyIsEnumerable;
    function kg(e) {
        if (e == null)
            throw new TypeError(
                "Object.assign cannot be called with null or undefined"
            );
        return Object(e);
    }
    function vg() {
        try {
            if (!Object.assign) return !1;
            var e = new String("abc");
            if (((e[5] = "de"), Object.getOwnPropertyNames(e)[0] === "5"))
                return !1;
            for (var t = {}, n = 0; n < 10; n++)
                t["_" + String.fromCharCode(n)] = n;
            var a = Object.getOwnPropertyNames(t).map(function (i) {
                return t[i];
            });
            if (a.join("") !== "0123456789") return !1;
            var r = {};
            return (
                "abcdefghijklmnopqrst".split("").forEach(function (i) {
                    r[i] = i;
                }),
                Object.keys(Object.assign({}, r)).join("") ===
                    "abcdefghijklmnopqrst"
            );
        } catch {
            return !1;
        }
    }
    var uu = vg()
            ? Object.assign
            : function (e, t) {
                  for (var n, a = kg(e), r, i = 1; i < arguments.length; i++) {
                      n = Object(arguments[i]);
                      for (var o in n) bg.call(n, o) && (a[o] = n[o]);
                      if (cu) {
                          r = cu(n);
                          for (var s = 0; s < r.length; s++)
                              yg.call(n, r[s]) && (a[r[s]] = n[r[s]]);
                      }
                  }
                  return a;
              },
        du = { exports: {} },
        M = {};
    /** @license React v17.0.2
     * react.production.min.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */ var Ko = uu,
        yn = 60103,
        mu = 60106;
    (M.Fragment = 60107), (M.StrictMode = 60108), (M.Profiler = 60114);
    var pu = 60109,
        hu = 60110,
        fu = 60112;
    M.Suspense = 60113;
    var gu = 60115,
        bu = 60116;
    if (typeof Symbol == "function" && Symbol.for) {
        var We = Symbol.for;
        (yn = We("react.element")),
            (mu = We("react.portal")),
            (M.Fragment = We("react.fragment")),
            (M.StrictMode = We("react.strict_mode")),
            (M.Profiler = We("react.profiler")),
            (pu = We("react.provider")),
            (hu = We("react.context")),
            (fu = We("react.forward_ref")),
            (M.Suspense = We("react.suspense")),
            (gu = We("react.memo")),
            (bu = We("react.lazy"));
    }
    var yu = typeof Symbol == "function" && Symbol.iterator;
    function wg(e) {
        return e === null || typeof e != "object"
            ? null
            : ((e = (yu && e[yu]) || e["@@iterator"]),
              typeof e == "function" ? e : null);
    }
    function ga(e) {
        for (
            var t =
                    "https://reactjs.org/docs/error-decoder.html?invariant=" +
                    e,
                n = 1;
            n < arguments.length;
            n++
        )
            t += "&args[]=" + encodeURIComponent(arguments[n]);
        return (
            "Minified React error #" +
            e +
            "; visit " +
            t +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
        );
    }
    var ku = {
            isMounted: function () {
                return !1;
            },
            enqueueForceUpdate: function () {},
            enqueueReplaceState: function () {},
            enqueueSetState: function () {},
        },
        vu = {};
    function kn(e, t, n) {
        (this.props = e),
            (this.context = t),
            (this.refs = vu),
            (this.updater = n || ku);
    }
    (kn.prototype.isReactComponent = {}),
        (kn.prototype.setState = function (e, t) {
            if (typeof e != "object" && typeof e != "function" && e != null)
                throw Error(ga(85));
            this.updater.enqueueSetState(this, e, t, "setState");
        }),
        (kn.prototype.forceUpdate = function (e) {
            this.updater.enqueueForceUpdate(this, e, "forceUpdate");
        });
    function wu() {}
    wu.prototype = kn.prototype;
    function Jo(e, t, n) {
        (this.props = e),
            (this.context = t),
            (this.refs = vu),
            (this.updater = n || ku);
    }
    var Qo = (Jo.prototype = new wu());
    (Qo.constructor = Jo), Ko(Qo, kn.prototype), (Qo.isPureReactComponent = !0);
    var Xo = { current: null },
        xu = Object.prototype.hasOwnProperty,
        Su = { key: !0, ref: !0, __self: !0, __source: !0 };
    function Eu(e, t, n) {
        var a,
            r = {},
            i = null,
            o = null;
        if (t != null)
            for (a in (t.ref !== void 0 && (o = t.ref),
            t.key !== void 0 && (i = "" + t.key),
            t))
                xu.call(t, a) && !Su.hasOwnProperty(a) && (r[a] = t[a]);
        var s = arguments.length - 2;
        if (s === 1) r.children = n;
        else if (1 < s) {
            for (var l = Array(s), u = 0; u < s; u++) l[u] = arguments[u + 2];
            r.children = l;
        }
        if (e && e.defaultProps)
            for (a in ((s = e.defaultProps), s))
                r[a] === void 0 && (r[a] = s[a]);
        return {
            $$typeof: yn,
            type: e,
            key: i,
            ref: o,
            props: r,
            _owner: Xo.current,
        };
    }
    function xg(e, t) {
        return {
            $$typeof: yn,
            type: e.type,
            key: t,
            ref: e.ref,
            props: e.props,
            _owner: e._owner,
        };
    }
    function Zo(e) {
        return typeof e == "object" && e !== null && e.$$typeof === yn;
    }
    function Sg(e) {
        var t = { "=": "=0", ":": "=2" };
        return (
            "$" +
            e.replace(/[=:]/g, function (n) {
                return t[n];
            })
        );
    }
    var Cu = /\/+/g;
    function es(e, t) {
        return typeof e == "object" && e !== null && e.key != null
            ? Sg("" + e.key)
            : t.toString(36);
    }
    function Nr(e, t, n, a, r) {
        var i = typeof e;
        (i === "undefined" || i === "boolean") && (e = null);
        var o = !1;
        if (e === null) o = !0;
        else
            switch (i) {
                case "string":
                case "number":
                    o = !0;
                    break;
                case "object":
                    switch (e.$$typeof) {
                        case yn:
                        case mu:
                            o = !0;
                    }
            }
        if (o)
            return (
                (o = e),
                (r = r(o)),
                (e = a === "" ? "." + es(o, 0) : a),
                Array.isArray(r)
                    ? ((n = ""),
                      e != null && (n = e.replace(Cu, "$&/") + "/"),
                      Nr(r, t, n, "", function (u) {
                          return u;
                      }))
                    : r != null &&
                      (Zo(r) &&
                          (r = xg(
                              r,
                              n +
                                  (!r.key || (o && o.key === r.key)
                                      ? ""
                                      : ("" + r.key).replace(Cu, "$&/") + "/") +
                                  e
                          )),
                      t.push(r)),
                1
            );
        if (((o = 0), (a = a === "" ? "." : a + ":"), Array.isArray(e)))
            for (var s = 0; s < e.length; s++) {
                i = e[s];
                var l = a + es(i, s);
                o += Nr(i, t, n, l, r);
            }
        else if (((l = wg(e)), typeof l == "function"))
            for (e = l.call(e), s = 0; !(i = e.next()).done; )
                (i = i.value), (l = a + es(i, s++)), (o += Nr(i, t, n, l, r));
        else if (i === "object")
            throw (
                ((t = "" + e),
                Error(
                    ga(
                        31,
                        t === "[object Object]"
                            ? "object with keys {" +
                                  Object.keys(e).join(", ") +
                                  "}"
                            : t
                    )
                ))
            );
        return o;
    }
    function Tr(e, t, n) {
        if (e == null) return e;
        var a = [],
            r = 0;
        return (
            Nr(e, a, "", "", function (i) {
                return t.call(n, i, r++);
            }),
            a
        );
    }
    function Eg(e) {
        if (e._status === -1) {
            var t = e._result;
            (t = t()),
                (e._status = 0),
                (e._result = t),
                t.then(
                    function (n) {
                        e._status === 0 &&
                            ((n = n.default), (e._status = 1), (e._result = n));
                    },
                    function (n) {
                        e._status === 0 && ((e._status = 2), (e._result = n));
                    }
                );
        }
        if (e._status === 1) return e._result;
        throw e._result;
    }
    var $u = { current: null };
    function ut() {
        var e = $u.current;
        if (e === null) throw Error(ga(321));
        return e;
    }
    var Cg = {
        ReactCurrentDispatcher: $u,
        ReactCurrentBatchConfig: { transition: 0 },
        ReactCurrentOwner: Xo,
        IsSomeRendererActing: { current: !1 },
        assign: Ko,
    };
    (M.Children = {
        map: Tr,
        forEach: function (e, t, n) {
            Tr(
                e,
                function () {
                    t.apply(this, arguments);
                },
                n
            );
        },
        count: function (e) {
            var t = 0;
            return (
                Tr(e, function () {
                    t++;
                }),
                t
            );
        },
        toArray: function (e) {
            return (
                Tr(e, function (t) {
                    return t;
                }) || []
            );
        },
        only: function (e) {
            if (!Zo(e)) throw Error(ga(143));
            return e;
        },
    }),
        (M.Component = kn),
        (M.PureComponent = Jo),
        (M.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Cg),
        (M.cloneElement = function (e, t, n) {
            if (e == null) throw Error(ga(267, e));
            var a = Ko({}, e.props),
                r = e.key,
                i = e.ref,
                o = e._owner;
            if (t != null) {
                if (
                    (t.ref !== void 0 && ((i = t.ref), (o = Xo.current)),
                    t.key !== void 0 && (r = "" + t.key),
                    e.type && e.type.defaultProps)
                )
                    var s = e.type.defaultProps;
                for (l in t)
                    xu.call(t, l) &&
                        !Su.hasOwnProperty(l) &&
                        (a[l] = t[l] === void 0 && s !== void 0 ? s[l] : t[l]);
            }
            var l = arguments.length - 2;
            if (l === 1) a.children = n;
            else if (1 < l) {
                s = Array(l);
                for (var u = 0; u < l; u++) s[u] = arguments[u + 2];
                a.children = s;
            }
            return {
                $$typeof: yn,
                type: e.type,
                key: r,
                ref: i,
                props: a,
                _owner: o,
            };
        }),
        (M.createContext = function (e, t) {
            return (
                t === void 0 && (t = null),
                (e = {
                    $$typeof: hu,
                    _calculateChangedBits: t,
                    _currentValue: e,
                    _currentValue2: e,
                    _threadCount: 0,
                    Provider: null,
                    Consumer: null,
                }),
                (e.Provider = { $$typeof: pu, _context: e }),
                (e.Consumer = e)
            );
        }),
        (M.createElement = Eu),
        (M.createFactory = function (e) {
            var t = Eu.bind(null, e);
            return (t.type = e), t;
        }),
        (M.createRef = function () {
            return { current: null };
        }),
        (M.forwardRef = function (e) {
            return { $$typeof: fu, render: e };
        }),
        (M.isValidElement = Zo),
        (M.lazy = function (e) {
            return {
                $$typeof: bu,
                _payload: { _status: -1, _result: e },
                _init: Eg,
            };
        }),
        (M.memo = function (e, t) {
            return { $$typeof: gu, type: e, compare: t === void 0 ? null : t };
        }),
        (M.useCallback = function (e, t) {
            return ut().useCallback(e, t);
        }),
        (M.useContext = function (e, t) {
            return ut().useContext(e, t);
        }),
        (M.useDebugValue = function () {}),
        (M.useEffect = function (e, t) {
            return ut().useEffect(e, t);
        }),
        (M.useImperativeHandle = function (e, t, n) {
            return ut().useImperativeHandle(e, t, n);
        }),
        (M.useLayoutEffect = function (e, t) {
            return ut().useLayoutEffect(e, t);
        }),
        (M.useMemo = function (e, t) {
            return ut().useMemo(e, t);
        }),
        (M.useReducer = function (e, t, n) {
            return ut().useReducer(e, t, n);
        }),
        (M.useRef = function (e) {
            return ut().useRef(e);
        }),
        (M.useState = function (e) {
            return ut().useState(e);
        }),
        (M.version = "17.0.2"),
        (du.exports = M);
    var k = du.exports;
    const R = Pe(k);
    /** @license React v17.0.2
     * react-jsx-runtime.production.min.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */ var $g = k,
        ju = 60103;
    if (((Ve.Fragment = 60107), typeof Symbol == "function" && Symbol.for)) {
        var Pu = Symbol.for;
        (ju = Pu("react.element")), (Ve.Fragment = Pu("react.fragment"));
    }
    var jg =
            $g.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
                .ReactCurrentOwner,
        Pg = Object.prototype.hasOwnProperty,
        _g = { key: !0, ref: !0, __self: !0, __source: !0 };
    function _u(e, t, n) {
        var a,
            r = {},
            i = null,
            o = null;
        n !== void 0 && (i = "" + n),
            t.key !== void 0 && (i = "" + t.key),
            t.ref !== void 0 && (o = t.ref);
        for (a in t) Pg.call(t, a) && !_g.hasOwnProperty(a) && (r[a] = t[a]);
        if (e && e.defaultProps)
            for (a in ((t = e.defaultProps), t))
                r[a] === void 0 && (r[a] = t[a]);
        return {
            $$typeof: ju,
            type: e,
            key: i,
            ref: o,
            props: r,
            _owner: jg.current,
        };
    }
    (Ve.jsx = _u), (Ve.jsxs = _u), (Xe.exports = Ve);
    var c = Xe.exports,
        Nu = { exports: {} },
        De = {},
        Tu = { exports: {} },
        Iu = {};
    /** @license React v0.20.2
     * scheduler.production.min.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */ (function (e) {
        var t, n, a, r;
        if (
            typeof performance == "object" &&
            typeof performance.now == "function"
        ) {
            var i = performance;
            e.unstable_now = function () {
                return i.now();
            };
        } else {
            var o = Date,
                s = o.now();
            e.unstable_now = function () {
                return o.now() - s;
            };
        }
        if (typeof window > "u" || typeof MessageChannel != "function") {
            var l = null,
                u = null,
                m = function () {
                    if (l !== null)
                        try {
                            var j = e.unstable_now();
                            l(!0, j), (l = null);
                        } catch (A) {
                            throw (setTimeout(m, 0), A);
                        }
                };
            (t = function (j) {
                l !== null ? setTimeout(t, 0, j) : ((l = j), setTimeout(m, 0));
            }),
                (n = function (j, A) {
                    u = setTimeout(j, A);
                }),
                (a = function () {
                    clearTimeout(u);
                }),
                (e.unstable_shouldYield = function () {
                    return !1;
                }),
                (r = e.unstable_forceFrameRate = function () {});
        } else {
            var p = window.setTimeout,
                d = window.clearTimeout;
            if (typeof console < "u") {
                var b = window.cancelAnimationFrame;
                typeof window.requestAnimationFrame != "function" &&
                    console.error(
                        "This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"
                    ),
                    typeof b != "function" &&
                        console.error(
                            "This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"
                        );
            }
            var y = !1,
                v = null,
                g = -1,
                h = 5,
                f = 0;
            (e.unstable_shouldYield = function () {
                return e.unstable_now() >= f;
            }),
                (r = function () {}),
                (e.unstable_forceFrameRate = function (j) {
                    0 > j || 125 < j
                        ? console.error(
                              "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
                          )
                        : (h = 0 < j ? Math.floor(1e3 / j) : 5);
                });
            var x = new MessageChannel(),
                w = x.port2;
            (x.port1.onmessage = function () {
                if (v !== null) {
                    var j = e.unstable_now();
                    f = j + h;
                    try {
                        v(!0, j) ? w.postMessage(null) : ((y = !1), (v = null));
                    } catch (A) {
                        throw (w.postMessage(null), A);
                    }
                } else y = !1;
            }),
                (t = function (j) {
                    (v = j), y || ((y = !0), w.postMessage(null));
                }),
                (n = function (j, A) {
                    g = p(function () {
                        j(e.unstable_now());
                    }, A);
                }),
                (a = function () {
                    d(g), (g = -1);
                });
        }
        function E(j, A) {
            var D = j.length;
            j.push(A);
            e: for (;;) {
                var X = (D - 1) >>> 1,
                    fe = j[X];
                if (fe !== void 0 && 0 < T(fe, A))
                    (j[X] = A), (j[D] = fe), (D = X);
                else break e;
            }
        }
        function S(j) {
            return (j = j[0]), j === void 0 ? null : j;
        }
        function $(j) {
            var A = j[0];
            if (A !== void 0) {
                var D = j.pop();
                if (D !== A) {
                    j[0] = D;
                    e: for (var X = 0, fe = j.length; X < fe; ) {
                        var gn = 2 * (X + 1) - 1,
                            bn = j[gn],
                            _r = gn + 1,
                            fa = j[_r];
                        if (bn !== void 0 && 0 > T(bn, D))
                            fa !== void 0 && 0 > T(fa, bn)
                                ? ((j[X] = fa), (j[_r] = D), (X = _r))
                                : ((j[X] = bn), (j[gn] = D), (X = gn));
                        else if (fa !== void 0 && 0 > T(fa, D))
                            (j[X] = fa), (j[_r] = D), (X = _r);
                        else break e;
                    }
                }
                return A;
            }
            return null;
        }
        function T(j, A) {
            var D = j.sortIndex - A.sortIndex;
            return D !== 0 ? D : j.id - A.id;
        }
        var P = [],
            U = [],
            Oe = 1,
            le = null,
            W = 3,
            lt = !1,
            He = !1,
            Wt = !1;
        function he(j) {
            for (var A = S(U); A !== null; ) {
                if (A.callback === null) $(U);
                else if (A.startTime <= j)
                    $(U), (A.sortIndex = A.expirationTime), E(P, A);
                else break;
                A = S(U);
            }
        }
        function ct(j) {
            if (((Wt = !1), he(j), !He))
                if (S(P) !== null) (He = !0), t(ha);
                else {
                    var A = S(U);
                    A !== null && n(ct, A.startTime - j);
                }
        }
        function ha(j, A) {
            (He = !1), Wt && ((Wt = !1), a()), (lt = !0);
            var D = W;
            try {
                for (
                    he(A), le = S(P);
                    le !== null &&
                    (!(le.expirationTime > A) ||
                        (j && !e.unstable_shouldYield()));

                ) {
                    var X = le.callback;
                    if (typeof X == "function") {
                        (le.callback = null), (W = le.priorityLevel);
                        var fe = X(le.expirationTime <= A);
                        (A = e.unstable_now()),
                            typeof fe == "function"
                                ? (le.callback = fe)
                                : le === S(P) && $(P),
                            he(A);
                    } else $(P);
                    le = S(P);
                }
                if (le !== null) var gn = !0;
                else {
                    var bn = S(U);
                    bn !== null && n(ct, bn.startTime - A), (gn = !1);
                }
                return gn;
            } finally {
                (le = null), (W = D), (lt = !1);
            }
        }
        var Go = r;
        (e.unstable_IdlePriority = 5),
            (e.unstable_ImmediatePriority = 1),
            (e.unstable_LowPriority = 4),
            (e.unstable_NormalPriority = 3),
            (e.unstable_Profiling = null),
            (e.unstable_UserBlockingPriority = 2),
            (e.unstable_cancelCallback = function (j) {
                j.callback = null;
            }),
            (e.unstable_continueExecution = function () {
                He || lt || ((He = !0), t(ha));
            }),
            (e.unstable_getCurrentPriorityLevel = function () {
                return W;
            }),
            (e.unstable_getFirstCallbackNode = function () {
                return S(P);
            }),
            (e.unstable_next = function (j) {
                switch (W) {
                    case 1:
                    case 2:
                    case 3:
                        var A = 3;
                        break;
                    default:
                        A = W;
                }
                var D = W;
                W = A;
                try {
                    return j();
                } finally {
                    W = D;
                }
            }),
            (e.unstable_pauseExecution = function () {}),
            (e.unstable_requestPaint = Go),
            (e.unstable_runWithPriority = function (j, A) {
                switch (j) {
                    case 1:
                    case 2:
                    case 3:
                    case 4:
                    case 5:
                        break;
                    default:
                        j = 3;
                }
                var D = W;
                W = j;
                try {
                    return A();
                } finally {
                    W = D;
                }
            }),
            (e.unstable_scheduleCallback = function (j, A, D) {
                var X = e.unstable_now();
                switch (
                    (typeof D == "object" && D !== null
                        ? ((D = D.delay),
                          (D = typeof D == "number" && 0 < D ? X + D : X))
                        : (D = X),
                    j)
                ) {
                    case 1:
                        var fe = -1;
                        break;
                    case 2:
                        fe = 250;
                        break;
                    case 5:
                        fe = 1073741823;
                        break;
                    case 4:
                        fe = 1e4;
                        break;
                    default:
                        fe = 5e3;
                }
                return (
                    (fe = D + fe),
                    (j = {
                        id: Oe++,
                        callback: A,
                        priorityLevel: j,
                        startTime: D,
                        expirationTime: fe,
                        sortIndex: -1,
                    }),
                    D > X
                        ? ((j.sortIndex = D),
                          E(U, j),
                          S(P) === null &&
                              j === S(U) &&
                              (Wt ? a() : (Wt = !0), n(ct, D - X)))
                        : ((j.sortIndex = fe),
                          E(P, j),
                          He || lt || ((He = !0), t(ha))),
                    j
                );
            }),
            (e.unstable_wrapCallback = function (j) {
                var A = W;
                return function () {
                    var D = W;
                    W = A;
                    try {
                        return j.apply(this, arguments);
                    } finally {
                        W = D;
                    }
                };
            });
    })(Iu),
        (Tu.exports = Iu);
    var Ng = Tu.exports;
    /** @license React v17.0.2
     * react-dom.production.min.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */ var Ir = k,
        H = uu,
        ae = Ng;
    function C(e) {
        for (
            var t =
                    "https://reactjs.org/docs/error-decoder.html?invariant=" +
                    e,
                n = 1;
            n < arguments.length;
            n++
        )
            t += "&args[]=" + encodeURIComponent(arguments[n]);
        return (
            "Minified React error #" +
            e +
            "; visit " +
            t +
            " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
        );
    }
    if (!Ir) throw Error(C(227));
    var zu = new Set(),
        ba = {};
    function qt(e, t) {
        vn(e, t), vn(e + "Capture", t);
    }
    function vn(e, t) {
        for (ba[e] = t, e = 0; e < t.length; e++) zu.add(t[e]);
    }
    var dt = !(
            typeof window > "u" ||
            typeof window.document > "u" ||
            typeof window.document.createElement > "u"
        ),
        Tg =
            /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
        Au = Object.prototype.hasOwnProperty,
        Du = {},
        Mu = {};
    function Ig(e) {
        return Au.call(Mu, e)
            ? !0
            : Au.call(Du, e)
            ? !1
            : Tg.test(e)
            ? (Mu[e] = !0)
            : ((Du[e] = !0), !1);
    }
    function zg(e, t, n, a) {
        if (n !== null && n.type === 0) return !1;
        switch (typeof t) {
            case "function":
            case "symbol":
                return !0;
            case "boolean":
                return a
                    ? !1
                    : n !== null
                    ? !n.acceptsBooleans
                    : ((e = e.toLowerCase().slice(0, 5)),
                      e !== "data-" && e !== "aria-");
            default:
                return !1;
        }
    }
    function Ag(e, t, n, a) {
        if (t === null || typeof t > "u" || zg(e, t, n, a)) return !0;
        if (a) return !1;
        if (n !== null)
            switch (n.type) {
                case 3:
                    return !t;
                case 4:
                    return t === !1;
                case 5:
                    return isNaN(t);
                case 6:
                    return isNaN(t) || 1 > t;
            }
        return !1;
    }
    function ve(e, t, n, a, r, i, o) {
        (this.acceptsBooleans = t === 2 || t === 3 || t === 4),
            (this.attributeName = a),
            (this.attributeNamespace = r),
            (this.mustUseProperty = n),
            (this.propertyName = e),
            (this.type = t),
            (this.sanitizeURL = i),
            (this.removeEmptyString = o);
    }
    var ce = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
        .split(" ")
        .forEach(function (e) {
            ce[e] = new ve(e, 0, !1, e, null, !1, !1);
        }),
        [
            ["acceptCharset", "accept-charset"],
            ["className", "class"],
            ["htmlFor", "for"],
            ["httpEquiv", "http-equiv"],
        ].forEach(function (e) {
            var t = e[0];
            ce[t] = new ve(t, 1, !1, e[1], null, !1, !1);
        }),
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(
            function (e) {
                ce[e] = new ve(e, 2, !1, e.toLowerCase(), null, !1, !1);
            }
        ),
        [
            "autoReverse",
            "externalResourcesRequired",
            "focusable",
            "preserveAlpha",
        ].forEach(function (e) {
            ce[e] = new ve(e, 2, !1, e, null, !1, !1);
        }),
        "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
            .split(" ")
            .forEach(function (e) {
                ce[e] = new ve(e, 3, !1, e.toLowerCase(), null, !1, !1);
            }),
        ["checked", "multiple", "muted", "selected"].forEach(function (e) {
            ce[e] = new ve(e, 3, !0, e, null, !1, !1);
        }),
        ["capture", "download"].forEach(function (e) {
            ce[e] = new ve(e, 4, !1, e, null, !1, !1);
        }),
        ["cols", "rows", "size", "span"].forEach(function (e) {
            ce[e] = new ve(e, 6, !1, e, null, !1, !1);
        }),
        ["rowSpan", "start"].forEach(function (e) {
            ce[e] = new ve(e, 5, !1, e.toLowerCase(), null, !1, !1);
        });
    var ts = /[\-:]([a-z])/g;
    function ns(e) {
        return e[1].toUpperCase();
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
        .split(" ")
        .forEach(function (e) {
            var t = e.replace(ts, ns);
            ce[t] = new ve(t, 1, !1, e, null, !1, !1);
        }),
        "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
            .split(" ")
            .forEach(function (e) {
                var t = e.replace(ts, ns);
                ce[t] = new ve(
                    t,
                    1,
                    !1,
                    e,
                    "http://www.w3.org/1999/xlink",
                    !1,
                    !1
                );
            }),
        ["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
            var t = e.replace(ts, ns);
            ce[t] = new ve(
                t,
                1,
                !1,
                e,
                "http://www.w3.org/XML/1998/namespace",
                !1,
                !1
            );
        }),
        ["tabIndex", "crossOrigin"].forEach(function (e) {
            ce[e] = new ve(e, 1, !1, e.toLowerCase(), null, !1, !1);
        }),
        (ce.xlinkHref = new ve(
            "xlinkHref",
            1,
            !1,
            "xlink:href",
            "http://www.w3.org/1999/xlink",
            !0,
            !1
        )),
        ["src", "href", "action", "formAction"].forEach(function (e) {
            ce[e] = new ve(e, 1, !1, e.toLowerCase(), null, !0, !0);
        });
    function as(e, t, n, a) {
        var r = ce.hasOwnProperty(t) ? ce[t] : null,
            i =
                r !== null
                    ? r.type === 0
                    : a
                    ? !1
                    : !(
                          !(2 < t.length) ||
                          (t[0] !== "o" && t[0] !== "O") ||
                          (t[1] !== "n" && t[1] !== "N")
                      );
        i ||
            (Ag(t, n, r, a) && (n = null),
            a || r === null
                ? Ig(t) &&
                  (n === null
                      ? e.removeAttribute(t)
                      : e.setAttribute(t, "" + n))
                : r.mustUseProperty
                ? (e[r.propertyName] =
                      n === null ? (r.type === 3 ? !1 : "") : n)
                : ((t = r.attributeName),
                  (a = r.attributeNamespace),
                  n === null
                      ? e.removeAttribute(t)
                      : ((r = r.type),
                        (n = r === 3 || (r === 4 && n === !0) ? "" : "" + n),
                        a ? e.setAttributeNS(a, t, n) : e.setAttribute(t, n))));
    }
    var Gt = Ir.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
        ya = 60103,
        Kt = 60106,
        vt = 60107,
        rs = 60108,
        ka = 60114,
        is = 60109,
        os = 60110,
        zr = 60112,
        va = 60113,
        Ar = 60120,
        Dr = 60115,
        ss = 60116,
        ls = 60121,
        cs = 60128,
        Ru = 60129,
        us = 60130,
        ds = 60131;
    if (typeof Symbol == "function" && Symbol.for) {
        var re = Symbol.for;
        (ya = re("react.element")),
            (Kt = re("react.portal")),
            (vt = re("react.fragment")),
            (rs = re("react.strict_mode")),
            (ka = re("react.profiler")),
            (is = re("react.provider")),
            (os = re("react.context")),
            (zr = re("react.forward_ref")),
            (va = re("react.suspense")),
            (Ar = re("react.suspense_list")),
            (Dr = re("react.memo")),
            (ss = re("react.lazy")),
            (ls = re("react.block")),
            re("react.scope"),
            (cs = re("react.opaque.id")),
            (Ru = re("react.debug_trace_mode")),
            (us = re("react.offscreen")),
            (ds = re("react.legacy_hidden"));
    }
    var Lu = typeof Symbol == "function" && Symbol.iterator;
    function wa(e) {
        return e === null || typeof e != "object"
            ? null
            : ((e = (Lu && e[Lu]) || e["@@iterator"]),
              typeof e == "function" ? e : null);
    }
    var ms;
    function xa(e) {
        if (ms === void 0)
            try {
                throw Error();
            } catch (n) {
                var t = n.stack.trim().match(/\n( *(at )?)/);
                ms = (t && t[1]) || "";
            }
        return (
            `
` +
            ms +
            e
        );
    }
    var ps = !1;
    function Mr(e, t) {
        if (!e || ps) return "";
        ps = !0;
        var n = Error.prepareStackTrace;
        Error.prepareStackTrace = void 0;
        try {
            if (t)
                if (
                    ((t = function () {
                        throw Error();
                    }),
                    Object.defineProperty(t.prototype, "props", {
                        set: function () {
                            throw Error();
                        },
                    }),
                    typeof Reflect == "object" && Reflect.construct)
                ) {
                    try {
                        Reflect.construct(t, []);
                    } catch (l) {
                        var a = l;
                    }
                    Reflect.construct(e, [], t);
                } else {
                    try {
                        t.call();
                    } catch (l) {
                        a = l;
                    }
                    e.call(t.prototype);
                }
            else {
                try {
                    throw Error();
                } catch (l) {
                    a = l;
                }
                e();
            }
        } catch (l) {
            if (l && a && typeof l.stack == "string") {
                for (
                    var r = l.stack.split(`
`),
                        i = a.stack.split(`
`),
                        o = r.length - 1,
                        s = i.length - 1;
                    1 <= o && 0 <= s && r[o] !== i[s];

                )
                    s--;
                for (; 1 <= o && 0 <= s; o--, s--)
                    if (r[o] !== i[s]) {
                        if (o !== 1 || s !== 1)
                            do
                                if ((o--, s--, 0 > s || r[o] !== i[s]))
                                    return (
                                        `
` + r[o].replace(" at new ", " at ")
                                    );
                            while (1 <= o && 0 <= s);
                        break;
                    }
            }
        } finally {
            (ps = !1), (Error.prepareStackTrace = n);
        }
        return (e = e ? e.displayName || e.name : "") ? xa(e) : "";
    }
    function Dg(e) {
        switch (e.tag) {
            case 5:
                return xa(e.type);
            case 16:
                return xa("Lazy");
            case 13:
                return xa("Suspense");
            case 19:
                return xa("SuspenseList");
            case 0:
            case 2:
            case 15:
                return (e = Mr(e.type, !1)), e;
            case 11:
                return (e = Mr(e.type.render, !1)), e;
            case 22:
                return (e = Mr(e.type._render, !1)), e;
            case 1:
                return (e = Mr(e.type, !0)), e;
            default:
                return "";
        }
    }
    function wn(e) {
        if (e == null) return null;
        if (typeof e == "function") return e.displayName || e.name || null;
        if (typeof e == "string") return e;
        switch (e) {
            case vt:
                return "Fragment";
            case Kt:
                return "Portal";
            case ka:
                return "Profiler";
            case rs:
                return "StrictMode";
            case va:
                return "Suspense";
            case Ar:
                return "SuspenseList";
        }
        if (typeof e == "object")
            switch (e.$$typeof) {
                case os:
                    return (e.displayName || "Context") + ".Consumer";
                case is:
                    return (e._context.displayName || "Context") + ".Provider";
                case zr:
                    var t = e.render;
                    return (
                        (t = t.displayName || t.name || ""),
                        e.displayName ||
                            (t !== "" ? "ForwardRef(" + t + ")" : "ForwardRef")
                    );
                case Dr:
                    return wn(e.type);
                case ls:
                    return wn(e._render);
                case ss:
                    (t = e._payload), (e = e._init);
                    try {
                        return wn(e(t));
                    } catch {}
            }
        return null;
    }
    function wt(e) {
        switch (typeof e) {
            case "boolean":
            case "number":
            case "object":
            case "string":
            case "undefined":
                return e;
            default:
                return "";
        }
    }
    function Yu(e) {
        var t = e.type;
        return (
            (e = e.nodeName) &&
            e.toLowerCase() === "input" &&
            (t === "checkbox" || t === "radio")
        );
    }
    function Mg(e) {
        var t = Yu(e) ? "checked" : "value",
            n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
            a = "" + e[t];
        if (
            !e.hasOwnProperty(t) &&
            typeof n < "u" &&
            typeof n.get == "function" &&
            typeof n.set == "function"
        ) {
            var r = n.get,
                i = n.set;
            return (
                Object.defineProperty(e, t, {
                    configurable: !0,
                    get: function () {
                        return r.call(this);
                    },
                    set: function (o) {
                        (a = "" + o), i.call(this, o);
                    },
                }),
                Object.defineProperty(e, t, { enumerable: n.enumerable }),
                {
                    getValue: function () {
                        return a;
                    },
                    setValue: function (o) {
                        a = "" + o;
                    },
                    stopTracking: function () {
                        (e._valueTracker = null), delete e[t];
                    },
                }
            );
        }
    }
    function Rr(e) {
        e._valueTracker || (e._valueTracker = Mg(e));
    }
    function Uu(e) {
        if (!e) return !1;
        var t = e._valueTracker;
        if (!t) return !0;
        var n = t.getValue(),
            a = "";
        return (
            e && (a = Yu(e) ? (e.checked ? "true" : "false") : e.value),
            (e = a),
            e !== n ? (t.setValue(e), !0) : !1
        );
    }
    function Lr(e) {
        if (
            ((e = e || (typeof document < "u" ? document : void 0)),
            typeof e > "u")
        )
            return null;
        try {
            return e.activeElement || e.body;
        } catch {
            return e.body;
        }
    }
    function hs(e, t) {
        var n = t.checked;
        return H({}, t, {
            defaultChecked: void 0,
            defaultValue: void 0,
            value: void 0,
            checked: n ?? e._wrapperState.initialChecked,
        });
    }
    function Bu(e, t) {
        var n = t.defaultValue == null ? "" : t.defaultValue,
            a = t.checked != null ? t.checked : t.defaultChecked;
        (n = wt(t.value != null ? t.value : n)),
            (e._wrapperState = {
                initialChecked: a,
                initialValue: n,
                controlled:
                    t.type === "checkbox" || t.type === "radio"
                        ? t.checked != null
                        : t.value != null,
            });
    }
    function Fu(e, t) {
        (t = t.checked), t != null && as(e, "checked", t, !1);
    }
    function fs(e, t) {
        Fu(e, t);
        var n = wt(t.value),
            a = t.type;
        if (n != null)
            a === "number"
                ? ((n === 0 && e.value === "") || e.value != n) &&
                  (e.value = "" + n)
                : e.value !== "" + n && (e.value = "" + n);
        else if (a === "submit" || a === "reset") {
            e.removeAttribute("value");
            return;
        }
        t.hasOwnProperty("value")
            ? gs(e, t.type, n)
            : t.hasOwnProperty("defaultValue") &&
              gs(e, t.type, wt(t.defaultValue)),
            t.checked == null &&
                t.defaultChecked != null &&
                (e.defaultChecked = !!t.defaultChecked);
    }
    function Ou(e, t, n) {
        if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
            var a = t.type;
            if (
                !(
                    (a !== "submit" && a !== "reset") ||
                    (t.value !== void 0 && t.value !== null)
                )
            )
                return;
            (t = "" + e._wrapperState.initialValue),
                n || t === e.value || (e.value = t),
                (e.defaultValue = t);
        }
        (n = e.name),
            n !== "" && (e.name = ""),
            (e.defaultChecked = !!e._wrapperState.initialChecked),
            n !== "" && (e.name = n);
    }
    function gs(e, t, n) {
        (t !== "number" || Lr(e.ownerDocument) !== e) &&
            (n == null
                ? (e.defaultValue = "" + e._wrapperState.initialValue)
                : e.defaultValue !== "" + n && (e.defaultValue = "" + n));
    }
    function Rg(e) {
        var t = "";
        return (
            Ir.Children.forEach(e, function (n) {
                n != null && (t += n);
            }),
            t
        );
    }
    function bs(e, t) {
        return (
            (e = H({ children: void 0 }, t)),
            (t = Rg(t.children)) && (e.children = t),
            e
        );
    }
    function xn(e, t, n, a) {
        if (((e = e.options), t)) {
            t = {};
            for (var r = 0; r < n.length; r++) t["$" + n[r]] = !0;
            for (n = 0; n < e.length; n++)
                (r = t.hasOwnProperty("$" + e[n].value)),
                    e[n].selected !== r && (e[n].selected = r),
                    r && a && (e[n].defaultSelected = !0);
        } else {
            for (n = "" + wt(n), t = null, r = 0; r < e.length; r++) {
                if (e[r].value === n) {
                    (e[r].selected = !0), a && (e[r].defaultSelected = !0);
                    return;
                }
                t !== null || e[r].disabled || (t = e[r]);
            }
            t !== null && (t.selected = !0);
        }
    }
    function ys(e, t) {
        if (t.dangerouslySetInnerHTML != null) throw Error(C(91));
        return H({}, t, {
            value: void 0,
            defaultValue: void 0,
            children: "" + e._wrapperState.initialValue,
        });
    }
    function Hu(e, t) {
        var n = t.value;
        if (n == null) {
            if (((n = t.children), (t = t.defaultValue), n != null)) {
                if (t != null) throw Error(C(92));
                if (Array.isArray(n)) {
                    if (!(1 >= n.length)) throw Error(C(93));
                    n = n[0];
                }
                t = n;
            }
            t == null && (t = ""), (n = t);
        }
        e._wrapperState = { initialValue: wt(n) };
    }
    function Vu(e, t) {
        var n = wt(t.value),
            a = wt(t.defaultValue);
        n != null &&
            ((n = "" + n),
            n !== e.value && (e.value = n),
            t.defaultValue == null &&
                e.defaultValue !== n &&
                (e.defaultValue = n)),
            a != null && (e.defaultValue = "" + a);
    }
    function Wu(e) {
        var t = e.textContent;
        t === e._wrapperState.initialValue &&
            t !== "" &&
            t !== null &&
            (e.value = t);
    }
    var ks = {
        html: "http://www.w3.org/1999/xhtml",
        mathml: "http://www.w3.org/1998/Math/MathML",
        svg: "http://www.w3.org/2000/svg",
    };
    function qu(e) {
        switch (e) {
            case "svg":
                return "http://www.w3.org/2000/svg";
            case "math":
                return "http://www.w3.org/1998/Math/MathML";
            default:
                return "http://www.w3.org/1999/xhtml";
        }
    }
    function vs(e, t) {
        return e == null || e === "http://www.w3.org/1999/xhtml"
            ? qu(t)
            : e === "http://www.w3.org/2000/svg" && t === "foreignObject"
            ? "http://www.w3.org/1999/xhtml"
            : e;
    }
    var Yr,
        Gu = (function (e) {
            return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
                ? function (t, n, a, r) {
                      MSApp.execUnsafeLocalFunction(function () {
                          return e(t, n, a, r);
                      });
                  }
                : e;
        })(function (e, t) {
            if (e.namespaceURI !== ks.svg || "innerHTML" in e) e.innerHTML = t;
            else {
                for (
                    Yr = Yr || document.createElement("div"),
                        Yr.innerHTML =
                            "<svg>" + t.valueOf().toString() + "</svg>",
                        t = Yr.firstChild;
                    e.firstChild;

                )
                    e.removeChild(e.firstChild);
                for (; t.firstChild; ) e.appendChild(t.firstChild);
            }
        });
    function Sa(e, t) {
        if (t) {
            var n = e.firstChild;
            if (n && n === e.lastChild && n.nodeType === 3) {
                n.nodeValue = t;
                return;
            }
        }
        e.textContent = t;
    }
    var Ea = {
            animationIterationCount: !0,
            borderImageOutset: !0,
            borderImageSlice: !0,
            borderImageWidth: !0,
            boxFlex: !0,
            boxFlexGroup: !0,
            boxOrdinalGroup: !0,
            columnCount: !0,
            columns: !0,
            flex: !0,
            flexGrow: !0,
            flexPositive: !0,
            flexShrink: !0,
            flexNegative: !0,
            flexOrder: !0,
            gridArea: !0,
            gridRow: !0,
            gridRowEnd: !0,
            gridRowSpan: !0,
            gridRowStart: !0,
            gridColumn: !0,
            gridColumnEnd: !0,
            gridColumnSpan: !0,
            gridColumnStart: !0,
            fontWeight: !0,
            lineClamp: !0,
            lineHeight: !0,
            opacity: !0,
            order: !0,
            orphans: !0,
            tabSize: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0,
            fillOpacity: !0,
            floodOpacity: !0,
            stopOpacity: !0,
            strokeDasharray: !0,
            strokeDashoffset: !0,
            strokeMiterlimit: !0,
            strokeOpacity: !0,
            strokeWidth: !0,
        },
        Lg = ["Webkit", "ms", "Moz", "O"];
    Object.keys(Ea).forEach(function (e) {
        Lg.forEach(function (t) {
            (t = t + e.charAt(0).toUpperCase() + e.substring(1)),
                (Ea[t] = Ea[e]);
        });
    });
    function Ku(e, t, n) {
        return t == null || typeof t == "boolean" || t === ""
            ? ""
            : n ||
              typeof t != "number" ||
              t === 0 ||
              (Ea.hasOwnProperty(e) && Ea[e])
            ? ("" + t).trim()
            : t + "px";
    }
    function Ju(e, t) {
        e = e.style;
        for (var n in t)
            if (t.hasOwnProperty(n)) {
                var a = n.indexOf("--") === 0,
                    r = Ku(n, t[n], a);
                n === "float" && (n = "cssFloat"),
                    a ? e.setProperty(n, r) : (e[n] = r);
            }
    }
    var Yg = H(
        { menuitem: !0 },
        {
            area: !0,
            base: !0,
            br: !0,
            col: !0,
            embed: !0,
            hr: !0,
            img: !0,
            input: !0,
            keygen: !0,
            link: !0,
            meta: !0,
            param: !0,
            source: !0,
            track: !0,
            wbr: !0,
        }
    );
    function ws(e, t) {
        if (t) {
            if (
                Yg[e] &&
                (t.children != null || t.dangerouslySetInnerHTML != null)
            )
                throw Error(C(137, e));
            if (t.dangerouslySetInnerHTML != null) {
                if (t.children != null) throw Error(C(60));
                if (
                    !(
                        typeof t.dangerouslySetInnerHTML == "object" &&
                        "__html" in t.dangerouslySetInnerHTML
                    )
                )
                    throw Error(C(61));
            }
            if (t.style != null && typeof t.style != "object")
                throw Error(C(62));
        }
    }
    function xs(e, t) {
        if (e.indexOf("-") === -1) return typeof t.is == "string";
        switch (e) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
                return !1;
            default:
                return !0;
        }
    }
    function Ss(e) {
        return (
            (e = e.target || e.srcElement || window),
            e.correspondingUseElement && (e = e.correspondingUseElement),
            e.nodeType === 3 ? e.parentNode : e
        );
    }
    var Es = null,
        Sn = null,
        En = null;
    function Qu(e) {
        if ((e = Oa(e))) {
            if (typeof Es != "function") throw Error(C(280));
            var t = e.stateNode;
            t && ((t = ai(t)), Es(e.stateNode, e.type, t));
        }
    }
    function Xu(e) {
        Sn ? (En ? En.push(e) : (En = [e])) : (Sn = e);
    }
    function Zu() {
        if (Sn) {
            var e = Sn,
                t = En;
            if (((En = Sn = null), Qu(e), t))
                for (e = 0; e < t.length; e++) Qu(t[e]);
        }
    }
    function Cs(e, t) {
        return e(t);
    }
    function ed(e, t, n, a, r) {
        return e(t, n, a, r);
    }
    function $s() {}
    var td = Cs,
        Jt = !1,
        js = !1;
    function Ps() {
        (Sn !== null || En !== null) && ($s(), Zu());
    }
    function Ug(e, t, n) {
        if (js) return e(t, n);
        js = !0;
        try {
            return td(e, t, n);
        } finally {
            (js = !1), Ps();
        }
    }
    function Ca(e, t) {
        var n = e.stateNode;
        if (n === null) return null;
        var a = ai(n);
        if (a === null) return null;
        n = a[t];
        e: switch (t) {
            case "onClick":
            case "onClickCapture":
            case "onDoubleClick":
            case "onDoubleClickCapture":
            case "onMouseDown":
            case "onMouseDownCapture":
            case "onMouseMove":
            case "onMouseMoveCapture":
            case "onMouseUp":
            case "onMouseUpCapture":
            case "onMouseEnter":
                (a = !a.disabled) ||
                    ((e = e.type),
                    (a = !(
                        e === "button" ||
                        e === "input" ||
                        e === "select" ||
                        e === "textarea"
                    ))),
                    (e = !a);
                break e;
            default:
                e = !1;
        }
        if (e) return null;
        if (n && typeof n != "function") throw Error(C(231, t, typeof n));
        return n;
    }
    var _s = !1;
    if (dt)
        try {
            var $a = {};
            Object.defineProperty($a, "passive", {
                get: function () {
                    _s = !0;
                },
            }),
                window.addEventListener("test", $a, $a),
                window.removeEventListener("test", $a, $a);
        } catch {
            _s = !1;
        }
    function Bg(e, t, n, a, r, i, o, s, l) {
        var u = Array.prototype.slice.call(arguments, 3);
        try {
            t.apply(n, u);
        } catch (m) {
            this.onError(m);
        }
    }
    var ja = !1,
        Ur = null,
        Br = !1,
        Ns = null,
        Fg = {
            onError: function (e) {
                (ja = !0), (Ur = e);
            },
        };
    function Og(e, t, n, a, r, i, o, s, l) {
        (ja = !1), (Ur = null), Bg.apply(Fg, arguments);
    }
    function Hg(e, t, n, a, r, i, o, s, l) {
        if ((Og.apply(this, arguments), ja)) {
            if (ja) {
                var u = Ur;
                (ja = !1), (Ur = null);
            } else throw Error(C(198));
            Br || ((Br = !0), (Ns = u));
        }
    }
    function Qt(e) {
        var t = e,
            n = e;
        if (e.alternate) for (; t.return; ) t = t.return;
        else {
            e = t;
            do (t = e), t.flags & 1026 && (n = t.return), (e = t.return);
            while (e);
        }
        return t.tag === 3 ? n : null;
    }
    function nd(e) {
        if (e.tag === 13) {
            var t = e.memoizedState;
            if (
                (t === null &&
                    ((e = e.alternate), e !== null && (t = e.memoizedState)),
                t !== null)
            )
                return t.dehydrated;
        }
        return null;
    }
    function ad(e) {
        if (Qt(e) !== e) throw Error(C(188));
    }
    function Vg(e) {
        var t = e.alternate;
        if (!t) {
            if (((t = Qt(e)), t === null)) throw Error(C(188));
            return t !== e ? null : e;
        }
        for (var n = e, a = t; ; ) {
            var r = n.return;
            if (r === null) break;
            var i = r.alternate;
            if (i === null) {
                if (((a = r.return), a !== null)) {
                    n = a;
                    continue;
                }
                break;
            }
            if (r.child === i.child) {
                for (i = r.child; i; ) {
                    if (i === n) return ad(r), e;
                    if (i === a) return ad(r), t;
                    i = i.sibling;
                }
                throw Error(C(188));
            }
            if (n.return !== a.return) (n = r), (a = i);
            else {
                for (var o = !1, s = r.child; s; ) {
                    if (s === n) {
                        (o = !0), (n = r), (a = i);
                        break;
                    }
                    if (s === a) {
                        (o = !0), (a = r), (n = i);
                        break;
                    }
                    s = s.sibling;
                }
                if (!o) {
                    for (s = i.child; s; ) {
                        if (s === n) {
                            (o = !0), (n = i), (a = r);
                            break;
                        }
                        if (s === a) {
                            (o = !0), (a = i), (n = r);
                            break;
                        }
                        s = s.sibling;
                    }
                    if (!o) throw Error(C(189));
                }
            }
            if (n.alternate !== a) throw Error(C(190));
        }
        if (n.tag !== 3) throw Error(C(188));
        return n.stateNode.current === n ? e : t;
    }
    function rd(e) {
        if (((e = Vg(e)), !e)) return null;
        for (var t = e; ; ) {
            if (t.tag === 5 || t.tag === 6) return t;
            if (t.child) (t.child.return = t), (t = t.child);
            else {
                if (t === e) break;
                for (; !t.sibling; ) {
                    if (!t.return || t.return === e) return null;
                    t = t.return;
                }
                (t.sibling.return = t.return), (t = t.sibling);
            }
        }
        return null;
    }
    function id(e, t) {
        for (var n = e.alternate; t !== null; ) {
            if (t === e || t === n) return !0;
            t = t.return;
        }
        return !1;
    }
    var od,
        Ts,
        sd,
        ld,
        Is = !1,
        Ze = [],
        xt = null,
        St = null,
        Et = null,
        Pa = new Map(),
        _a = new Map(),
        Na = [],
        cd =
            "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
                " "
            );
    function zs(e, t, n, a, r) {
        return {
            blockedOn: e,
            domEventName: t,
            eventSystemFlags: n | 16,
            nativeEvent: r,
            targetContainers: [a],
        };
    }
    function ud(e, t) {
        switch (e) {
            case "focusin":
            case "focusout":
                xt = null;
                break;
            case "dragenter":
            case "dragleave":
                St = null;
                break;
            case "mouseover":
            case "mouseout":
                Et = null;
                break;
            case "pointerover":
            case "pointerout":
                Pa.delete(t.pointerId);
                break;
            case "gotpointercapture":
            case "lostpointercapture":
                _a.delete(t.pointerId);
        }
    }
    function Ta(e, t, n, a, r, i) {
        return e === null || e.nativeEvent !== i
            ? ((e = zs(t, n, a, r, i)),
              t !== null && ((t = Oa(t)), t !== null && Ts(t)),
              e)
            : ((e.eventSystemFlags |= a),
              (t = e.targetContainers),
              r !== null && t.indexOf(r) === -1 && t.push(r),
              e);
    }
    function Wg(e, t, n, a, r) {
        switch (t) {
            case "focusin":
                return (xt = Ta(xt, e, t, n, a, r)), !0;
            case "dragenter":
                return (St = Ta(St, e, t, n, a, r)), !0;
            case "mouseover":
                return (Et = Ta(Et, e, t, n, a, r)), !0;
            case "pointerover":
                var i = r.pointerId;
                return Pa.set(i, Ta(Pa.get(i) || null, e, t, n, a, r)), !0;
            case "gotpointercapture":
                return (
                    (i = r.pointerId),
                    _a.set(i, Ta(_a.get(i) || null, e, t, n, a, r)),
                    !0
                );
        }
        return !1;
    }
    function qg(e) {
        var t = Xt(e.target);
        if (t !== null) {
            var n = Qt(t);
            if (n !== null) {
                if (((t = n.tag), t === 13)) {
                    if (((t = nd(n)), t !== null)) {
                        (e.blockedOn = t),
                            ld(e.lanePriority, function () {
                                ae.unstable_runWithPriority(
                                    e.priority,
                                    function () {
                                        sd(n);
                                    }
                                );
                            });
                        return;
                    }
                } else if (t === 3 && n.stateNode.hydrate) {
                    e.blockedOn =
                        n.tag === 3 ? n.stateNode.containerInfo : null;
                    return;
                }
            }
        }
        e.blockedOn = null;
    }
    function Fr(e) {
        if (e.blockedOn !== null) return !1;
        for (var t = e.targetContainers; 0 < t.length; ) {
            var n = Ys(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
            if (n !== null)
                return (t = Oa(n)), t !== null && Ts(t), (e.blockedOn = n), !1;
            t.shift();
        }
        return !0;
    }
    function dd(e, t, n) {
        Fr(e) && n.delete(t);
    }
    function Gg() {
        for (Is = !1; 0 < Ze.length; ) {
            var e = Ze[0];
            if (e.blockedOn !== null) {
                (e = Oa(e.blockedOn)), e !== null && od(e);
                break;
            }
            for (var t = e.targetContainers; 0 < t.length; ) {
                var n = Ys(
                    e.domEventName,
                    e.eventSystemFlags,
                    t[0],
                    e.nativeEvent
                );
                if (n !== null) {
                    e.blockedOn = n;
                    break;
                }
                t.shift();
            }
            e.blockedOn === null && Ze.shift();
        }
        xt !== null && Fr(xt) && (xt = null),
            St !== null && Fr(St) && (St = null),
            Et !== null && Fr(Et) && (Et = null),
            Pa.forEach(dd),
            _a.forEach(dd);
    }
    function Ia(e, t) {
        e.blockedOn === t &&
            ((e.blockedOn = null),
            Is ||
                ((Is = !0),
                ae.unstable_scheduleCallback(ae.unstable_NormalPriority, Gg)));
    }
    function md(e) {
        function t(r) {
            return Ia(r, e);
        }
        if (0 < Ze.length) {
            Ia(Ze[0], e);
            for (var n = 1; n < Ze.length; n++) {
                var a = Ze[n];
                a.blockedOn === e && (a.blockedOn = null);
            }
        }
        for (
            xt !== null && Ia(xt, e),
                St !== null && Ia(St, e),
                Et !== null && Ia(Et, e),
                Pa.forEach(t),
                _a.forEach(t),
                n = 0;
            n < Na.length;
            n++
        )
            (a = Na[n]), a.blockedOn === e && (a.blockedOn = null);
        for (; 0 < Na.length && ((n = Na[0]), n.blockedOn === null); )
            qg(n), n.blockedOn === null && Na.shift();
    }
    function Or(e, t) {
        var n = {};
        return (
            (n[e.toLowerCase()] = t.toLowerCase()),
            (n["Webkit" + e] = "webkit" + t),
            (n["Moz" + e] = "moz" + t),
            n
        );
    }
    var Cn = {
            animationend: Or("Animation", "AnimationEnd"),
            animationiteration: Or("Animation", "AnimationIteration"),
            animationstart: Or("Animation", "AnimationStart"),
            transitionend: Or("Transition", "TransitionEnd"),
        },
        As = {},
        pd = {};
    dt &&
        ((pd = document.createElement("div").style),
        "AnimationEvent" in window ||
            (delete Cn.animationend.animation,
            delete Cn.animationiteration.animation,
            delete Cn.animationstart.animation),
        "TransitionEvent" in window || delete Cn.transitionend.transition);
    function Hr(e) {
        if (As[e]) return As[e];
        if (!Cn[e]) return e;
        var t = Cn[e],
            n;
        for (n in t) if (t.hasOwnProperty(n) && n in pd) return (As[e] = t[n]);
        return e;
    }
    var hd = Hr("animationend"),
        fd = Hr("animationiteration"),
        gd = Hr("animationstart"),
        bd = Hr("transitionend"),
        yd = new Map(),
        Ds = new Map(),
        Kg = [
            "abort",
            "abort",
            hd,
            "animationEnd",
            fd,
            "animationIteration",
            gd,
            "animationStart",
            "canplay",
            "canPlay",
            "canplaythrough",
            "canPlayThrough",
            "durationchange",
            "durationChange",
            "emptied",
            "emptied",
            "encrypted",
            "encrypted",
            "ended",
            "ended",
            "error",
            "error",
            "gotpointercapture",
            "gotPointerCapture",
            "load",
            "load",
            "loadeddata",
            "loadedData",
            "loadedmetadata",
            "loadedMetadata",
            "loadstart",
            "loadStart",
            "lostpointercapture",
            "lostPointerCapture",
            "playing",
            "playing",
            "progress",
            "progress",
            "seeking",
            "seeking",
            "stalled",
            "stalled",
            "suspend",
            "suspend",
            "timeupdate",
            "timeUpdate",
            bd,
            "transitionEnd",
            "waiting",
            "waiting",
        ];
    function Ms(e, t) {
        for (var n = 0; n < e.length; n += 2) {
            var a = e[n],
                r = e[n + 1];
            (r = "on" + (r[0].toUpperCase() + r.slice(1))),
                Ds.set(a, t),
                yd.set(a, r),
                qt(r, [a]);
        }
    }
    var Jg = ae.unstable_now;
    Jg();
    var B = 8;
    function $n(e) {
        if (1 & e) return (B = 15), 1;
        if (2 & e) return (B = 14), 2;
        if (4 & e) return (B = 13), 4;
        var t = 24 & e;
        return t !== 0
            ? ((B = 12), t)
            : e & 32
            ? ((B = 11), 32)
            : ((t = 192 & e),
              t !== 0
                  ? ((B = 10), t)
                  : e & 256
                  ? ((B = 9), 256)
                  : ((t = 3584 & e),
                    t !== 0
                        ? ((B = 8), t)
                        : e & 4096
                        ? ((B = 7), 4096)
                        : ((t = 4186112 & e),
                          t !== 0
                              ? ((B = 6), t)
                              : ((t = 62914560 & e),
                                t !== 0
                                    ? ((B = 5), t)
                                    : e & 67108864
                                    ? ((B = 4), 67108864)
                                    : e & 134217728
                                    ? ((B = 3), 134217728)
                                    : ((t = 805306368 & e),
                                      t !== 0
                                          ? ((B = 2), t)
                                          : 1073741824 & e
                                          ? ((B = 1), 1073741824)
                                          : ((B = 8), e))))));
    }
    function Qg(e) {
        switch (e) {
            case 99:
                return 15;
            case 98:
                return 10;
            case 97:
            case 96:
                return 8;
            case 95:
                return 2;
            default:
                return 0;
        }
    }
    function Xg(e) {
        switch (e) {
            case 15:
            case 14:
                return 99;
            case 13:
            case 12:
            case 11:
            case 10:
                return 98;
            case 9:
            case 8:
            case 7:
            case 6:
            case 4:
            case 5:
                return 97;
            case 3:
            case 2:
            case 1:
                return 95;
            case 0:
                return 90;
            default:
                throw Error(C(358, e));
        }
    }
    function za(e, t) {
        var n = e.pendingLanes;
        if (n === 0) return (B = 0);
        var a = 0,
            r = 0,
            i = e.expiredLanes,
            o = e.suspendedLanes,
            s = e.pingedLanes;
        if (i !== 0) (a = i), (r = B = 15);
        else if (((i = n & 134217727), i !== 0)) {
            var l = i & ~o;
            l !== 0
                ? ((a = $n(l)), (r = B))
                : ((s &= i), s !== 0 && ((a = $n(s)), (r = B)));
        } else
            (i = n & ~o),
                i !== 0
                    ? ((a = $n(i)), (r = B))
                    : s !== 0 && ((a = $n(s)), (r = B));
        if (a === 0) return 0;
        if (
            ((a = 31 - Ct(a)),
            (a = n & (((0 > a ? 0 : 1 << a) << 1) - 1)),
            t !== 0 && t !== a && !(t & o))
        ) {
            if (($n(t), r <= B)) return t;
            B = r;
        }
        if (((t = e.entangledLanes), t !== 0))
            for (e = e.entanglements, t &= a; 0 < t; )
                (n = 31 - Ct(t)), (r = 1 << n), (a |= e[n]), (t &= ~r);
        return a;
    }
    function kd(e) {
        return (
            (e = e.pendingLanes & -1073741825),
            e !== 0 ? e : e & 1073741824 ? 1073741824 : 0
        );
    }
    function Vr(e, t) {
        switch (e) {
            case 15:
                return 1;
            case 14:
                return 2;
            case 12:
                return (e = jn(24 & ~t)), e === 0 ? Vr(10, t) : e;
            case 10:
                return (e = jn(192 & ~t)), e === 0 ? Vr(8, t) : e;
            case 8:
                return (
                    (e = jn(3584 & ~t)),
                    e === 0 && ((e = jn(4186112 & ~t)), e === 0 && (e = 512)),
                    e
                );
            case 2:
                return (t = jn(805306368 & ~t)), t === 0 && (t = 268435456), t;
        }
        throw Error(C(358, e));
    }
    function jn(e) {
        return e & -e;
    }
    function Rs(e) {
        for (var t = [], n = 0; 31 > n; n++) t.push(e);
        return t;
    }
    function Wr(e, t, n) {
        e.pendingLanes |= t;
        var a = t - 1;
        (e.suspendedLanes &= a),
            (e.pingedLanes &= a),
            (e = e.eventTimes),
            (t = 31 - Ct(t)),
            (e[t] = n);
    }
    var Ct = Math.clz32 ? Math.clz32 : tb,
        Zg = Math.log,
        eb = Math.LN2;
    function tb(e) {
        return e === 0 ? 32 : (31 - ((Zg(e) / eb) | 0)) | 0;
    }
    var nb = ae.unstable_UserBlockingPriority,
        ab = ae.unstable_runWithPriority,
        qr = !0;
    function rb(e, t, n, a) {
        Jt || $s();
        var r = Ls,
            i = Jt;
        Jt = !0;
        try {
            ed(r, e, t, n, a);
        } finally {
            (Jt = i) || Ps();
        }
    }
    function ib(e, t, n, a) {
        ab(nb, Ls.bind(null, e, t, n, a));
    }
    function Ls(e, t, n, a) {
        if (qr) {
            var r;
            if ((r = (t & 4) === 0) && 0 < Ze.length && -1 < cd.indexOf(e))
                (e = zs(null, e, t, n, a)), Ze.push(e);
            else {
                var i = Ys(e, t, n, a);
                if (i === null) r && ud(e, a);
                else {
                    if (r) {
                        if (-1 < cd.indexOf(e)) {
                            (e = zs(i, e, t, n, a)), Ze.push(e);
                            return;
                        }
                        if (Wg(i, e, t, n, a)) return;
                        ud(e, a);
                    }
                    Kd(e, t, a, null, n);
                }
            }
        }
    }
    function Ys(e, t, n, a) {
        var r = Ss(a);
        if (((r = Xt(r)), r !== null)) {
            var i = Qt(r);
            if (i === null) r = null;
            else {
                var o = i.tag;
                if (o === 13) {
                    if (((r = nd(i)), r !== null)) return r;
                    r = null;
                } else if (o === 3) {
                    if (i.stateNode.hydrate)
                        return i.tag === 3 ? i.stateNode.containerInfo : null;
                    r = null;
                } else i !== r && (r = null);
            }
        }
        return Kd(e, t, a, r, n), null;
    }
    var $t = null,
        Us = null,
        Gr = null;
    function vd() {
        if (Gr) return Gr;
        var e,
            t = Us,
            n = t.length,
            a,
            r = "value" in $t ? $t.value : $t.textContent,
            i = r.length;
        for (e = 0; e < n && t[e] === r[e]; e++);
        var o = n - e;
        for (a = 1; a <= o && t[n - a] === r[i - a]; a++);
        return (Gr = r.slice(e, 1 < a ? 1 - a : void 0));
    }
    function Kr(e) {
        var t = e.keyCode;
        return (
            "charCode" in e
                ? ((e = e.charCode), e === 0 && t === 13 && (e = 13))
                : (e = t),
            e === 10 && (e = 13),
            32 <= e || e === 13 ? e : 0
        );
    }
    function Jr() {
        return !0;
    }
    function wd() {
        return !1;
    }
    function _e(e) {
        function t(n, a, r, i, o) {
            (this._reactName = n),
                (this._targetInst = r),
                (this.type = a),
                (this.nativeEvent = i),
                (this.target = o),
                (this.currentTarget = null);
            for (var s in e)
                e.hasOwnProperty(s) &&
                    ((n = e[s]), (this[s] = n ? n(i) : i[s]));
            return (
                (this.isDefaultPrevented = (
                    i.defaultPrevented != null
                        ? i.defaultPrevented
                        : i.returnValue === !1
                )
                    ? Jr
                    : wd),
                (this.isPropagationStopped = wd),
                this
            );
        }
        return (
            H(t.prototype, {
                preventDefault: function () {
                    this.defaultPrevented = !0;
                    var n = this.nativeEvent;
                    n &&
                        (n.preventDefault
                            ? n.preventDefault()
                            : typeof n.returnValue != "unknown" &&
                              (n.returnValue = !1),
                        (this.isDefaultPrevented = Jr));
                },
                stopPropagation: function () {
                    var n = this.nativeEvent;
                    n &&
                        (n.stopPropagation
                            ? n.stopPropagation()
                            : typeof n.cancelBubble != "unknown" &&
                              (n.cancelBubble = !0),
                        (this.isPropagationStopped = Jr));
                },
                persist: function () {},
                isPersistent: Jr,
            }),
            t
        );
    }
    var Pn = {
            eventPhase: 0,
            bubbles: 0,
            cancelable: 0,
            timeStamp: function (e) {
                return e.timeStamp || Date.now();
            },
            defaultPrevented: 0,
            isTrusted: 0,
        },
        Bs = _e(Pn),
        Aa = H({}, Pn, { view: 0, detail: 0 }),
        ob = _e(Aa),
        Fs,
        Os,
        Da,
        Qr = H({}, Aa, {
            screenX: 0,
            screenY: 0,
            clientX: 0,
            clientY: 0,
            pageX: 0,
            pageY: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            getModifierState: Vs,
            button: 0,
            buttons: 0,
            relatedTarget: function (e) {
                return e.relatedTarget === void 0
                    ? e.fromElement === e.srcElement
                        ? e.toElement
                        : e.fromElement
                    : e.relatedTarget;
            },
            movementX: function (e) {
                return "movementX" in e
                    ? e.movementX
                    : (e !== Da &&
                          (Da && e.type === "mousemove"
                              ? ((Fs = e.screenX - Da.screenX),
                                (Os = e.screenY - Da.screenY))
                              : (Os = Fs = 0),
                          (Da = e)),
                      Fs);
            },
            movementY: function (e) {
                return "movementY" in e ? e.movementY : Os;
            },
        }),
        xd = _e(Qr),
        sb = H({}, Qr, { dataTransfer: 0 }),
        lb = _e(sb),
        cb = H({}, Aa, { relatedTarget: 0 }),
        Hs = _e(cb),
        ub = H({}, Pn, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
        db = _e(ub),
        mb = H({}, Pn, {
            clipboardData: function (e) {
                return "clipboardData" in e
                    ? e.clipboardData
                    : window.clipboardData;
            },
        }),
        pb = _e(mb),
        hb = H({}, Pn, { data: 0 }),
        Sd = _e(hb),
        fb = {
            Esc: "Escape",
            Spacebar: " ",
            Left: "ArrowLeft",
            Up: "ArrowUp",
            Right: "ArrowRight",
            Down: "ArrowDown",
            Del: "Delete",
            Win: "OS",
            Menu: "ContextMenu",
            Apps: "ContextMenu",
            Scroll: "ScrollLock",
            MozPrintableKey: "Unidentified",
        },
        gb = {
            8: "Backspace",
            9: "Tab",
            12: "Clear",
            13: "Enter",
            16: "Shift",
            17: "Control",
            18: "Alt",
            19: "Pause",
            20: "CapsLock",
            27: "Escape",
            32: " ",
            33: "PageUp",
            34: "PageDown",
            35: "End",
            36: "Home",
            37: "ArrowLeft",
            38: "ArrowUp",
            39: "ArrowRight",
            40: "ArrowDown",
            45: "Insert",
            46: "Delete",
            112: "F1",
            113: "F2",
            114: "F3",
            115: "F4",
            116: "F5",
            117: "F6",
            118: "F7",
            119: "F8",
            120: "F9",
            121: "F10",
            122: "F11",
            123: "F12",
            144: "NumLock",
            145: "ScrollLock",
            224: "Meta",
        },
        bb = {
            Alt: "altKey",
            Control: "ctrlKey",
            Meta: "metaKey",
            Shift: "shiftKey",
        };
    function yb(e) {
        var t = this.nativeEvent;
        return t.getModifierState
            ? t.getModifierState(e)
            : (e = bb[e])
            ? !!t[e]
            : !1;
    }
    function Vs() {
        return yb;
    }
    var kb = H({}, Aa, {
            key: function (e) {
                if (e.key) {
                    var t = fb[e.key] || e.key;
                    if (t !== "Unidentified") return t;
                }
                return e.type === "keypress"
                    ? ((e = Kr(e)), e === 13 ? "Enter" : String.fromCharCode(e))
                    : e.type === "keydown" || e.type === "keyup"
                    ? gb[e.keyCode] || "Unidentified"
                    : "";
            },
            code: 0,
            location: 0,
            ctrlKey: 0,
            shiftKey: 0,
            altKey: 0,
            metaKey: 0,
            repeat: 0,
            locale: 0,
            getModifierState: Vs,
            charCode: function (e) {
                return e.type === "keypress" ? Kr(e) : 0;
            },
            keyCode: function (e) {
                return e.type === "keydown" || e.type === "keyup"
                    ? e.keyCode
                    : 0;
            },
            which: function (e) {
                return e.type === "keypress"
                    ? Kr(e)
                    : e.type === "keydown" || e.type === "keyup"
                    ? e.keyCode
                    : 0;
            },
        }),
        vb = _e(kb),
        wb = H({}, Qr, {
            pointerId: 0,
            width: 0,
            height: 0,
            pressure: 0,
            tangentialPressure: 0,
            tiltX: 0,
            tiltY: 0,
            twist: 0,
            pointerType: 0,
            isPrimary: 0,
        }),
        Ed = _e(wb),
        xb = H({}, Aa, {
            touches: 0,
            targetTouches: 0,
            changedTouches: 0,
            altKey: 0,
            metaKey: 0,
            ctrlKey: 0,
            shiftKey: 0,
            getModifierState: Vs,
        }),
        Sb = _e(xb),
        Eb = H({}, Pn, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
        Cb = _e(Eb),
        $b = H({}, Qr, {
            deltaX: function (e) {
                return "deltaX" in e
                    ? e.deltaX
                    : "wheelDeltaX" in e
                    ? -e.wheelDeltaX
                    : 0;
            },
            deltaY: function (e) {
                return "deltaY" in e
                    ? e.deltaY
                    : "wheelDeltaY" in e
                    ? -e.wheelDeltaY
                    : "wheelDelta" in e
                    ? -e.wheelDelta
                    : 0;
            },
            deltaZ: 0,
            deltaMode: 0,
        }),
        jb = _e($b),
        Pb = [9, 13, 27, 32],
        Ws = dt && "CompositionEvent" in window,
        Ma = null;
    dt && "documentMode" in document && (Ma = document.documentMode);
    var _b = dt && "TextEvent" in window && !Ma,
        Cd = dt && (!Ws || (Ma && 8 < Ma && 11 >= Ma)),
        $d = String.fromCharCode(32),
        jd = !1;
    function Pd(e, t) {
        switch (e) {
            case "keyup":
                return Pb.indexOf(t.keyCode) !== -1;
            case "keydown":
                return t.keyCode !== 229;
            case "keypress":
            case "mousedown":
            case "focusout":
                return !0;
            default:
                return !1;
        }
    }
    function _d(e) {
        return (
            (e = e.detail), typeof e == "object" && "data" in e ? e.data : null
        );
    }
    var _n = !1;
    function Nb(e, t) {
        switch (e) {
            case "compositionend":
                return _d(t);
            case "keypress":
                return t.which !== 32 ? null : ((jd = !0), $d);
            case "textInput":
                return (e = t.data), e === $d && jd ? null : e;
            default:
                return null;
        }
    }
    function Tb(e, t) {
        if (_n)
            return e === "compositionend" || (!Ws && Pd(e, t))
                ? ((e = vd()), (Gr = Us = $t = null), (_n = !1), e)
                : null;
        switch (e) {
            case "paste":
                return null;
            case "keypress":
                if (
                    !(t.ctrlKey || t.altKey || t.metaKey) ||
                    (t.ctrlKey && t.altKey)
                ) {
                    if (t.char && 1 < t.char.length) return t.char;
                    if (t.which) return String.fromCharCode(t.which);
                }
                return null;
            case "compositionend":
                return Cd && t.locale !== "ko" ? null : t.data;
            default:
                return null;
        }
    }
    var Ib = {
        color: !0,
        date: !0,
        datetime: !0,
        "datetime-local": !0,
        email: !0,
        month: !0,
        number: !0,
        password: !0,
        range: !0,
        search: !0,
        tel: !0,
        text: !0,
        time: !0,
        url: !0,
        week: !0,
    };
    function Nd(e) {
        var t = e && e.nodeName && e.nodeName.toLowerCase();
        return t === "input" ? !!Ib[e.type] : t === "textarea";
    }
    function Td(e, t, n, a) {
        Xu(a),
            (t = Zr(t, "onChange")),
            0 < t.length &&
                ((n = new Bs("onChange", "change", null, n, a)),
                e.push({ event: n, listeners: t }));
    }
    var Ra = null,
        La = null;
    function zb(e) {
        Hd(e, 0);
    }
    function Xr(e) {
        var t = An(e);
        if (Uu(t)) return e;
    }
    function Ab(e, t) {
        if (e === "change") return t;
    }
    var Id = !1;
    if (dt) {
        var qs;
        if (dt) {
            var Gs = "oninput" in document;
            if (!Gs) {
                var zd = document.createElement("div");
                zd.setAttribute("oninput", "return;"),
                    (Gs = typeof zd.oninput == "function");
            }
            qs = Gs;
        } else qs = !1;
        Id = qs && (!document.documentMode || 9 < document.documentMode);
    }
    function Ad() {
        Ra && (Ra.detachEvent("onpropertychange", Dd), (La = Ra = null));
    }
    function Dd(e) {
        if (e.propertyName === "value" && Xr(La)) {
            var t = [];
            if ((Td(t, La, e, Ss(e)), (e = zb), Jt)) e(t);
            else {
                Jt = !0;
                try {
                    Cs(e, t);
                } finally {
                    (Jt = !1), Ps();
                }
            }
        }
    }
    function Db(e, t, n) {
        e === "focusin"
            ? (Ad(), (Ra = t), (La = n), Ra.attachEvent("onpropertychange", Dd))
            : e === "focusout" && Ad();
    }
    function Mb(e) {
        if (e === "selectionchange" || e === "keyup" || e === "keydown")
            return Xr(La);
    }
    function Rb(e, t) {
        if (e === "click") return Xr(t);
    }
    function Lb(e, t) {
        if (e === "input" || e === "change") return Xr(t);
    }
    function Yb(e, t) {
        return (
            (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t)
        );
    }
    var Me = typeof Object.is == "function" ? Object.is : Yb,
        Ub = Object.prototype.hasOwnProperty;
    function Ya(e, t) {
        if (Me(e, t)) return !0;
        if (
            typeof e != "object" ||
            e === null ||
            typeof t != "object" ||
            t === null
        )
            return !1;
        var n = Object.keys(e),
            a = Object.keys(t);
        if (n.length !== a.length) return !1;
        for (a = 0; a < n.length; a++)
            if (!Ub.call(t, n[a]) || !Me(e[n[a]], t[n[a]])) return !1;
        return !0;
    }
    function Md(e) {
        for (; e && e.firstChild; ) e = e.firstChild;
        return e;
    }
    function Rd(e, t) {
        var n = Md(e);
        e = 0;
        for (var a; n; ) {
            if (n.nodeType === 3) {
                if (((a = e + n.textContent.length), e <= t && a >= t))
                    return { node: n, offset: t - e };
                e = a;
            }
            e: {
                for (; n; ) {
                    if (n.nextSibling) {
                        n = n.nextSibling;
                        break e;
                    }
                    n = n.parentNode;
                }
                n = void 0;
            }
            n = Md(n);
        }
    }
    function Ld(e, t) {
        return e && t
            ? e === t
                ? !0
                : e && e.nodeType === 3
                ? !1
                : t && t.nodeType === 3
                ? Ld(e, t.parentNode)
                : "contains" in e
                ? e.contains(t)
                : e.compareDocumentPosition
                ? !!(e.compareDocumentPosition(t) & 16)
                : !1
            : !1;
    }
    function Yd() {
        for (var e = window, t = Lr(); t instanceof e.HTMLIFrameElement; ) {
            try {
                var n = typeof t.contentWindow.location.href == "string";
            } catch {
                n = !1;
            }
            if (n) e = t.contentWindow;
            else break;
            t = Lr(e.document);
        }
        return t;
    }
    function Ks(e) {
        var t = e && e.nodeName && e.nodeName.toLowerCase();
        return (
            t &&
            ((t === "input" &&
                (e.type === "text" ||
                    e.type === "search" ||
                    e.type === "tel" ||
                    e.type === "url" ||
                    e.type === "password")) ||
                t === "textarea" ||
                e.contentEditable === "true")
        );
    }
    var Bb = dt && "documentMode" in document && 11 >= document.documentMode,
        Nn = null,
        Js = null,
        Ua = null,
        Qs = !1;
    function Ud(e, t, n) {
        var a =
            n.window === n
                ? n.document
                : n.nodeType === 9
                ? n
                : n.ownerDocument;
        Qs ||
            Nn == null ||
            Nn !== Lr(a) ||
            ((a = Nn),
            "selectionStart" in a && Ks(a)
                ? (a = { start: a.selectionStart, end: a.selectionEnd })
                : ((a = (
                      (a.ownerDocument && a.ownerDocument.defaultView) ||
                      window
                  ).getSelection()),
                  (a = {
                      anchorNode: a.anchorNode,
                      anchorOffset: a.anchorOffset,
                      focusNode: a.focusNode,
                      focusOffset: a.focusOffset,
                  })),
            (Ua && Ya(Ua, a)) ||
                ((Ua = a),
                (a = Zr(Js, "onSelect")),
                0 < a.length &&
                    ((t = new Bs("onSelect", "select", null, t, n)),
                    e.push({ event: t, listeners: a }),
                    (t.target = Nn))));
    }
    Ms(
        "cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(
            " "
        ),
        0
    ),
        Ms(
            "drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(
                " "
            ),
            1
        ),
        Ms(Kg, 2);
    for (
        var Bd =
                "change selectionchange textInput compositionstart compositionend compositionupdate".split(
                    " "
                ),
            Xs = 0;
        Xs < Bd.length;
        Xs++
    )
        Ds.set(Bd[Xs], 0);
    vn("onMouseEnter", ["mouseout", "mouseover"]),
        vn("onMouseLeave", ["mouseout", "mouseover"]),
        vn("onPointerEnter", ["pointerout", "pointerover"]),
        vn("onPointerLeave", ["pointerout", "pointerover"]),
        qt(
            "onChange",
            "change click focusin focusout input keydown keyup selectionchange".split(
                " "
            )
        ),
        qt(
            "onSelect",
            "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
                " "
            )
        ),
        qt("onBeforeInput", [
            "compositionend",
            "keypress",
            "textInput",
            "paste",
        ]),
        qt(
            "onCompositionEnd",
            "compositionend focusout keydown keypress keyup mousedown".split(
                " "
            )
        ),
        qt(
            "onCompositionStart",
            "compositionstart focusout keydown keypress keyup mousedown".split(
                " "
            )
        ),
        qt(
            "onCompositionUpdate",
            "compositionupdate focusout keydown keypress keyup mousedown".split(
                " "
            )
        );
    var Ba =
            "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(
                " "
            ),
        Fd = new Set(
            "cancel close invalid load scroll toggle".split(" ").concat(Ba)
        );
    function Od(e, t, n) {
        var a = e.type || "unknown-event";
        (e.currentTarget = n), Hg(a, t, void 0, e), (e.currentTarget = null);
    }
    function Hd(e, t) {
        t = (t & 4) !== 0;
        for (var n = 0; n < e.length; n++) {
            var a = e[n],
                r = a.event;
            a = a.listeners;
            e: {
                var i = void 0;
                if (t)
                    for (var o = a.length - 1; 0 <= o; o--) {
                        var s = a[o],
                            l = s.instance,
                            u = s.currentTarget;
                        if (
                            ((s = s.listener),
                            l !== i && r.isPropagationStopped())
                        )
                            break e;
                        Od(r, s, u), (i = l);
                    }
                else
                    for (o = 0; o < a.length; o++) {
                        if (
                            ((s = a[o]),
                            (l = s.instance),
                            (u = s.currentTarget),
                            (s = s.listener),
                            l !== i && r.isPropagationStopped())
                        )
                            break e;
                        Od(r, s, u), (i = l);
                    }
            }
        }
        if (Br) throw ((e = Ns), (Br = !1), (Ns = null), e);
    }
    function F(e, t) {
        var n = tm(t),
            a = e + "__bubble";
        n.has(a) || (Gd(t, e, 2, !1), n.add(a));
    }
    var Vd = "_reactListening" + Math.random().toString(36).slice(2);
    function Wd(e) {
        e[Vd] ||
            ((e[Vd] = !0),
            zu.forEach(function (t) {
                Fd.has(t) || qd(t, !1, e, null), qd(t, !0, e, null);
            }));
    }
    function qd(e, t, n, a) {
        var r =
                4 < arguments.length && arguments[4] !== void 0
                    ? arguments[4]
                    : 0,
            i = n;
        if (
            (e === "selectionchange" &&
                n.nodeType !== 9 &&
                (i = n.ownerDocument),
            a !== null && !t && Fd.has(e))
        ) {
            if (e !== "scroll") return;
            (r |= 2), (i = a);
        }
        var o = tm(i),
            s = e + "__" + (t ? "capture" : "bubble");
        o.has(s) || (t && (r |= 4), Gd(i, e, r, t), o.add(s));
    }
    function Gd(e, t, n, a) {
        var r = Ds.get(t);
        switch (r === void 0 ? 2 : r) {
            case 0:
                r = rb;
                break;
            case 1:
                r = ib;
                break;
            default:
                r = Ls;
        }
        (n = r.bind(null, t, n, e)),
            (r = void 0),
            !_s ||
                (t !== "touchstart" && t !== "touchmove" && t !== "wheel") ||
                (r = !0),
            a
                ? r !== void 0
                    ? e.addEventListener(t, n, { capture: !0, passive: r })
                    : e.addEventListener(t, n, !0)
                : r !== void 0
                ? e.addEventListener(t, n, { passive: r })
                : e.addEventListener(t, n, !1);
    }
    function Kd(e, t, n, a, r) {
        var i = a;
        if (!(t & 1) && !(t & 2) && a !== null)
            e: for (;;) {
                if (a === null) return;
                var o = a.tag;
                if (o === 3 || o === 4) {
                    var s = a.stateNode.containerInfo;
                    if (s === r || (s.nodeType === 8 && s.parentNode === r))
                        break;
                    if (o === 4)
                        for (o = a.return; o !== null; ) {
                            var l = o.tag;
                            if (
                                (l === 3 || l === 4) &&
                                ((l = o.stateNode.containerInfo),
                                l === r ||
                                    (l.nodeType === 8 && l.parentNode === r))
                            )
                                return;
                            o = o.return;
                        }
                    for (; s !== null; ) {
                        if (((o = Xt(s)), o === null)) return;
                        if (((l = o.tag), l === 5 || l === 6)) {
                            a = i = o;
                            continue e;
                        }
                        s = s.parentNode;
                    }
                }
                a = a.return;
            }
        Ug(function () {
            var u = i,
                m = Ss(n),
                p = [];
            e: {
                var d = yd.get(e);
                if (d !== void 0) {
                    var b = Bs,
                        y = e;
                    switch (e) {
                        case "keypress":
                            if (Kr(n) === 0) break e;
                        case "keydown":
                        case "keyup":
                            b = vb;
                            break;
                        case "focusin":
                            (y = "focus"), (b = Hs);
                            break;
                        case "focusout":
                            (y = "blur"), (b = Hs);
                            break;
                        case "beforeblur":
                        case "afterblur":
                            b = Hs;
                            break;
                        case "click":
                            if (n.button === 2) break e;
                        case "auxclick":
                        case "dblclick":
                        case "mousedown":
                        case "mousemove":
                        case "mouseup":
                        case "mouseout":
                        case "mouseover":
                        case "contextmenu":
                            b = xd;
                            break;
                        case "drag":
                        case "dragend":
                        case "dragenter":
                        case "dragexit":
                        case "dragleave":
                        case "dragover":
                        case "dragstart":
                        case "drop":
                            b = lb;
                            break;
                        case "touchcancel":
                        case "touchend":
                        case "touchmove":
                        case "touchstart":
                            b = Sb;
                            break;
                        case hd:
                        case fd:
                        case gd:
                            b = db;
                            break;
                        case bd:
                            b = Cb;
                            break;
                        case "scroll":
                            b = ob;
                            break;
                        case "wheel":
                            b = jb;
                            break;
                        case "copy":
                        case "cut":
                        case "paste":
                            b = pb;
                            break;
                        case "gotpointercapture":
                        case "lostpointercapture":
                        case "pointercancel":
                        case "pointerdown":
                        case "pointermove":
                        case "pointerout":
                        case "pointerover":
                        case "pointerup":
                            b = Ed;
                    }
                    var v = (t & 4) !== 0,
                        g = !v && e === "scroll",
                        h = v ? (d !== null ? d + "Capture" : null) : d;
                    v = [];
                    for (var f = u, x; f !== null; ) {
                        x = f;
                        var w = x.stateNode;
                        if (
                            (x.tag === 5 &&
                                w !== null &&
                                ((x = w),
                                h !== null &&
                                    ((w = Ca(f, h)),
                                    w != null && v.push(Fa(f, w, x)))),
                            g)
                        )
                            break;
                        f = f.return;
                    }
                    0 < v.length &&
                        ((d = new b(d, y, null, n, m)),
                        p.push({ event: d, listeners: v }));
                }
            }
            if (!(t & 7)) {
                e: {
                    if (
                        ((d = e === "mouseover" || e === "pointerover"),
                        (b = e === "mouseout" || e === "pointerout"),
                        d &&
                            !(t & 16) &&
                            (y = n.relatedTarget || n.fromElement) &&
                            (Xt(y) || y[zn]))
                    )
                        break e;
                    if (
                        (b || d) &&
                        ((d =
                            m.window === m
                                ? m
                                : (d = m.ownerDocument)
                                ? d.defaultView || d.parentWindow
                                : window),
                        b
                            ? ((y = n.relatedTarget || n.toElement),
                              (b = u),
                              (y = y ? Xt(y) : null),
                              y !== null &&
                                  ((g = Qt(y)),
                                  y !== g || (y.tag !== 5 && y.tag !== 6)) &&
                                  (y = null))
                            : ((b = null), (y = u)),
                        b !== y)
                    ) {
                        if (
                            ((v = xd),
                            (w = "onMouseLeave"),
                            (h = "onMouseEnter"),
                            (f = "mouse"),
                            (e === "pointerout" || e === "pointerover") &&
                                ((v = Ed),
                                (w = "onPointerLeave"),
                                (h = "onPointerEnter"),
                                (f = "pointer")),
                            (g = b == null ? d : An(b)),
                            (x = y == null ? d : An(y)),
                            (d = new v(w, f + "leave", b, n, m)),
                            (d.target = g),
                            (d.relatedTarget = x),
                            (w = null),
                            Xt(m) === u &&
                                ((v = new v(h, f + "enter", y, n, m)),
                                (v.target = x),
                                (v.relatedTarget = g),
                                (w = v)),
                            (g = w),
                            b && y)
                        )
                            t: {
                                for (v = b, h = y, f = 0, x = v; x; x = Tn(x))
                                    f++;
                                for (x = 0, w = h; w; w = Tn(w)) x++;
                                for (; 0 < f - x; ) (v = Tn(v)), f--;
                                for (; 0 < x - f; ) (h = Tn(h)), x--;
                                for (; f--; ) {
                                    if (
                                        v === h ||
                                        (h !== null && v === h.alternate)
                                    )
                                        break t;
                                    (v = Tn(v)), (h = Tn(h));
                                }
                                v = null;
                            }
                        else v = null;
                        b !== null && Jd(p, d, b, v, !1),
                            y !== null && g !== null && Jd(p, g, y, v, !0);
                    }
                }
                e: {
                    if (
                        ((d = u ? An(u) : window),
                        (b = d.nodeName && d.nodeName.toLowerCase()),
                        b === "select" || (b === "input" && d.type === "file"))
                    )
                        var E = Ab;
                    else if (Nd(d))
                        if (Id) E = Lb;
                        else {
                            E = Mb;
                            var S = Db;
                        }
                    else
                        (b = d.nodeName) &&
                            b.toLowerCase() === "input" &&
                            (d.type === "checkbox" || d.type === "radio") &&
                            (E = Rb);
                    if (E && (E = E(e, u))) {
                        Td(p, E, n, m);
                        break e;
                    }
                    S && S(e, d, u),
                        e === "focusout" &&
                            (S = d._wrapperState) &&
                            S.controlled &&
                            d.type === "number" &&
                            gs(d, "number", d.value);
                }
                switch (((S = u ? An(u) : window), e)) {
                    case "focusin":
                        (Nd(S) || S.contentEditable === "true") &&
                            ((Nn = S), (Js = u), (Ua = null));
                        break;
                    case "focusout":
                        Ua = Js = Nn = null;
                        break;
                    case "mousedown":
                        Qs = !0;
                        break;
                    case "contextmenu":
                    case "mouseup":
                    case "dragend":
                        (Qs = !1), Ud(p, n, m);
                        break;
                    case "selectionchange":
                        if (Bb) break;
                    case "keydown":
                    case "keyup":
                        Ud(p, n, m);
                }
                var $;
                if (Ws)
                    e: {
                        switch (e) {
                            case "compositionstart":
                                var T = "onCompositionStart";
                                break e;
                            case "compositionend":
                                T = "onCompositionEnd";
                                break e;
                            case "compositionupdate":
                                T = "onCompositionUpdate";
                                break e;
                        }
                        T = void 0;
                    }
                else
                    _n
                        ? Pd(e, n) && (T = "onCompositionEnd")
                        : e === "keydown" &&
                          n.keyCode === 229 &&
                          (T = "onCompositionStart");
                T &&
                    (Cd &&
                        n.locale !== "ko" &&
                        (_n || T !== "onCompositionStart"
                            ? T === "onCompositionEnd" && _n && ($ = vd())
                            : (($t = m),
                              (Us = "value" in $t ? $t.value : $t.textContent),
                              (_n = !0))),
                    (S = Zr(u, T)),
                    0 < S.length &&
                        ((T = new Sd(T, e, null, n, m)),
                        p.push({ event: T, listeners: S }),
                        $
                            ? (T.data = $)
                            : (($ = _d(n)), $ !== null && (T.data = $)))),
                    ($ = _b ? Nb(e, n) : Tb(e, n)) &&
                        ((u = Zr(u, "onBeforeInput")),
                        0 < u.length &&
                            ((m = new Sd(
                                "onBeforeInput",
                                "beforeinput",
                                null,
                                n,
                                m
                            )),
                            p.push({ event: m, listeners: u }),
                            (m.data = $)));
            }
            Hd(p, t);
        });
    }
    function Fa(e, t, n) {
        return { instance: e, listener: t, currentTarget: n };
    }
    function Zr(e, t) {
        for (var n = t + "Capture", a = []; e !== null; ) {
            var r = e,
                i = r.stateNode;
            r.tag === 5 &&
                i !== null &&
                ((r = i),
                (i = Ca(e, n)),
                i != null && a.unshift(Fa(e, i, r)),
                (i = Ca(e, t)),
                i != null && a.push(Fa(e, i, r))),
                (e = e.return);
        }
        return a;
    }
    function Tn(e) {
        if (e === null) return null;
        do e = e.return;
        while (e && e.tag !== 5);
        return e || null;
    }
    function Jd(e, t, n, a, r) {
        for (var i = t._reactName, o = []; n !== null && n !== a; ) {
            var s = n,
                l = s.alternate,
                u = s.stateNode;
            if (l !== null && l === a) break;
            s.tag === 5 &&
                u !== null &&
                ((s = u),
                r
                    ? ((l = Ca(n, i)), l != null && o.unshift(Fa(n, l, s)))
                    : r || ((l = Ca(n, i)), l != null && o.push(Fa(n, l, s)))),
                (n = n.return);
        }
        o.length !== 0 && e.push({ event: t, listeners: o });
    }
    function ei() {}
    var Zs = null,
        el = null;
    function Qd(e, t) {
        switch (e) {
            case "button":
            case "input":
            case "select":
            case "textarea":
                return !!t.autoFocus;
        }
        return !1;
    }
    function tl(e, t) {
        return (
            e === "textarea" ||
            e === "option" ||
            e === "noscript" ||
            typeof t.children == "string" ||
            typeof t.children == "number" ||
            (typeof t.dangerouslySetInnerHTML == "object" &&
                t.dangerouslySetInnerHTML !== null &&
                t.dangerouslySetInnerHTML.__html != null)
        );
    }
    var Xd = typeof setTimeout == "function" ? setTimeout : void 0,
        Fb = typeof clearTimeout == "function" ? clearTimeout : void 0;
    function nl(e) {
        e.nodeType === 1
            ? (e.textContent = "")
            : e.nodeType === 9 &&
              ((e = e.body), e != null && (e.textContent = ""));
    }
    function In(e) {
        for (; e != null; e = e.nextSibling) {
            var t = e.nodeType;
            if (t === 1 || t === 3) break;
        }
        return e;
    }
    function Zd(e) {
        e = e.previousSibling;
        for (var t = 0; e; ) {
            if (e.nodeType === 8) {
                var n = e.data;
                if (n === "$" || n === "$!" || n === "$?") {
                    if (t === 0) return e;
                    t--;
                } else n === "/$" && t++;
            }
            e = e.previousSibling;
        }
        return null;
    }
    var al = 0;
    function Ob(e) {
        return { $$typeof: cs, toString: e, valueOf: e };
    }
    var ti = Math.random().toString(36).slice(2),
        jt = "__reactFiber$" + ti,
        ni = "__reactProps$" + ti,
        zn = "__reactContainer$" + ti,
        em = "__reactEvents$" + ti;
    function Xt(e) {
        var t = e[jt];
        if (t) return t;
        for (var n = e.parentNode; n; ) {
            if ((t = n[zn] || n[jt])) {
                if (
                    ((n = t.alternate),
                    t.child !== null || (n !== null && n.child !== null))
                )
                    for (e = Zd(e); e !== null; ) {
                        if ((n = e[jt])) return n;
                        e = Zd(e);
                    }
                return t;
            }
            (e = n), (n = e.parentNode);
        }
        return null;
    }
    function Oa(e) {
        return (
            (e = e[jt] || e[zn]),
            !e || (e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3)
                ? null
                : e
        );
    }
    function An(e) {
        if (e.tag === 5 || e.tag === 6) return e.stateNode;
        throw Error(C(33));
    }
    function ai(e) {
        return e[ni] || null;
    }
    function tm(e) {
        var t = e[em];
        return t === void 0 && (t = e[em] = new Set()), t;
    }
    var rl = [],
        Dn = -1;
    function Pt(e) {
        return { current: e };
    }
    function O(e) {
        0 > Dn || ((e.current = rl[Dn]), (rl[Dn] = null), Dn--);
    }
    function q(e, t) {
        Dn++, (rl[Dn] = e.current), (e.current = t);
    }
    var _t = {},
        ge = Pt(_t),
        Ee = Pt(!1),
        Zt = _t;
    function Mn(e, t) {
        var n = e.type.contextTypes;
        if (!n) return _t;
        var a = e.stateNode;
        if (a && a.__reactInternalMemoizedUnmaskedChildContext === t)
            return a.__reactInternalMemoizedMaskedChildContext;
        var r = {},
            i;
        for (i in n) r[i] = t[i];
        return (
            a &&
                ((e = e.stateNode),
                (e.__reactInternalMemoizedUnmaskedChildContext = t),
                (e.__reactInternalMemoizedMaskedChildContext = r)),
            r
        );
    }
    function Ce(e) {
        return (e = e.childContextTypes), e != null;
    }
    function ri() {
        O(Ee), O(ge);
    }
    function nm(e, t, n) {
        if (ge.current !== _t) throw Error(C(168));
        q(ge, t), q(Ee, n);
    }
    function am(e, t, n) {
        var a = e.stateNode;
        if (((e = t.childContextTypes), typeof a.getChildContext != "function"))
            return n;
        a = a.getChildContext();
        for (var r in a)
            if (!(r in e)) throw Error(C(108, wn(t) || "Unknown", r));
        return H({}, n, a);
    }
    function ii(e) {
        return (
            (e =
                ((e = e.stateNode) &&
                    e.__reactInternalMemoizedMergedChildContext) ||
                _t),
            (Zt = ge.current),
            q(ge, e),
            q(Ee, Ee.current),
            !0
        );
    }
    function rm(e, t, n) {
        var a = e.stateNode;
        if (!a) throw Error(C(169));
        n
            ? ((e = am(e, t, Zt)),
              (a.__reactInternalMemoizedMergedChildContext = e),
              O(Ee),
              O(ge),
              q(ge, e))
            : O(Ee),
            q(Ee, n);
    }
    var il = null,
        en = null,
        Hb = ae.unstable_runWithPriority,
        ol = ae.unstable_scheduleCallback,
        sl = ae.unstable_cancelCallback,
        Vb = ae.unstable_shouldYield,
        im = ae.unstable_requestPaint,
        ll = ae.unstable_now,
        Wb = ae.unstable_getCurrentPriorityLevel,
        oi = ae.unstable_ImmediatePriority,
        om = ae.unstable_UserBlockingPriority,
        sm = ae.unstable_NormalPriority,
        lm = ae.unstable_LowPriority,
        cm = ae.unstable_IdlePriority,
        cl = {},
        qb = im !== void 0 ? im : function () {},
        mt = null,
        si = null,
        ul = !1,
        um = ll(),
        be =
            1e4 > um
                ? ll
                : function () {
                      return ll() - um;
                  };
    function Rn() {
        switch (Wb()) {
            case oi:
                return 99;
            case om:
                return 98;
            case sm:
                return 97;
            case lm:
                return 96;
            case cm:
                return 95;
            default:
                throw Error(C(332));
        }
    }
    function dm(e) {
        switch (e) {
            case 99:
                return oi;
            case 98:
                return om;
            case 97:
                return sm;
            case 96:
                return lm;
            case 95:
                return cm;
            default:
                throw Error(C(332));
        }
    }
    function tn(e, t) {
        return (e = dm(e)), Hb(e, t);
    }
    function Ha(e, t, n) {
        return (e = dm(e)), ol(e, t, n);
    }
    function et() {
        if (si !== null) {
            var e = si;
            (si = null), sl(e);
        }
        mm();
    }
    function mm() {
        if (!ul && mt !== null) {
            ul = !0;
            var e = 0;
            try {
                var t = mt;
                tn(99, function () {
                    for (; e < t.length; e++) {
                        var n = t[e];
                        do n = n(!0);
                        while (n !== null);
                    }
                }),
                    (mt = null);
            } catch (n) {
                throw (mt !== null && (mt = mt.slice(e + 1)), ol(oi, et), n);
            } finally {
                ul = !1;
            }
        }
    }
    var Gb = Gt.ReactCurrentBatchConfig;
    function qe(e, t) {
        if (e && e.defaultProps) {
            (t = H({}, t)), (e = e.defaultProps);
            for (var n in e) t[n] === void 0 && (t[n] = e[n]);
            return t;
        }
        return t;
    }
    var li = Pt(null),
        ci = null,
        Ln = null,
        ui = null;
    function dl() {
        ui = Ln = ci = null;
    }
    function ml(e) {
        var t = li.current;
        O(li), (e.type._context._currentValue = t);
    }
    function pm(e, t) {
        for (; e !== null; ) {
            var n = e.alternate;
            if ((e.childLanes & t) === t) {
                if (n === null || (n.childLanes & t) === t) break;
                n.childLanes |= t;
            } else (e.childLanes |= t), n !== null && (n.childLanes |= t);
            e = e.return;
        }
    }
    function Yn(e, t) {
        (ci = e),
            (ui = Ln = null),
            (e = e.dependencies),
            e !== null &&
                e.firstContext !== null &&
                (e.lanes & t && (Ge = !0), (e.firstContext = null));
    }
    function Re(e, t) {
        if (ui !== e && t !== !1 && t !== 0)
            if (
                ((typeof t != "number" || t === 1073741823) &&
                    ((ui = e), (t = 1073741823)),
                (t = { context: e, observedBits: t, next: null }),
                Ln === null)
            ) {
                if (ci === null) throw Error(C(308));
                (Ln = t),
                    (ci.dependencies = {
                        lanes: 0,
                        firstContext: t,
                        responders: null,
                    });
            } else Ln = Ln.next = t;
        return e._currentValue;
    }
    var Nt = !1;
    function pl(e) {
        e.updateQueue = {
            baseState: e.memoizedState,
            firstBaseUpdate: null,
            lastBaseUpdate: null,
            shared: { pending: null },
            effects: null,
        };
    }
    function hm(e, t) {
        (e = e.updateQueue),
            t.updateQueue === e &&
                (t.updateQueue = {
                    baseState: e.baseState,
                    firstBaseUpdate: e.firstBaseUpdate,
                    lastBaseUpdate: e.lastBaseUpdate,
                    shared: e.shared,
                    effects: e.effects,
                });
    }
    function Tt(e, t) {
        return {
            eventTime: e,
            lane: t,
            tag: 0,
            payload: null,
            callback: null,
            next: null,
        };
    }
    function It(e, t) {
        if (((e = e.updateQueue), e !== null)) {
            e = e.shared;
            var n = e.pending;
            n === null ? (t.next = t) : ((t.next = n.next), (n.next = t)),
                (e.pending = t);
        }
    }
    function fm(e, t) {
        var n = e.updateQueue,
            a = e.alternate;
        if (a !== null && ((a = a.updateQueue), n === a)) {
            var r = null,
                i = null;
            if (((n = n.firstBaseUpdate), n !== null)) {
                do {
                    var o = {
                        eventTime: n.eventTime,
                        lane: n.lane,
                        tag: n.tag,
                        payload: n.payload,
                        callback: n.callback,
                        next: null,
                    };
                    i === null ? (r = i = o) : (i = i.next = o), (n = n.next);
                } while (n !== null);
                i === null ? (r = i = t) : (i = i.next = t);
            } else r = i = t;
            (n = {
                baseState: a.baseState,
                firstBaseUpdate: r,
                lastBaseUpdate: i,
                shared: a.shared,
                effects: a.effects,
            }),
                (e.updateQueue = n);
            return;
        }
        (e = n.lastBaseUpdate),
            e === null ? (n.firstBaseUpdate = t) : (e.next = t),
            (n.lastBaseUpdate = t);
    }
    function Va(e, t, n, a) {
        var r = e.updateQueue;
        Nt = !1;
        var i = r.firstBaseUpdate,
            o = r.lastBaseUpdate,
            s = r.shared.pending;
        if (s !== null) {
            r.shared.pending = null;
            var l = s,
                u = l.next;
            (l.next = null), o === null ? (i = u) : (o.next = u), (o = l);
            var m = e.alternate;
            if (m !== null) {
                m = m.updateQueue;
                var p = m.lastBaseUpdate;
                p !== o &&
                    (p === null ? (m.firstBaseUpdate = u) : (p.next = u),
                    (m.lastBaseUpdate = l));
            }
        }
        if (i !== null) {
            (p = r.baseState), (o = 0), (m = u = l = null);
            do {
                s = i.lane;
                var d = i.eventTime;
                if ((a & s) === s) {
                    m !== null &&
                        (m = m.next =
                            {
                                eventTime: d,
                                lane: 0,
                                tag: i.tag,
                                payload: i.payload,
                                callback: i.callback,
                                next: null,
                            });
                    e: {
                        var b = e,
                            y = i;
                        switch (((s = t), (d = n), y.tag)) {
                            case 1:
                                if (((b = y.payload), typeof b == "function")) {
                                    p = b.call(d, p, s);
                                    break e;
                                }
                                p = b;
                                break e;
                            case 3:
                                b.flags = (b.flags & -4097) | 64;
                            case 0:
                                if (
                                    ((b = y.payload),
                                    (s =
                                        typeof b == "function"
                                            ? b.call(d, p, s)
                                            : b),
                                    s == null)
                                )
                                    break e;
                                p = H({}, p, s);
                                break e;
                            case 2:
                                Nt = !0;
                        }
                    }
                    i.callback !== null &&
                        ((e.flags |= 32),
                        (s = r.effects),
                        s === null ? (r.effects = [i]) : s.push(i));
                } else
                    (d = {
                        eventTime: d,
                        lane: s,
                        tag: i.tag,
                        payload: i.payload,
                        callback: i.callback,
                        next: null,
                    }),
                        m === null ? ((u = m = d), (l = p)) : (m = m.next = d),
                        (o |= s);
                if (((i = i.next), i === null)) {
                    if (((s = r.shared.pending), s === null)) break;
                    (i = s.next),
                        (s.next = null),
                        (r.lastBaseUpdate = s),
                        (r.shared.pending = null);
                }
            } while (1);
            m === null && (l = p),
                (r.baseState = l),
                (r.firstBaseUpdate = u),
                (r.lastBaseUpdate = m),
                (ar |= o),
                (e.lanes = o),
                (e.memoizedState = p);
        }
    }
    function gm(e, t, n) {
        if (((e = t.effects), (t.effects = null), e !== null))
            for (t = 0; t < e.length; t++) {
                var a = e[t],
                    r = a.callback;
                if (r !== null) {
                    if (((a.callback = null), (a = n), typeof r != "function"))
                        throw Error(C(191, r));
                    r.call(a);
                }
            }
    }
    var bm = new Ir.Component().refs;
    function di(e, t, n, a) {
        (t = e.memoizedState),
            (n = n(a, t)),
            (n = n == null ? t : H({}, t, n)),
            (e.memoizedState = n),
            e.lanes === 0 && (e.updateQueue.baseState = n);
    }
    var mi = {
        isMounted: function (e) {
            return (e = e._reactInternals) ? Qt(e) === e : !1;
        },
        enqueueSetState: function (e, t, n) {
            e = e._reactInternals;
            var a = Ne(),
                r = Dt(e),
                i = Tt(a, r);
            (i.payload = t),
                n != null && (i.callback = n),
                It(e, i),
                Mt(e, r, a);
        },
        enqueueReplaceState: function (e, t, n) {
            e = e._reactInternals;
            var a = Ne(),
                r = Dt(e),
                i = Tt(a, r);
            (i.tag = 1),
                (i.payload = t),
                n != null && (i.callback = n),
                It(e, i),
                Mt(e, r, a);
        },
        enqueueForceUpdate: function (e, t) {
            e = e._reactInternals;
            var n = Ne(),
                a = Dt(e),
                r = Tt(n, a);
            (r.tag = 2), t != null && (r.callback = t), It(e, r), Mt(e, a, n);
        },
    };
    function ym(e, t, n, a, r, i, o) {
        return (
            (e = e.stateNode),
            typeof e.shouldComponentUpdate == "function"
                ? e.shouldComponentUpdate(a, i, o)
                : t.prototype && t.prototype.isPureReactComponent
                ? !Ya(n, a) || !Ya(r, i)
                : !0
        );
    }
    function km(e, t, n) {
        var a = !1,
            r = _t,
            i = t.contextType;
        return (
            typeof i == "object" && i !== null
                ? (i = Re(i))
                : ((r = Ce(t) ? Zt : ge.current),
                  (a = t.contextTypes),
                  (i = (a = a != null) ? Mn(e, r) : _t)),
            (t = new t(n, i)),
            (e.memoizedState =
                t.state !== null && t.state !== void 0 ? t.state : null),
            (t.updater = mi),
            (e.stateNode = t),
            (t._reactInternals = e),
            a &&
                ((e = e.stateNode),
                (e.__reactInternalMemoizedUnmaskedChildContext = r),
                (e.__reactInternalMemoizedMaskedChildContext = i)),
            t
        );
    }
    function vm(e, t, n, a) {
        (e = t.state),
            typeof t.componentWillReceiveProps == "function" &&
                t.componentWillReceiveProps(n, a),
            typeof t.UNSAFE_componentWillReceiveProps == "function" &&
                t.UNSAFE_componentWillReceiveProps(n, a),
            t.state !== e && mi.enqueueReplaceState(t, t.state, null);
    }
    function hl(e, t, n, a) {
        var r = e.stateNode;
        (r.props = n), (r.state = e.memoizedState), (r.refs = bm), pl(e);
        var i = t.contextType;
        typeof i == "object" && i !== null
            ? (r.context = Re(i))
            : ((i = Ce(t) ? Zt : ge.current), (r.context = Mn(e, i))),
            Va(e, n, r, a),
            (r.state = e.memoizedState),
            (i = t.getDerivedStateFromProps),
            typeof i == "function" &&
                (di(e, t, i, n), (r.state = e.memoizedState)),
            typeof t.getDerivedStateFromProps == "function" ||
                typeof r.getSnapshotBeforeUpdate == "function" ||
                (typeof r.UNSAFE_componentWillMount != "function" &&
                    typeof r.componentWillMount != "function") ||
                ((t = r.state),
                typeof r.componentWillMount == "function" &&
                    r.componentWillMount(),
                typeof r.UNSAFE_componentWillMount == "function" &&
                    r.UNSAFE_componentWillMount(),
                t !== r.state && mi.enqueueReplaceState(r, r.state, null),
                Va(e, n, r, a),
                (r.state = e.memoizedState)),
            typeof r.componentDidMount == "function" && (e.flags |= 4);
    }
    var pi = Array.isArray;
    function Wa(e, t, n) {
        if (
            ((e = n.ref),
            e !== null && typeof e != "function" && typeof e != "object")
        ) {
            if (n._owner) {
                if (((n = n._owner), n)) {
                    if (n.tag !== 1) throw Error(C(309));
                    var a = n.stateNode;
                }
                if (!a) throw Error(C(147, e));
                var r = "" + e;
                return t !== null &&
                    t.ref !== null &&
                    typeof t.ref == "function" &&
                    t.ref._stringRef === r
                    ? t.ref
                    : ((t = function (i) {
                          var o = a.refs;
                          o === bm && (o = a.refs = {}),
                              i === null ? delete o[r] : (o[r] = i);
                      }),
                      (t._stringRef = r),
                      t);
            }
            if (typeof e != "string") throw Error(C(284));
            if (!n._owner) throw Error(C(290, e));
        }
        return e;
    }
    function hi(e, t) {
        if (e.type !== "textarea")
            throw Error(
                C(
                    31,
                    Object.prototype.toString.call(t) === "[object Object]"
                        ? "object with keys {" + Object.keys(t).join(", ") + "}"
                        : t
                )
            );
    }
    function wm(e) {
        function t(g, h) {
            if (e) {
                var f = g.lastEffect;
                f !== null
                    ? ((f.nextEffect = h), (g.lastEffect = h))
                    : (g.firstEffect = g.lastEffect = h),
                    (h.nextEffect = null),
                    (h.flags = 8);
            }
        }
        function n(g, h) {
            if (!e) return null;
            for (; h !== null; ) t(g, h), (h = h.sibling);
            return null;
        }
        function a(g, h) {
            for (g = new Map(); h !== null; )
                h.key !== null ? g.set(h.key, h) : g.set(h.index, h),
                    (h = h.sibling);
            return g;
        }
        function r(g, h) {
            return (g = Yt(g, h)), (g.index = 0), (g.sibling = null), g;
        }
        function i(g, h, f) {
            return (
                (g.index = f),
                e
                    ? ((f = g.alternate),
                      f !== null
                          ? ((f = f.index), f < h ? ((g.flags = 2), h) : f)
                          : ((g.flags = 2), h))
                    : h
            );
        }
        function o(g) {
            return e && g.alternate === null && (g.flags = 2), g;
        }
        function s(g, h, f, x) {
            return h === null || h.tag !== 6
                ? ((h = Jl(f, g.mode, x)), (h.return = g), h)
                : ((h = r(h, f)), (h.return = g), h);
        }
        function l(g, h, f, x) {
            return h !== null && h.elementType === f.type
                ? ((x = r(h, f.props)),
                  (x.ref = Wa(g, h, f)),
                  (x.return = g),
                  x)
                : ((x = Ii(f.type, f.key, f.props, null, g.mode, x)),
                  (x.ref = Wa(g, h, f)),
                  (x.return = g),
                  x);
        }
        function u(g, h, f, x) {
            return h === null ||
                h.tag !== 4 ||
                h.stateNode.containerInfo !== f.containerInfo ||
                h.stateNode.implementation !== f.implementation
                ? ((h = Ql(f, g.mode, x)), (h.return = g), h)
                : ((h = r(h, f.children || [])), (h.return = g), h);
        }
        function m(g, h, f, x, w) {
            return h === null || h.tag !== 7
                ? ((h = qn(f, g.mode, x, w)), (h.return = g), h)
                : ((h = r(h, f)), (h.return = g), h);
        }
        function p(g, h, f) {
            if (typeof h == "string" || typeof h == "number")
                return (h = Jl("" + h, g.mode, f)), (h.return = g), h;
            if (typeof h == "object" && h !== null) {
                switch (h.$$typeof) {
                    case ya:
                        return (
                            (f = Ii(h.type, h.key, h.props, null, g.mode, f)),
                            (f.ref = Wa(g, null, h)),
                            (f.return = g),
                            f
                        );
                    case Kt:
                        return (h = Ql(h, g.mode, f)), (h.return = g), h;
                }
                if (pi(h) || wa(h))
                    return (h = qn(h, g.mode, f, null)), (h.return = g), h;
                hi(g, h);
            }
            return null;
        }
        function d(g, h, f, x) {
            var w = h !== null ? h.key : null;
            if (typeof f == "string" || typeof f == "number")
                return w !== null ? null : s(g, h, "" + f, x);
            if (typeof f == "object" && f !== null) {
                switch (f.$$typeof) {
                    case ya:
                        return f.key === w
                            ? f.type === vt
                                ? m(g, h, f.props.children, x, w)
                                : l(g, h, f, x)
                            : null;
                    case Kt:
                        return f.key === w ? u(g, h, f, x) : null;
                }
                if (pi(f) || wa(f))
                    return w !== null ? null : m(g, h, f, x, null);
                hi(g, f);
            }
            return null;
        }
        function b(g, h, f, x, w) {
            if (typeof x == "string" || typeof x == "number")
                return (g = g.get(f) || null), s(h, g, "" + x, w);
            if (typeof x == "object" && x !== null) {
                switch (x.$$typeof) {
                    case ya:
                        return (
                            (g = g.get(x.key === null ? f : x.key) || null),
                            x.type === vt
                                ? m(h, g, x.props.children, w, x.key)
                                : l(h, g, x, w)
                        );
                    case Kt:
                        return (
                            (g = g.get(x.key === null ? f : x.key) || null),
                            u(h, g, x, w)
                        );
                }
                if (pi(x) || wa(x))
                    return (g = g.get(f) || null), m(h, g, x, w, null);
                hi(h, x);
            }
            return null;
        }
        function y(g, h, f, x) {
            for (
                var w = null, E = null, S = h, $ = (h = 0), T = null;
                S !== null && $ < f.length;
                $++
            ) {
                S.index > $ ? ((T = S), (S = null)) : (T = S.sibling);
                var P = d(g, S, f[$], x);
                if (P === null) {
                    S === null && (S = T);
                    break;
                }
                e && S && P.alternate === null && t(g, S),
                    (h = i(P, h, $)),
                    E === null ? (w = P) : (E.sibling = P),
                    (E = P),
                    (S = T);
            }
            if ($ === f.length) return n(g, S), w;
            if (S === null) {
                for (; $ < f.length; $++)
                    (S = p(g, f[$], x)),
                        S !== null &&
                            ((h = i(S, h, $)),
                            E === null ? (w = S) : (E.sibling = S),
                            (E = S));
                return w;
            }
            for (S = a(g, S); $ < f.length; $++)
                (T = b(S, g, $, f[$], x)),
                    T !== null &&
                        (e &&
                            T.alternate !== null &&
                            S.delete(T.key === null ? $ : T.key),
                        (h = i(T, h, $)),
                        E === null ? (w = T) : (E.sibling = T),
                        (E = T));
            return (
                e &&
                    S.forEach(function (U) {
                        return t(g, U);
                    }),
                w
            );
        }
        function v(g, h, f, x) {
            var w = wa(f);
            if (typeof w != "function") throw Error(C(150));
            if (((f = w.call(f)), f == null)) throw Error(C(151));
            for (
                var E = (w = null), S = h, $ = (h = 0), T = null, P = f.next();
                S !== null && !P.done;
                $++, P = f.next()
            ) {
                S.index > $ ? ((T = S), (S = null)) : (T = S.sibling);
                var U = d(g, S, P.value, x);
                if (U === null) {
                    S === null && (S = T);
                    break;
                }
                e && S && U.alternate === null && t(g, S),
                    (h = i(U, h, $)),
                    E === null ? (w = U) : (E.sibling = U),
                    (E = U),
                    (S = T);
            }
            if (P.done) return n(g, S), w;
            if (S === null) {
                for (; !P.done; $++, P = f.next())
                    (P = p(g, P.value, x)),
                        P !== null &&
                            ((h = i(P, h, $)),
                            E === null ? (w = P) : (E.sibling = P),
                            (E = P));
                return w;
            }
            for (S = a(g, S); !P.done; $++, P = f.next())
                (P = b(S, g, $, P.value, x)),
                    P !== null &&
                        (e &&
                            P.alternate !== null &&
                            S.delete(P.key === null ? $ : P.key),
                        (h = i(P, h, $)),
                        E === null ? (w = P) : (E.sibling = P),
                        (E = P));
            return (
                e &&
                    S.forEach(function (Oe) {
                        return t(g, Oe);
                    }),
                w
            );
        }
        return function (g, h, f, x) {
            var w =
                typeof f == "object" &&
                f !== null &&
                f.type === vt &&
                f.key === null;
            w && (f = f.props.children);
            var E = typeof f == "object" && f !== null;
            if (E)
                switch (f.$$typeof) {
                    case ya:
                        e: {
                            for (E = f.key, w = h; w !== null; ) {
                                if (w.key === E) {
                                    switch (w.tag) {
                                        case 7:
                                            if (f.type === vt) {
                                                n(g, w.sibling),
                                                    (h = r(
                                                        w,
                                                        f.props.children
                                                    )),
                                                    (h.return = g),
                                                    (g = h);
                                                break e;
                                            }
                                            break;
                                        default:
                                            if (w.elementType === f.type) {
                                                n(g, w.sibling),
                                                    (h = r(w, f.props)),
                                                    (h.ref = Wa(g, w, f)),
                                                    (h.return = g),
                                                    (g = h);
                                                break e;
                                            }
                                    }
                                    n(g, w);
                                    break;
                                } else t(g, w);
                                w = w.sibling;
                            }
                            f.type === vt
                                ? ((h = qn(f.props.children, g.mode, x, f.key)),
                                  (h.return = g),
                                  (g = h))
                                : ((x = Ii(
                                      f.type,
                                      f.key,
                                      f.props,
                                      null,
                                      g.mode,
                                      x
                                  )),
                                  (x.ref = Wa(g, h, f)),
                                  (x.return = g),
                                  (g = x));
                        }
                        return o(g);
                    case Kt:
                        e: {
                            for (w = f.key; h !== null; ) {
                                if (h.key === w)
                                    if (
                                        h.tag === 4 &&
                                        h.stateNode.containerInfo ===
                                            f.containerInfo &&
                                        h.stateNode.implementation ===
                                            f.implementation
                                    ) {
                                        n(g, h.sibling),
                                            (h = r(h, f.children || [])),
                                            (h.return = g),
                                            (g = h);
                                        break e;
                                    } else {
                                        n(g, h);
                                        break;
                                    }
                                else t(g, h);
                                h = h.sibling;
                            }
                            (h = Ql(f, g.mode, x)), (h.return = g), (g = h);
                        }
                        return o(g);
                }
            if (typeof f == "string" || typeof f == "number")
                return (
                    (f = "" + f),
                    h !== null && h.tag === 6
                        ? (n(g, h.sibling),
                          (h = r(h, f)),
                          (h.return = g),
                          (g = h))
                        : (n(g, h),
                          (h = Jl(f, g.mode, x)),
                          (h.return = g),
                          (g = h)),
                    o(g)
                );
            if (pi(f)) return y(g, h, f, x);
            if (wa(f)) return v(g, h, f, x);
            if ((E && hi(g, f), typeof f > "u" && !w))
                switch (g.tag) {
                    case 1:
                    case 22:
                    case 0:
                    case 11:
                    case 15:
                        throw Error(C(152, wn(g.type) || "Component"));
                }
            return n(g, h);
        };
    }
    var fi = wm(!0),
        xm = wm(!1),
        qa = {},
        tt = Pt(qa),
        Ga = Pt(qa),
        Ka = Pt(qa);
    function nn(e) {
        if (e === qa) throw Error(C(174));
        return e;
    }
    function fl(e, t) {
        switch ((q(Ka, t), q(Ga, e), q(tt, qa), (e = t.nodeType), e)) {
            case 9:
            case 11:
                t = (t = t.documentElement) ? t.namespaceURI : vs(null, "");
                break;
            default:
                (e = e === 8 ? t.parentNode : t),
                    (t = e.namespaceURI || null),
                    (e = e.tagName),
                    (t = vs(t, e));
        }
        O(tt), q(tt, t);
    }
    function Un() {
        O(tt), O(Ga), O(Ka);
    }
    function Sm(e) {
        nn(Ka.current);
        var t = nn(tt.current),
            n = vs(t, e.type);
        t !== n && (q(Ga, e), q(tt, n));
    }
    function gl(e) {
        Ga.current === e && (O(tt), O(Ga));
    }
    var G = Pt(0);
    function gi(e) {
        for (var t = e; t !== null; ) {
            if (t.tag === 13) {
                var n = t.memoizedState;
                if (
                    n !== null &&
                    ((n = n.dehydrated),
                    n === null || n.data === "$?" || n.data === "$!")
                )
                    return t;
            } else if (t.tag === 19 && t.memoizedProps.revealOrder !== void 0) {
                if (t.flags & 64) return t;
            } else if (t.child !== null) {
                (t.child.return = t), (t = t.child);
                continue;
            }
            if (t === e) break;
            for (; t.sibling === null; ) {
                if (t.return === null || t.return === e) return null;
                t = t.return;
            }
            (t.sibling.return = t.return), (t = t.sibling);
        }
        return null;
    }
    var pt = null,
        zt = null,
        nt = !1;
    function Em(e, t) {
        var n = Ue(5, null, null, 0);
        (n.elementType = "DELETED"),
            (n.type = "DELETED"),
            (n.stateNode = t),
            (n.return = e),
            (n.flags = 8),
            e.lastEffect !== null
                ? ((e.lastEffect.nextEffect = n), (e.lastEffect = n))
                : (e.firstEffect = e.lastEffect = n);
    }
    function Cm(e, t) {
        switch (e.tag) {
            case 5:
                var n = e.type;
                return (
                    (t =
                        t.nodeType !== 1 ||
                        n.toLowerCase() !== t.nodeName.toLowerCase()
                            ? null
                            : t),
                    t !== null ? ((e.stateNode = t), !0) : !1
                );
            case 6:
                return (
                    (t = e.pendingProps === "" || t.nodeType !== 3 ? null : t),
                    t !== null ? ((e.stateNode = t), !0) : !1
                );
            case 13:
                return !1;
            default:
                return !1;
        }
    }
    function bl(e) {
        if (nt) {
            var t = zt;
            if (t) {
                var n = t;
                if (!Cm(e, t)) {
                    if (((t = In(n.nextSibling)), !t || !Cm(e, t))) {
                        (e.flags = (e.flags & -1025) | 2), (nt = !1), (pt = e);
                        return;
                    }
                    Em(pt, n);
                }
                (pt = e), (zt = In(t.firstChild));
            } else (e.flags = (e.flags & -1025) | 2), (nt = !1), (pt = e);
        }
    }
    function $m(e) {
        for (
            e = e.return;
            e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13;

        )
            e = e.return;
        pt = e;
    }
    function bi(e) {
        if (e !== pt) return !1;
        if (!nt) return $m(e), (nt = !0), !1;
        var t = e.type;
        if (
            e.tag !== 5 ||
            (t !== "head" && t !== "body" && !tl(t, e.memoizedProps))
        )
            for (t = zt; t; ) Em(e, t), (t = In(t.nextSibling));
        if (($m(e), e.tag === 13)) {
            if (
                ((e = e.memoizedState),
                (e = e !== null ? e.dehydrated : null),
                !e)
            )
                throw Error(C(317));
            e: {
                for (e = e.nextSibling, t = 0; e; ) {
                    if (e.nodeType === 8) {
                        var n = e.data;
                        if (n === "/$") {
                            if (t === 0) {
                                zt = In(e.nextSibling);
                                break e;
                            }
                            t--;
                        } else (n !== "$" && n !== "$!" && n !== "$?") || t++;
                    }
                    e = e.nextSibling;
                }
                zt = null;
            }
        } else zt = pt ? In(e.stateNode.nextSibling) : null;
        return !0;
    }
    function yl() {
        (zt = pt = null), (nt = !1);
    }
    var Bn = [];
    function kl() {
        for (var e = 0; e < Bn.length; e++)
            Bn[e]._workInProgressVersionPrimary = null;
        Bn.length = 0;
    }
    var Ja = Gt.ReactCurrentDispatcher,
        Le = Gt.ReactCurrentBatchConfig,
        Qa = 0,
        Q = null,
        ye = null,
        ue = null,
        yi = !1,
        Xa = !1;
    function $e() {
        throw Error(C(321));
    }
    function vl(e, t) {
        if (t === null) return !1;
        for (var n = 0; n < t.length && n < e.length; n++)
            if (!Me(e[n], t[n])) return !1;
        return !0;
    }
    function wl(e, t, n, a, r, i) {
        if (
            ((Qa = i),
            (Q = t),
            (t.memoizedState = null),
            (t.updateQueue = null),
            (t.lanes = 0),
            (Ja.current = e === null || e.memoizedState === null ? Jb : Qb),
            (e = n(a, r)),
            Xa)
        ) {
            i = 0;
            do {
                if (((Xa = !1), !(25 > i))) throw Error(C(301));
                (i += 1),
                    (ue = ye = null),
                    (t.updateQueue = null),
                    (Ja.current = Xb),
                    (e = n(a, r));
            } while (Xa);
        }
        if (
            ((Ja.current = xi),
            (t = ye !== null && ye.next !== null),
            (Qa = 0),
            (ue = ye = Q = null),
            (yi = !1),
            t)
        )
            throw Error(C(300));
        return e;
    }
    function an() {
        var e = {
            memoizedState: null,
            baseState: null,
            baseQueue: null,
            queue: null,
            next: null,
        };
        return (
            ue === null ? (Q.memoizedState = ue = e) : (ue = ue.next = e), ue
        );
    }
    function rn() {
        if (ye === null) {
            var e = Q.alternate;
            e = e !== null ? e.memoizedState : null;
        } else e = ye.next;
        var t = ue === null ? Q.memoizedState : ue.next;
        if (t !== null) (ue = t), (ye = e);
        else {
            if (e === null) throw Error(C(310));
            (ye = e),
                (e = {
                    memoizedState: ye.memoizedState,
                    baseState: ye.baseState,
                    baseQueue: ye.baseQueue,
                    queue: ye.queue,
                    next: null,
                }),
                ue === null ? (Q.memoizedState = ue = e) : (ue = ue.next = e);
        }
        return ue;
    }
    function at(e, t) {
        return typeof t == "function" ? t(e) : t;
    }
    function Za(e) {
        var t = rn(),
            n = t.queue;
        if (n === null) throw Error(C(311));
        n.lastRenderedReducer = e;
        var a = ye,
            r = a.baseQueue,
            i = n.pending;
        if (i !== null) {
            if (r !== null) {
                var o = r.next;
                (r.next = i.next), (i.next = o);
            }
            (a.baseQueue = r = i), (n.pending = null);
        }
        if (r !== null) {
            (r = r.next), (a = a.baseState);
            var s = (o = i = null),
                l = r;
            do {
                var u = l.lane;
                if ((Qa & u) === u)
                    s !== null &&
                        (s = s.next =
                            {
                                lane: 0,
                                action: l.action,
                                eagerReducer: l.eagerReducer,
                                eagerState: l.eagerState,
                                next: null,
                            }),
                        (a =
                            l.eagerReducer === e
                                ? l.eagerState
                                : e(a, l.action));
                else {
                    var m = {
                        lane: u,
                        action: l.action,
                        eagerReducer: l.eagerReducer,
                        eagerState: l.eagerState,
                        next: null,
                    };
                    s === null ? ((o = s = m), (i = a)) : (s = s.next = m),
                        (Q.lanes |= u),
                        (ar |= u);
                }
                l = l.next;
            } while (l !== null && l !== r);
            s === null ? (i = a) : (s.next = o),
                Me(a, t.memoizedState) || (Ge = !0),
                (t.memoizedState = a),
                (t.baseState = i),
                (t.baseQueue = s),
                (n.lastRenderedState = a);
        }
        return [t.memoizedState, n.dispatch];
    }
    function er(e) {
        var t = rn(),
            n = t.queue;
        if (n === null) throw Error(C(311));
        n.lastRenderedReducer = e;
        var a = n.dispatch,
            r = n.pending,
            i = t.memoizedState;
        if (r !== null) {
            n.pending = null;
            var o = (r = r.next);
            do (i = e(i, o.action)), (o = o.next);
            while (o !== r);
            Me(i, t.memoizedState) || (Ge = !0),
                (t.memoizedState = i),
                t.baseQueue === null && (t.baseState = i),
                (n.lastRenderedState = i);
        }
        return [i, a];
    }
    function jm(e, t, n) {
        var a = t._getVersion;
        a = a(t._source);
        var r = t._workInProgressVersionPrimary;
        if (
            (r !== null
                ? (e = r === a)
                : ((e = e.mutableReadLanes),
                  (e = (Qa & e) === e) &&
                      ((t._workInProgressVersionPrimary = a), Bn.push(t))),
            e)
        )
            return n(t._source);
        throw (Bn.push(t), Error(C(350)));
    }
    function Pm(e, t, n, a) {
        var r = we;
        if (r === null) throw Error(C(349));
        var i = t._getVersion,
            o = i(t._source),
            s = Ja.current,
            l = s.useState(function () {
                return jm(r, t, n);
            }),
            u = l[1],
            m = l[0];
        l = ue;
        var p = e.memoizedState,
            d = p.refs,
            b = d.getSnapshot,
            y = p.source;
        p = p.subscribe;
        var v = Q;
        return (
            (e.memoizedState = { refs: d, source: t, subscribe: a }),
            s.useEffect(
                function () {
                    (d.getSnapshot = n), (d.setSnapshot = u);
                    var g = i(t._source);
                    if (!Me(o, g)) {
                        (g = n(t._source)),
                            Me(m, g) ||
                                (u(g),
                                (g = Dt(v)),
                                (r.mutableReadLanes |= g & r.pendingLanes)),
                            (g = r.mutableReadLanes),
                            (r.entangledLanes |= g);
                        for (var h = r.entanglements, f = g; 0 < f; ) {
                            var x = 31 - Ct(f),
                                w = 1 << x;
                            (h[x] |= g), (f &= ~w);
                        }
                    }
                },
                [n, t, a]
            ),
            s.useEffect(
                function () {
                    return a(t._source, function () {
                        var g = d.getSnapshot,
                            h = d.setSnapshot;
                        try {
                            h(g(t._source));
                            var f = Dt(v);
                            r.mutableReadLanes |= f & r.pendingLanes;
                        } catch (x) {
                            h(function () {
                                throw x;
                            });
                        }
                    });
                },
                [t, a]
            ),
            (Me(b, n) && Me(y, t) && Me(p, a)) ||
                ((e = {
                    pending: null,
                    dispatch: null,
                    lastRenderedReducer: at,
                    lastRenderedState: m,
                }),
                (e.dispatch = u = Cl.bind(null, Q, e)),
                (l.queue = e),
                (l.baseQueue = null),
                (m = jm(r, t, n)),
                (l.memoizedState = l.baseState = m)),
            m
        );
    }
    function _m(e, t, n) {
        var a = rn();
        return Pm(a, e, t, n);
    }
    function tr(e) {
        var t = an();
        return (
            typeof e == "function" && (e = e()),
            (t.memoizedState = t.baseState = e),
            (e = t.queue =
                {
                    pending: null,
                    dispatch: null,
                    lastRenderedReducer: at,
                    lastRenderedState: e,
                }),
            (e = e.dispatch = Cl.bind(null, Q, e)),
            [t.memoizedState, e]
        );
    }
    function ki(e, t, n, a) {
        return (
            (e = { tag: e, create: t, destroy: n, deps: a, next: null }),
            (t = Q.updateQueue),
            t === null
                ? ((t = { lastEffect: null }),
                  (Q.updateQueue = t),
                  (t.lastEffect = e.next = e))
                : ((n = t.lastEffect),
                  n === null
                      ? (t.lastEffect = e.next = e)
                      : ((a = n.next),
                        (n.next = e),
                        (e.next = a),
                        (t.lastEffect = e))),
            e
        );
    }
    function Nm(e) {
        var t = an();
        return (e = { current: e }), (t.memoizedState = e);
    }
    function vi() {
        return rn().memoizedState;
    }
    function xl(e, t, n, a) {
        var r = an();
        (Q.flags |= e),
            (r.memoizedState = ki(1 | t, n, void 0, a === void 0 ? null : a));
    }
    function Sl(e, t, n, a) {
        var r = rn();
        a = a === void 0 ? null : a;
        var i = void 0;
        if (ye !== null) {
            var o = ye.memoizedState;
            if (((i = o.destroy), a !== null && vl(a, o.deps))) {
                ki(t, n, i, a);
                return;
            }
        }
        (Q.flags |= e), (r.memoizedState = ki(1 | t, n, i, a));
    }
    function Tm(e, t) {
        return xl(516, 4, e, t);
    }
    function wi(e, t) {
        return Sl(516, 4, e, t);
    }
    function Im(e, t) {
        return Sl(4, 2, e, t);
    }
    function zm(e, t) {
        if (typeof t == "function")
            return (
                (e = e()),
                t(e),
                function () {
                    t(null);
                }
            );
        if (t != null)
            return (
                (e = e()),
                (t.current = e),
                function () {
                    t.current = null;
                }
            );
    }
    function Am(e, t, n) {
        return (
            (n = n != null ? n.concat([e]) : null),
            Sl(4, 2, zm.bind(null, t, e), n)
        );
    }
    function El() {}
    function Dm(e, t) {
        var n = rn();
        t = t === void 0 ? null : t;
        var a = n.memoizedState;
        return a !== null && t !== null && vl(t, a[1])
            ? a[0]
            : ((n.memoizedState = [e, t]), e);
    }
    function Mm(e, t) {
        var n = rn();
        t = t === void 0 ? null : t;
        var a = n.memoizedState;
        return a !== null && t !== null && vl(t, a[1])
            ? a[0]
            : ((e = e()), (n.memoizedState = [e, t]), e);
    }
    function Kb(e, t) {
        var n = Rn();
        tn(98 > n ? 98 : n, function () {
            e(!0);
        }),
            tn(97 < n ? 97 : n, function () {
                var a = Le.transition;
                Le.transition = 1;
                try {
                    e(!1), t();
                } finally {
                    Le.transition = a;
                }
            });
    }
    function Cl(e, t, n) {
        var a = Ne(),
            r = Dt(e),
            i = {
                lane: r,
                action: n,
                eagerReducer: null,
                eagerState: null,
                next: null,
            },
            o = t.pending;
        if (
            (o === null ? (i.next = i) : ((i.next = o.next), (o.next = i)),
            (t.pending = i),
            (o = e.alternate),
            e === Q || (o !== null && o === Q))
        )
            Xa = yi = !0;
        else {
            if (
                e.lanes === 0 &&
                (o === null || o.lanes === 0) &&
                ((o = t.lastRenderedReducer), o !== null)
            )
                try {
                    var s = t.lastRenderedState,
                        l = o(s, n);
                    if (((i.eagerReducer = o), (i.eagerState = l), Me(l, s)))
                        return;
                } catch {
                } finally {
                }
            Mt(e, r, a);
        }
    }
    var xi = {
            readContext: Re,
            useCallback: $e,
            useContext: $e,
            useEffect: $e,
            useImperativeHandle: $e,
            useLayoutEffect: $e,
            useMemo: $e,
            useReducer: $e,
            useRef: $e,
            useState: $e,
            useDebugValue: $e,
            useDeferredValue: $e,
            useTransition: $e,
            useMutableSource: $e,
            useOpaqueIdentifier: $e,
            unstable_isNewReconciler: !1,
        },
        Jb = {
            readContext: Re,
            useCallback: function (e, t) {
                return (an().memoizedState = [e, t === void 0 ? null : t]), e;
            },
            useContext: Re,
            useEffect: Tm,
            useImperativeHandle: function (e, t, n) {
                return (
                    (n = n != null ? n.concat([e]) : null),
                    xl(4, 2, zm.bind(null, t, e), n)
                );
            },
            useLayoutEffect: function (e, t) {
                return xl(4, 2, e, t);
            },
            useMemo: function (e, t) {
                var n = an();
                return (
                    (t = t === void 0 ? null : t),
                    (e = e()),
                    (n.memoizedState = [e, t]),
                    e
                );
            },
            useReducer: function (e, t, n) {
                var a = an();
                return (
                    (t = n !== void 0 ? n(t) : t),
                    (a.memoizedState = a.baseState = t),
                    (e = a.queue =
                        {
                            pending: null,
                            dispatch: null,
                            lastRenderedReducer: e,
                            lastRenderedState: t,
                        }),
                    (e = e.dispatch = Cl.bind(null, Q, e)),
                    [a.memoizedState, e]
                );
            },
            useRef: Nm,
            useState: tr,
            useDebugValue: El,
            useDeferredValue: function (e) {
                var t = tr(e),
                    n = t[0],
                    a = t[1];
                return (
                    Tm(
                        function () {
                            var r = Le.transition;
                            Le.transition = 1;
                            try {
                                a(e);
                            } finally {
                                Le.transition = r;
                            }
                        },
                        [e]
                    ),
                    n
                );
            },
            useTransition: function () {
                var e = tr(!1),
                    t = e[0];
                return (e = Kb.bind(null, e[1])), Nm(e), [e, t];
            },
            useMutableSource: function (e, t, n) {
                var a = an();
                return (
                    (a.memoizedState = {
                        refs: { getSnapshot: t, setSnapshot: null },
                        source: e,
                        subscribe: n,
                    }),
                    Pm(a, e, t, n)
                );
            },
            useOpaqueIdentifier: function () {
                if (nt) {
                    var e = !1,
                        t = Ob(function () {
                            throw (
                                (e || ((e = !0), n("r:" + (al++).toString(36))),
                                Error(C(355)))
                            );
                        }),
                        n = tr(t)[1];
                    return (
                        !(Q.mode & 2) &&
                            ((Q.flags |= 516),
                            ki(
                                5,
                                function () {
                                    n("r:" + (al++).toString(36));
                                },
                                void 0,
                                null
                            )),
                        t
                    );
                }
                return (t = "r:" + (al++).toString(36)), tr(t), t;
            },
            unstable_isNewReconciler: !1,
        },
        Qb = {
            readContext: Re,
            useCallback: Dm,
            useContext: Re,
            useEffect: wi,
            useImperativeHandle: Am,
            useLayoutEffect: Im,
            useMemo: Mm,
            useReducer: Za,
            useRef: vi,
            useState: function () {
                return Za(at);
            },
            useDebugValue: El,
            useDeferredValue: function (e) {
                var t = Za(at),
                    n = t[0],
                    a = t[1];
                return (
                    wi(
                        function () {
                            var r = Le.transition;
                            Le.transition = 1;
                            try {
                                a(e);
                            } finally {
                                Le.transition = r;
                            }
                        },
                        [e]
                    ),
                    n
                );
            },
            useTransition: function () {
                var e = Za(at)[0];
                return [vi().current, e];
            },
            useMutableSource: _m,
            useOpaqueIdentifier: function () {
                return Za(at)[0];
            },
            unstable_isNewReconciler: !1,
        },
        Xb = {
            readContext: Re,
            useCallback: Dm,
            useContext: Re,
            useEffect: wi,
            useImperativeHandle: Am,
            useLayoutEffect: Im,
            useMemo: Mm,
            useReducer: er,
            useRef: vi,
            useState: function () {
                return er(at);
            },
            useDebugValue: El,
            useDeferredValue: function (e) {
                var t = er(at),
                    n = t[0],
                    a = t[1];
                return (
                    wi(
                        function () {
                            var r = Le.transition;
                            Le.transition = 1;
                            try {
                                a(e);
                            } finally {
                                Le.transition = r;
                            }
                        },
                        [e]
                    ),
                    n
                );
            },
            useTransition: function () {
                var e = er(at)[0];
                return [vi().current, e];
            },
            useMutableSource: _m,
            useOpaqueIdentifier: function () {
                return er(at)[0];
            },
            unstable_isNewReconciler: !1,
        },
        Zb = Gt.ReactCurrentOwner,
        Ge = !1;
    function je(e, t, n, a) {
        t.child = e === null ? xm(t, null, n, a) : fi(t, e.child, n, a);
    }
    function Rm(e, t, n, a, r) {
        n = n.render;
        var i = t.ref;
        return (
            Yn(t, r),
            (a = wl(e, t, n, a, i, r)),
            e !== null && !Ge
                ? ((t.updateQueue = e.updateQueue),
                  (t.flags &= -517),
                  (e.lanes &= ~r),
                  ht(e, t, r))
                : ((t.flags |= 1), je(e, t, a, r), t.child)
        );
    }
    function Lm(e, t, n, a, r, i) {
        if (e === null) {
            var o = n.type;
            return typeof o == "function" &&
                !Gl(o) &&
                o.defaultProps === void 0 &&
                n.compare === null &&
                n.defaultProps === void 0
                ? ((t.tag = 15), (t.type = o), Ym(e, t, o, a, r, i))
                : ((e = Ii(n.type, null, a, t, t.mode, i)),
                  (e.ref = t.ref),
                  (e.return = t),
                  (t.child = e));
        }
        return (
            (o = e.child),
            !(r & i) &&
            ((r = o.memoizedProps),
            (n = n.compare),
            (n = n !== null ? n : Ya),
            n(r, a) && e.ref === t.ref)
                ? ht(e, t, i)
                : ((t.flags |= 1),
                  (e = Yt(o, a)),
                  (e.ref = t.ref),
                  (e.return = t),
                  (t.child = e))
        );
    }
    function Ym(e, t, n, a, r, i) {
        if (e !== null && Ya(e.memoizedProps, a) && e.ref === t.ref)
            if (((Ge = !1), (i & r) !== 0)) e.flags & 16384 && (Ge = !0);
            else return (t.lanes = e.lanes), ht(e, t, i);
        return jl(e, t, n, a, i);
    }
    function $l(e, t, n) {
        var a = t.pendingProps,
            r = a.children,
            i = e !== null ? e.memoizedState : null;
        if (a.mode === "hidden" || a.mode === "unstable-defer-without-hiding")
            if (!(t.mode & 4)) (t.memoizedState = { baseLanes: 0 }), Ti(t, n);
            else if (n & 1073741824)
                (t.memoizedState = { baseLanes: 0 }),
                    Ti(t, i !== null ? i.baseLanes : n);
            else
                return (
                    (e = i !== null ? i.baseLanes | n : n),
                    (t.lanes = t.childLanes = 1073741824),
                    (t.memoizedState = { baseLanes: e }),
                    Ti(t, e),
                    null
                );
        else
            i !== null
                ? ((a = i.baseLanes | n), (t.memoizedState = null))
                : (a = n),
                Ti(t, a);
        return je(e, t, r, n), t.child;
    }
    function Um(e, t) {
        var n = t.ref;
        ((e === null && n !== null) || (e !== null && e.ref !== n)) &&
            (t.flags |= 128);
    }
    function jl(e, t, n, a, r) {
        var i = Ce(n) ? Zt : ge.current;
        return (
            (i = Mn(t, i)),
            Yn(t, r),
            (n = wl(e, t, n, a, i, r)),
            e !== null && !Ge
                ? ((t.updateQueue = e.updateQueue),
                  (t.flags &= -517),
                  (e.lanes &= ~r),
                  ht(e, t, r))
                : ((t.flags |= 1), je(e, t, n, r), t.child)
        );
    }
    function Bm(e, t, n, a, r) {
        if (Ce(n)) {
            var i = !0;
            ii(t);
        } else i = !1;
        if ((Yn(t, r), t.stateNode === null))
            e !== null &&
                ((e.alternate = null), (t.alternate = null), (t.flags |= 2)),
                km(t, n, a),
                hl(t, n, a, r),
                (a = !0);
        else if (e === null) {
            var o = t.stateNode,
                s = t.memoizedProps;
            o.props = s;
            var l = o.context,
                u = n.contextType;
            typeof u == "object" && u !== null
                ? (u = Re(u))
                : ((u = Ce(n) ? Zt : ge.current), (u = Mn(t, u)));
            var m = n.getDerivedStateFromProps,
                p =
                    typeof m == "function" ||
                    typeof o.getSnapshotBeforeUpdate == "function";
            p ||
                (typeof o.UNSAFE_componentWillReceiveProps != "function" &&
                    typeof o.componentWillReceiveProps != "function") ||
                ((s !== a || l !== u) && vm(t, o, a, u)),
                (Nt = !1);
            var d = t.memoizedState;
            (o.state = d),
                Va(t, a, o, r),
                (l = t.memoizedState),
                s !== a || d !== l || Ee.current || Nt
                    ? (typeof m == "function" &&
                          (di(t, n, m, a), (l = t.memoizedState)),
                      (s = Nt || ym(t, n, s, a, d, l, u))
                          ? (p ||
                                (typeof o.UNSAFE_componentWillMount !=
                                    "function" &&
                                    typeof o.componentWillMount !=
                                        "function") ||
                                (typeof o.componentWillMount == "function" &&
                                    o.componentWillMount(),
                                typeof o.UNSAFE_componentWillMount ==
                                    "function" &&
                                    o.UNSAFE_componentWillMount()),
                            typeof o.componentDidMount == "function" &&
                                (t.flags |= 4))
                          : (typeof o.componentDidMount == "function" &&
                                (t.flags |= 4),
                            (t.memoizedProps = a),
                            (t.memoizedState = l)),
                      (o.props = a),
                      (o.state = l),
                      (o.context = u),
                      (a = s))
                    : (typeof o.componentDidMount == "function" &&
                          (t.flags |= 4),
                      (a = !1));
        } else {
            (o = t.stateNode),
                hm(e, t),
                (s = t.memoizedProps),
                (u = t.type === t.elementType ? s : qe(t.type, s)),
                (o.props = u),
                (p = t.pendingProps),
                (d = o.context),
                (l = n.contextType),
                typeof l == "object" && l !== null
                    ? (l = Re(l))
                    : ((l = Ce(n) ? Zt : ge.current), (l = Mn(t, l)));
            var b = n.getDerivedStateFromProps;
            (m =
                typeof b == "function" ||
                typeof o.getSnapshotBeforeUpdate == "function") ||
                (typeof o.UNSAFE_componentWillReceiveProps != "function" &&
                    typeof o.componentWillReceiveProps != "function") ||
                ((s !== p || d !== l) && vm(t, o, a, l)),
                (Nt = !1),
                (d = t.memoizedState),
                (o.state = d),
                Va(t, a, o, r);
            var y = t.memoizedState;
            s !== p || d !== y || Ee.current || Nt
                ? (typeof b == "function" &&
                      (di(t, n, b, a), (y = t.memoizedState)),
                  (u = Nt || ym(t, n, u, a, d, y, l))
                      ? (m ||
                            (typeof o.UNSAFE_componentWillUpdate !=
                                "function" &&
                                typeof o.componentWillUpdate != "function") ||
                            (typeof o.componentWillUpdate == "function" &&
                                o.componentWillUpdate(a, y, l),
                            typeof o.UNSAFE_componentWillUpdate == "function" &&
                                o.UNSAFE_componentWillUpdate(a, y, l)),
                        typeof o.componentDidUpdate == "function" &&
                            (t.flags |= 4),
                        typeof o.getSnapshotBeforeUpdate == "function" &&
                            (t.flags |= 256))
                      : (typeof o.componentDidUpdate != "function" ||
                            (s === e.memoizedProps && d === e.memoizedState) ||
                            (t.flags |= 4),
                        typeof o.getSnapshotBeforeUpdate != "function" ||
                            (s === e.memoizedProps && d === e.memoizedState) ||
                            (t.flags |= 256),
                        (t.memoizedProps = a),
                        (t.memoizedState = y)),
                  (o.props = a),
                  (o.state = y),
                  (o.context = l),
                  (a = u))
                : (typeof o.componentDidUpdate != "function" ||
                      (s === e.memoizedProps && d === e.memoizedState) ||
                      (t.flags |= 4),
                  typeof o.getSnapshotBeforeUpdate != "function" ||
                      (s === e.memoizedProps && d === e.memoizedState) ||
                      (t.flags |= 256),
                  (a = !1));
        }
        return Pl(e, t, n, a, i, r);
    }
    function Pl(e, t, n, a, r, i) {
        Um(e, t);
        var o = (t.flags & 64) !== 0;
        if (!a && !o) return r && rm(t, n, !1), ht(e, t, i);
        (a = t.stateNode), (Zb.current = t);
        var s =
            o && typeof n.getDerivedStateFromError != "function"
                ? null
                : a.render();
        return (
            (t.flags |= 1),
            e !== null && o
                ? ((t.child = fi(t, e.child, null, i)),
                  (t.child = fi(t, null, s, i)))
                : je(e, t, s, i),
            (t.memoizedState = a.state),
            r && rm(t, n, !0),
            t.child
        );
    }
    function Fm(e) {
        var t = e.stateNode;
        t.pendingContext
            ? nm(e, t.pendingContext, t.pendingContext !== t.context)
            : t.context && nm(e, t.context, !1),
            fl(e, t.containerInfo);
    }
    var Si = { dehydrated: null, retryLane: 0 };
    function Om(e, t, n) {
        var a = t.pendingProps,
            r = G.current,
            i = !1,
            o;
        return (
            (o = (t.flags & 64) !== 0) ||
                (o =
                    e !== null && e.memoizedState === null
                        ? !1
                        : (r & 2) !== 0),
            o
                ? ((i = !0), (t.flags &= -65))
                : (e !== null && e.memoizedState === null) ||
                  a.fallback === void 0 ||
                  a.unstable_avoidThisFallback === !0 ||
                  (r |= 1),
            q(G, r & 1),
            e === null
                ? (a.fallback !== void 0 && bl(t),
                  (e = a.children),
                  (r = a.fallback),
                  i
                      ? ((e = Hm(t, e, r, n)),
                        (t.child.memoizedState = { baseLanes: n }),
                        (t.memoizedState = Si),
                        e)
                      : typeof a.unstable_expectedLoadTime == "number"
                      ? ((e = Hm(t, e, r, n)),
                        (t.child.memoizedState = { baseLanes: n }),
                        (t.memoizedState = Si),
                        (t.lanes = 33554432),
                        e)
                      : ((n = Kl(
                            { mode: "visible", children: e },
                            t.mode,
                            n,
                            null
                        )),
                        (n.return = t),
                        (t.child = n)))
                : e.memoizedState !== null
                ? i
                    ? ((a = Wm(e, t, a.children, a.fallback, n)),
                      (i = t.child),
                      (r = e.child.memoizedState),
                      (i.memoizedState =
                          r === null
                              ? { baseLanes: n }
                              : { baseLanes: r.baseLanes | n }),
                      (i.childLanes = e.childLanes & ~n),
                      (t.memoizedState = Si),
                      a)
                    : ((n = Vm(e, t, a.children, n)),
                      (t.memoizedState = null),
                      n)
                : i
                ? ((a = Wm(e, t, a.children, a.fallback, n)),
                  (i = t.child),
                  (r = e.child.memoizedState),
                  (i.memoizedState =
                      r === null
                          ? { baseLanes: n }
                          : { baseLanes: r.baseLanes | n }),
                  (i.childLanes = e.childLanes & ~n),
                  (t.memoizedState = Si),
                  a)
                : ((n = Vm(e, t, a.children, n)), (t.memoizedState = null), n)
        );
    }
    function Hm(e, t, n, a) {
        var r = e.mode,
            i = e.child;
        return (
            (t = { mode: "hidden", children: t }),
            !(r & 2) && i !== null
                ? ((i.childLanes = 0), (i.pendingProps = t))
                : (i = Kl(t, r, 0, null)),
            (n = qn(n, r, a, null)),
            (i.return = e),
            (n.return = e),
            (i.sibling = n),
            (e.child = i),
            n
        );
    }
    function Vm(e, t, n, a) {
        var r = e.child;
        return (
            (e = r.sibling),
            (n = Yt(r, { mode: "visible", children: n })),
            !(t.mode & 2) && (n.lanes = a),
            (n.return = t),
            (n.sibling = null),
            e !== null &&
                ((e.nextEffect = null),
                (e.flags = 8),
                (t.firstEffect = t.lastEffect = e)),
            (t.child = n)
        );
    }
    function Wm(e, t, n, a, r) {
        var i = t.mode,
            o = e.child;
        e = o.sibling;
        var s = { mode: "hidden", children: n };
        return (
            !(i & 2) && t.child !== o
                ? ((n = t.child),
                  (n.childLanes = 0),
                  (n.pendingProps = s),
                  (o = n.lastEffect),
                  o !== null
                      ? ((t.firstEffect = n.firstEffect),
                        (t.lastEffect = o),
                        (o.nextEffect = null))
                      : (t.firstEffect = t.lastEffect = null))
                : (n = Yt(o, s)),
            e !== null
                ? (a = Yt(e, a))
                : ((a = qn(a, i, r, null)), (a.flags |= 2)),
            (a.return = t),
            (n.return = t),
            (n.sibling = a),
            (t.child = n),
            a
        );
    }
    function qm(e, t) {
        e.lanes |= t;
        var n = e.alternate;
        n !== null && (n.lanes |= t), pm(e.return, t);
    }
    function _l(e, t, n, a, r, i) {
        var o = e.memoizedState;
        o === null
            ? (e.memoizedState = {
                  isBackwards: t,
                  rendering: null,
                  renderingStartTime: 0,
                  last: a,
                  tail: n,
                  tailMode: r,
                  lastEffect: i,
              })
            : ((o.isBackwards = t),
              (o.rendering = null),
              (o.renderingStartTime = 0),
              (o.last = a),
              (o.tail = n),
              (o.tailMode = r),
              (o.lastEffect = i));
    }
    function Gm(e, t, n) {
        var a = t.pendingProps,
            r = a.revealOrder,
            i = a.tail;
        if ((je(e, t, a.children, n), (a = G.current), a & 2))
            (a = (a & 1) | 2), (t.flags |= 64);
        else {
            if (e !== null && e.flags & 64)
                e: for (e = t.child; e !== null; ) {
                    if (e.tag === 13) e.memoizedState !== null && qm(e, n);
                    else if (e.tag === 19) qm(e, n);
                    else if (e.child !== null) {
                        (e.child.return = e), (e = e.child);
                        continue;
                    }
                    if (e === t) break e;
                    for (; e.sibling === null; ) {
                        if (e.return === null || e.return === t) break e;
                        e = e.return;
                    }
                    (e.sibling.return = e.return), (e = e.sibling);
                }
            a &= 1;
        }
        if ((q(G, a), !(t.mode & 2))) t.memoizedState = null;
        else
            switch (r) {
                case "forwards":
                    for (n = t.child, r = null; n !== null; )
                        (e = n.alternate),
                            e !== null && gi(e) === null && (r = n),
                            (n = n.sibling);
                    (n = r),
                        n === null
                            ? ((r = t.child), (t.child = null))
                            : ((r = n.sibling), (n.sibling = null)),
                        _l(t, !1, r, n, i, t.lastEffect);
                    break;
                case "backwards":
                    for (n = null, r = t.child, t.child = null; r !== null; ) {
                        if (((e = r.alternate), e !== null && gi(e) === null)) {
                            t.child = r;
                            break;
                        }
                        (e = r.sibling), (r.sibling = n), (n = r), (r = e);
                    }
                    _l(t, !0, n, null, i, t.lastEffect);
                    break;
                case "together":
                    _l(t, !1, null, null, void 0, t.lastEffect);
                    break;
                default:
                    t.memoizedState = null;
            }
        return t.child;
    }
    function ht(e, t, n) {
        if (
            (e !== null && (t.dependencies = e.dependencies),
            (ar |= t.lanes),
            n & t.childLanes)
        ) {
            if (e !== null && t.child !== e.child) throw Error(C(153));
            if (t.child !== null) {
                for (
                    e = t.child,
                        n = Yt(e, e.pendingProps),
                        t.child = n,
                        n.return = t;
                    e.sibling !== null;

                )
                    (e = e.sibling),
                        (n = n.sibling = Yt(e, e.pendingProps)),
                        (n.return = t);
                n.sibling = null;
            }
            return t.child;
        }
        return null;
    }
    var Km, Nl, Jm, Qm;
    (Km = function (e, t) {
        for (var n = t.child; n !== null; ) {
            if (n.tag === 5 || n.tag === 6) e.appendChild(n.stateNode);
            else if (n.tag !== 4 && n.child !== null) {
                (n.child.return = n), (n = n.child);
                continue;
            }
            if (n === t) break;
            for (; n.sibling === null; ) {
                if (n.return === null || n.return === t) return;
                n = n.return;
            }
            (n.sibling.return = n.return), (n = n.sibling);
        }
    }),
        (Nl = function () {}),
        (Jm = function (e, t, n, a) {
            var r = e.memoizedProps;
            if (r !== a) {
                (e = t.stateNode), nn(tt.current);
                var i = null;
                switch (n) {
                    case "input":
                        (r = hs(e, r)), (a = hs(e, a)), (i = []);
                        break;
                    case "option":
                        (r = bs(e, r)), (a = bs(e, a)), (i = []);
                        break;
                    case "select":
                        (r = H({}, r, { value: void 0 })),
                            (a = H({}, a, { value: void 0 })),
                            (i = []);
                        break;
                    case "textarea":
                        (r = ys(e, r)), (a = ys(e, a)), (i = []);
                        break;
                    default:
                        typeof r.onClick != "function" &&
                            typeof a.onClick == "function" &&
                            (e.onclick = ei);
                }
                ws(n, a);
                var o;
                n = null;
                for (u in r)
                    if (
                        !a.hasOwnProperty(u) &&
                        r.hasOwnProperty(u) &&
                        r[u] != null
                    )
                        if (u === "style") {
                            var s = r[u];
                            for (o in s)
                                s.hasOwnProperty(o) &&
                                    (n || (n = {}), (n[o] = ""));
                        } else
                            u !== "dangerouslySetInnerHTML" &&
                                u !== "children" &&
                                u !== "suppressContentEditableWarning" &&
                                u !== "suppressHydrationWarning" &&
                                u !== "autoFocus" &&
                                (ba.hasOwnProperty(u)
                                    ? i || (i = [])
                                    : (i = i || []).push(u, null));
                for (u in a) {
                    var l = a[u];
                    if (
                        ((s = r != null ? r[u] : void 0),
                        a.hasOwnProperty(u) &&
                            l !== s &&
                            (l != null || s != null))
                    )
                        if (u === "style")
                            if (s) {
                                for (o in s)
                                    !s.hasOwnProperty(o) ||
                                        (l && l.hasOwnProperty(o)) ||
                                        (n || (n = {}), (n[o] = ""));
                                for (o in l)
                                    l.hasOwnProperty(o) &&
                                        s[o] !== l[o] &&
                                        (n || (n = {}), (n[o] = l[o]));
                            } else n || (i || (i = []), i.push(u, n)), (n = l);
                        else
                            u === "dangerouslySetInnerHTML"
                                ? ((l = l ? l.__html : void 0),
                                  (s = s ? s.__html : void 0),
                                  l != null &&
                                      s !== l &&
                                      (i = i || []).push(u, l))
                                : u === "children"
                                ? (typeof l != "string" &&
                                      typeof l != "number") ||
                                  (i = i || []).push(u, "" + l)
                                : u !== "suppressContentEditableWarning" &&
                                  u !== "suppressHydrationWarning" &&
                                  (ba.hasOwnProperty(u)
                                      ? (l != null &&
                                            u === "onScroll" &&
                                            F("scroll", e),
                                        i || s === l || (i = []))
                                      : typeof l == "object" &&
                                        l !== null &&
                                        l.$$typeof === cs
                                      ? l.toString()
                                      : (i = i || []).push(u, l));
                }
                n && (i = i || []).push("style", n);
                var u = i;
                (t.updateQueue = u) && (t.flags |= 4);
            }
        }),
        (Qm = function (e, t, n, a) {
            n !== a && (t.flags |= 4);
        });
    function nr(e, t) {
        if (!nt)
            switch (e.tailMode) {
                case "hidden":
                    t = e.tail;
                    for (var n = null; t !== null; )
                        t.alternate !== null && (n = t), (t = t.sibling);
                    n === null ? (e.tail = null) : (n.sibling = null);
                    break;
                case "collapsed":
                    n = e.tail;
                    for (var a = null; n !== null; )
                        n.alternate !== null && (a = n), (n = n.sibling);
                    a === null
                        ? t || e.tail === null
                            ? (e.tail = null)
                            : (e.tail.sibling = null)
                        : (a.sibling = null);
            }
    }
    function ey(e, t, n) {
        var a = t.pendingProps;
        switch (t.tag) {
            case 2:
            case 16:
            case 15:
            case 0:
            case 11:
            case 7:
            case 8:
            case 12:
            case 9:
            case 14:
                return null;
            case 1:
                return Ce(t.type) && ri(), null;
            case 3:
                return (
                    Un(),
                    O(Ee),
                    O(ge),
                    kl(),
                    (a = t.stateNode),
                    a.pendingContext &&
                        ((a.context = a.pendingContext),
                        (a.pendingContext = null)),
                    (e === null || e.child === null) &&
                        (bi(t)
                            ? (t.flags |= 4)
                            : a.hydrate || (t.flags |= 256)),
                    Nl(t),
                    null
                );
            case 5:
                gl(t);
                var r = nn(Ka.current);
                if (((n = t.type), e !== null && t.stateNode != null))
                    Jm(e, t, n, a, r), e.ref !== t.ref && (t.flags |= 128);
                else {
                    if (!a) {
                        if (t.stateNode === null) throw Error(C(166));
                        return null;
                    }
                    if (((e = nn(tt.current)), bi(t))) {
                        (a = t.stateNode), (n = t.type);
                        var i = t.memoizedProps;
                        switch (((a[jt] = t), (a[ni] = i), n)) {
                            case "dialog":
                                F("cancel", a), F("close", a);
                                break;
                            case "iframe":
                            case "object":
                            case "embed":
                                F("load", a);
                                break;
                            case "video":
                            case "audio":
                                for (e = 0; e < Ba.length; e++) F(Ba[e], a);
                                break;
                            case "source":
                                F("error", a);
                                break;
                            case "img":
                            case "image":
                            case "link":
                                F("error", a), F("load", a);
                                break;
                            case "details":
                                F("toggle", a);
                                break;
                            case "input":
                                Bu(a, i), F("invalid", a);
                                break;
                            case "select":
                                (a._wrapperState = {
                                    wasMultiple: !!i.multiple,
                                }),
                                    F("invalid", a);
                                break;
                            case "textarea":
                                Hu(a, i), F("invalid", a);
                        }
                        ws(n, i), (e = null);
                        for (var o in i)
                            i.hasOwnProperty(o) &&
                                ((r = i[o]),
                                o === "children"
                                    ? typeof r == "string"
                                        ? a.textContent !== r &&
                                          (e = ["children", r])
                                        : typeof r == "number" &&
                                          a.textContent !== "" + r &&
                                          (e = ["children", "" + r])
                                    : ba.hasOwnProperty(o) &&
                                      r != null &&
                                      o === "onScroll" &&
                                      F("scroll", a));
                        switch (n) {
                            case "input":
                                Rr(a), Ou(a, i, !0);
                                break;
                            case "textarea":
                                Rr(a), Wu(a);
                                break;
                            case "select":
                            case "option":
                                break;
                            default:
                                typeof i.onClick == "function" &&
                                    (a.onclick = ei);
                        }
                        (a = e),
                            (t.updateQueue = a),
                            a !== null && (t.flags |= 4);
                    } else {
                        switch (
                            ((o = r.nodeType === 9 ? r : r.ownerDocument),
                            e === ks.html && (e = qu(n)),
                            e === ks.html
                                ? n === "script"
                                    ? ((e = o.createElement("div")),
                                      (e.innerHTML = "<script></script>"),
                                      (e = e.removeChild(e.firstChild)))
                                    : typeof a.is == "string"
                                    ? (e = o.createElement(n, { is: a.is }))
                                    : ((e = o.createElement(n)),
                                      n === "select" &&
                                          ((o = e),
                                          a.multiple
                                              ? (o.multiple = !0)
                                              : a.size && (o.size = a.size)))
                                : (e = o.createElementNS(e, n)),
                            (e[jt] = t),
                            (e[ni] = a),
                            Km(e, t, !1, !1),
                            (t.stateNode = e),
                            (o = xs(n, a)),
                            n)
                        ) {
                            case "dialog":
                                F("cancel", e), F("close", e), (r = a);
                                break;
                            case "iframe":
                            case "object":
                            case "embed":
                                F("load", e), (r = a);
                                break;
                            case "video":
                            case "audio":
                                for (r = 0; r < Ba.length; r++) F(Ba[r], e);
                                r = a;
                                break;
                            case "source":
                                F("error", e), (r = a);
                                break;
                            case "img":
                            case "image":
                            case "link":
                                F("error", e), F("load", e), (r = a);
                                break;
                            case "details":
                                F("toggle", e), (r = a);
                                break;
                            case "input":
                                Bu(e, a), (r = hs(e, a)), F("invalid", e);
                                break;
                            case "option":
                                r = bs(e, a);
                                break;
                            case "select":
                                (e._wrapperState = {
                                    wasMultiple: !!a.multiple,
                                }),
                                    (r = H({}, a, { value: void 0 })),
                                    F("invalid", e);
                                break;
                            case "textarea":
                                Hu(e, a), (r = ys(e, a)), F("invalid", e);
                                break;
                            default:
                                r = a;
                        }
                        ws(n, r);
                        var s = r;
                        for (i in s)
                            if (s.hasOwnProperty(i)) {
                                var l = s[i];
                                i === "style"
                                    ? Ju(e, l)
                                    : i === "dangerouslySetInnerHTML"
                                    ? ((l = l ? l.__html : void 0),
                                      l != null && Gu(e, l))
                                    : i === "children"
                                    ? typeof l == "string"
                                        ? (n !== "textarea" || l !== "") &&
                                          Sa(e, l)
                                        : typeof l == "number" && Sa(e, "" + l)
                                    : i !== "suppressContentEditableWarning" &&
                                      i !== "suppressHydrationWarning" &&
                                      i !== "autoFocus" &&
                                      (ba.hasOwnProperty(i)
                                          ? l != null &&
                                            i === "onScroll" &&
                                            F("scroll", e)
                                          : l != null && as(e, i, l, o));
                            }
                        switch (n) {
                            case "input":
                                Rr(e), Ou(e, a, !1);
                                break;
                            case "textarea":
                                Rr(e), Wu(e);
                                break;
                            case "option":
                                a.value != null &&
                                    e.setAttribute("value", "" + wt(a.value));
                                break;
                            case "select":
                                (e.multiple = !!a.multiple),
                                    (i = a.value),
                                    i != null
                                        ? xn(e, !!a.multiple, i, !1)
                                        : a.defaultValue != null &&
                                          xn(
                                              e,
                                              !!a.multiple,
                                              a.defaultValue,
                                              !0
                                          );
                                break;
                            default:
                                typeof r.onClick == "function" &&
                                    (e.onclick = ei);
                        }
                        Qd(n, a) && (t.flags |= 4);
                    }
                    t.ref !== null && (t.flags |= 128);
                }
                return null;
            case 6:
                if (e && t.stateNode != null) Qm(e, t, e.memoizedProps, a);
                else {
                    if (typeof a != "string" && t.stateNode === null)
                        throw Error(C(166));
                    (n = nn(Ka.current)),
                        nn(tt.current),
                        bi(t)
                            ? ((a = t.stateNode),
                              (n = t.memoizedProps),
                              (a[jt] = t),
                              a.nodeValue !== n && (t.flags |= 4))
                            : ((a = (
                                  n.nodeType === 9 ? n : n.ownerDocument
                              ).createTextNode(a)),
                              (a[jt] = t),
                              (t.stateNode = a));
                }
                return null;
            case 13:
                return (
                    O(G),
                    (a = t.memoizedState),
                    t.flags & 64
                        ? ((t.lanes = n), t)
                        : ((a = a !== null),
                          (n = !1),
                          e === null
                              ? t.memoizedProps.fallback !== void 0 && bi(t)
                              : (n = e.memoizedState !== null),
                          a &&
                              !n &&
                              t.mode & 2 &&
                              ((e === null &&
                                  t.memoizedProps.unstable_avoidThisFallback !==
                                      !0) ||
                              G.current & 1
                                  ? de === 0 && (de = 3)
                                  : ((de === 0 || de === 3) && (de = 4),
                                    we === null ||
                                        (!(ar & 134217727) &&
                                            !(On & 134217727)) ||
                                        Vn(we, ke))),
                          (a || n) && (t.flags |= 4),
                          null)
                );
            case 4:
                return (
                    Un(),
                    Nl(t),
                    e === null && Wd(t.stateNode.containerInfo),
                    null
                );
            case 10:
                return ml(t), null;
            case 17:
                return Ce(t.type) && ri(), null;
            case 19:
                if ((O(G), (a = t.memoizedState), a === null)) return null;
                if (((i = (t.flags & 64) !== 0), (o = a.rendering), o === null))
                    if (i) nr(a, !1);
                    else {
                        if (de !== 0 || (e !== null && e.flags & 64))
                            for (e = t.child; e !== null; ) {
                                if (((o = gi(e)), o !== null)) {
                                    for (
                                        t.flags |= 64,
                                            nr(a, !1),
                                            i = o.updateQueue,
                                            i !== null &&
                                                ((t.updateQueue = i),
                                                (t.flags |= 4)),
                                            a.lastEffect === null &&
                                                (t.firstEffect = null),
                                            t.lastEffect = a.lastEffect,
                                            a = n,
                                            n = t.child;
                                        n !== null;

                                    )
                                        (i = n),
                                            (e = a),
                                            (i.flags &= 2),
                                            (i.nextEffect = null),
                                            (i.firstEffect = null),
                                            (i.lastEffect = null),
                                            (o = i.alternate),
                                            o === null
                                                ? ((i.childLanes = 0),
                                                  (i.lanes = e),
                                                  (i.child = null),
                                                  (i.memoizedProps = null),
                                                  (i.memoizedState = null),
                                                  (i.updateQueue = null),
                                                  (i.dependencies = null),
                                                  (i.stateNode = null))
                                                : ((i.childLanes =
                                                      o.childLanes),
                                                  (i.lanes = o.lanes),
                                                  (i.child = o.child),
                                                  (i.memoizedProps =
                                                      o.memoizedProps),
                                                  (i.memoizedState =
                                                      o.memoizedState),
                                                  (i.updateQueue =
                                                      o.updateQueue),
                                                  (i.type = o.type),
                                                  (e = o.dependencies),
                                                  (i.dependencies =
                                                      e === null
                                                          ? null
                                                          : {
                                                                lanes: e.lanes,
                                                                firstContext:
                                                                    e.firstContext,
                                                            })),
                                            (n = n.sibling);
                                    return q(G, (G.current & 1) | 2), t.child;
                                }
                                e = e.sibling;
                            }
                        a.tail !== null &&
                            be() > Bl &&
                            ((t.flags |= 64),
                            (i = !0),
                            nr(a, !1),
                            (t.lanes = 33554432));
                    }
                else {
                    if (!i)
                        if (((e = gi(o)), e !== null)) {
                            if (
                                ((t.flags |= 64),
                                (i = !0),
                                (n = e.updateQueue),
                                n !== null &&
                                    ((t.updateQueue = n), (t.flags |= 4)),
                                nr(a, !0),
                                a.tail === null &&
                                    a.tailMode === "hidden" &&
                                    !o.alternate &&
                                    !nt)
                            )
                                return (
                                    (t = t.lastEffect = a.lastEffect),
                                    t !== null && (t.nextEffect = null),
                                    null
                                );
                        } else
                            2 * be() - a.renderingStartTime > Bl &&
                                n !== 1073741824 &&
                                ((t.flags |= 64),
                                (i = !0),
                                nr(a, !1),
                                (t.lanes = 33554432));
                    a.isBackwards
                        ? ((o.sibling = t.child), (t.child = o))
                        : ((n = a.last),
                          n !== null ? (n.sibling = o) : (t.child = o),
                          (a.last = o));
                }
                return a.tail !== null
                    ? ((n = a.tail),
                      (a.rendering = n),
                      (a.tail = n.sibling),
                      (a.lastEffect = t.lastEffect),
                      (a.renderingStartTime = be()),
                      (n.sibling = null),
                      (t = G.current),
                      q(G, i ? (t & 1) | 2 : t & 1),
                      n)
                    : null;
            case 23:
            case 24:
                return (
                    ql(),
                    e !== null &&
                        (e.memoizedState !== null) !=
                            (t.memoizedState !== null) &&
                        a.mode !== "unstable-defer-without-hiding" &&
                        (t.flags |= 4),
                    null
                );
        }
        throw Error(C(156, t.tag));
    }
    function ty(e) {
        switch (e.tag) {
            case 1:
                Ce(e.type) && ri();
                var t = e.flags;
                return t & 4096 ? ((e.flags = (t & -4097) | 64), e) : null;
            case 3:
                if ((Un(), O(Ee), O(ge), kl(), (t = e.flags), t & 64))
                    throw Error(C(285));
                return (e.flags = (t & -4097) | 64), e;
            case 5:
                return gl(e), null;
            case 13:
                return (
                    O(G),
                    (t = e.flags),
                    t & 4096 ? ((e.flags = (t & -4097) | 64), e) : null
                );
            case 19:
                return O(G), null;
            case 4:
                return Un(), null;
            case 10:
                return ml(e), null;
            case 23:
            case 24:
                return ql(), null;
            default:
                return null;
        }
    }
    function Tl(e, t) {
        try {
            var n = "",
                a = t;
            do (n += Dg(a)), (a = a.return);
            while (a);
            var r = n;
        } catch (i) {
            r =
                `
Error generating stack: ` +
                i.message +
                `
` +
                i.stack;
        }
        return { value: e, source: t, stack: r };
    }
    function Il(e, t) {
        try {
            console.error(t.value);
        } catch (n) {
            setTimeout(function () {
                throw n;
            });
        }
    }
    var ny = typeof WeakMap == "function" ? WeakMap : Map;
    function Xm(e, t, n) {
        (n = Tt(-1, n)), (n.tag = 3), (n.payload = { element: null });
        var a = t.value;
        return (
            (n.callback = function () {
                $i || (($i = !0), (Fl = a)), Il(e, t);
            }),
            n
        );
    }
    function Zm(e, t, n) {
        (n = Tt(-1, n)), (n.tag = 3);
        var a = e.type.getDerivedStateFromError;
        if (typeof a == "function") {
            var r = t.value;
            n.payload = function () {
                return Il(e, t), a(r);
            };
        }
        var i = e.stateNode;
        return (
            i !== null &&
                typeof i.componentDidCatch == "function" &&
                (n.callback = function () {
                    typeof a != "function" &&
                        (rt === null ? (rt = new Set([this])) : rt.add(this),
                        Il(e, t));
                    var o = t.stack;
                    this.componentDidCatch(t.value, {
                        componentStack: o !== null ? o : "",
                    });
                }),
            n
        );
    }
    var ay = typeof WeakSet == "function" ? WeakSet : Set;
    function ep(e) {
        var t = e.ref;
        if (t !== null)
            if (typeof t == "function")
                try {
                    t(null);
                } catch (n) {
                    Lt(e, n);
                }
            else t.current = null;
    }
    function ry(e, t) {
        switch (t.tag) {
            case 0:
            case 11:
            case 15:
            case 22:
                return;
            case 1:
                if (t.flags & 256 && e !== null) {
                    var n = e.memoizedProps,
                        a = e.memoizedState;
                    (e = t.stateNode),
                        (t = e.getSnapshotBeforeUpdate(
                            t.elementType === t.type ? n : qe(t.type, n),
                            a
                        )),
                        (e.__reactInternalSnapshotBeforeUpdate = t);
                }
                return;
            case 3:
                t.flags & 256 && nl(t.stateNode.containerInfo);
                return;
            case 5:
            case 6:
            case 4:
            case 17:
                return;
        }
        throw Error(C(163));
    }
    function iy(e, t, n) {
        switch (n.tag) {
            case 0:
            case 11:
            case 15:
            case 22:
                if (
                    ((t = n.updateQueue),
                    (t = t !== null ? t.lastEffect : null),
                    t !== null)
                ) {
                    e = t = t.next;
                    do {
                        if ((e.tag & 3) === 3) {
                            var a = e.create;
                            e.destroy = a();
                        }
                        e = e.next;
                    } while (e !== t);
                }
                if (
                    ((t = n.updateQueue),
                    (t = t !== null ? t.lastEffect : null),
                    t !== null)
                ) {
                    e = t = t.next;
                    do {
                        var r = e;
                        (a = r.next),
                            (r = r.tag),
                            r & 4 && r & 1 && (fp(n, e), py(n, e)),
                            (e = a);
                    } while (e !== t);
                }
                return;
            case 1:
                (e = n.stateNode),
                    n.flags & 4 &&
                        (t === null
                            ? e.componentDidMount()
                            : ((a =
                                  n.elementType === n.type
                                      ? t.memoizedProps
                                      : qe(n.type, t.memoizedProps)),
                              e.componentDidUpdate(
                                  a,
                                  t.memoizedState,
                                  e.__reactInternalSnapshotBeforeUpdate
                              ))),
                    (t = n.updateQueue),
                    t !== null && gm(n, t, e);
                return;
            case 3:
                if (((t = n.updateQueue), t !== null)) {
                    if (((e = null), n.child !== null))
                        switch (n.child.tag) {
                            case 5:
                                e = n.child.stateNode;
                                break;
                            case 1:
                                e = n.child.stateNode;
                        }
                    gm(n, t, e);
                }
                return;
            case 5:
                (e = n.stateNode),
                    t === null &&
                        n.flags & 4 &&
                        Qd(n.type, n.memoizedProps) &&
                        e.focus();
                return;
            case 6:
                return;
            case 4:
                return;
            case 12:
                return;
            case 13:
                n.memoizedState === null &&
                    ((n = n.alternate),
                    n !== null &&
                        ((n = n.memoizedState),
                        n !== null &&
                            ((n = n.dehydrated), n !== null && md(n))));
                return;
            case 19:
            case 17:
            case 20:
            case 21:
            case 23:
            case 24:
                return;
        }
        throw Error(C(163));
    }
    function tp(e, t) {
        for (var n = e; ; ) {
            if (n.tag === 5) {
                var a = n.stateNode;
                if (t)
                    (a = a.style),
                        typeof a.setProperty == "function"
                            ? a.setProperty("display", "none", "important")
                            : (a.display = "none");
                else {
                    a = n.stateNode;
                    var r = n.memoizedProps.style;
                    (r =
                        r != null && r.hasOwnProperty("display")
                            ? r.display
                            : null),
                        (a.style.display = Ku("display", r));
                }
            } else if (n.tag === 6)
                n.stateNode.nodeValue = t ? "" : n.memoizedProps;
            else if (
                ((n.tag !== 23 && n.tag !== 24) ||
                    n.memoizedState === null ||
                    n === e) &&
                n.child !== null
            ) {
                (n.child.return = n), (n = n.child);
                continue;
            }
            if (n === e) break;
            for (; n.sibling === null; ) {
                if (n.return === null || n.return === e) return;
                n = n.return;
            }
            (n.sibling.return = n.return), (n = n.sibling);
        }
    }
    function np(e, t) {
        if (en && typeof en.onCommitFiberUnmount == "function")
            try {
                en.onCommitFiberUnmount(il, t);
            } catch {}
        switch (t.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
            case 22:
                if (
                    ((e = t.updateQueue),
                    e !== null && ((e = e.lastEffect), e !== null))
                ) {
                    var n = (e = e.next);
                    do {
                        var a = n,
                            r = a.destroy;
                        if (((a = a.tag), r !== void 0))
                            if (a & 4) fp(t, n);
                            else {
                                a = t;
                                try {
                                    r();
                                } catch (i) {
                                    Lt(a, i);
                                }
                            }
                        n = n.next;
                    } while (n !== e);
                }
                break;
            case 1:
                if (
                    (ep(t),
                    (e = t.stateNode),
                    typeof e.componentWillUnmount == "function")
                )
                    try {
                        (e.props = t.memoizedProps),
                            (e.state = t.memoizedState),
                            e.componentWillUnmount();
                    } catch (i) {
                        Lt(t, i);
                    }
                break;
            case 5:
                ep(t);
                break;
            case 4:
                op(e, t);
        }
    }
    function ap(e) {
        (e.alternate = null),
            (e.child = null),
            (e.dependencies = null),
            (e.firstEffect = null),
            (e.lastEffect = null),
            (e.memoizedProps = null),
            (e.memoizedState = null),
            (e.pendingProps = null),
            (e.return = null),
            (e.updateQueue = null);
    }
    function rp(e) {
        return e.tag === 5 || e.tag === 3 || e.tag === 4;
    }
    function ip(e) {
        e: {
            for (var t = e.return; t !== null; ) {
                if (rp(t)) break e;
                t = t.return;
            }
            throw Error(C(160));
        }
        var n = t;
        switch (((t = n.stateNode), n.tag)) {
            case 5:
                var a = !1;
                break;
            case 3:
                (t = t.containerInfo), (a = !0);
                break;
            case 4:
                (t = t.containerInfo), (a = !0);
                break;
            default:
                throw Error(C(161));
        }
        n.flags & 16 && (Sa(t, ""), (n.flags &= -17));
        e: t: for (n = e; ; ) {
            for (; n.sibling === null; ) {
                if (n.return === null || rp(n.return)) {
                    n = null;
                    break e;
                }
                n = n.return;
            }
            for (
                n.sibling.return = n.return, n = n.sibling;
                n.tag !== 5 && n.tag !== 6 && n.tag !== 18;

            ) {
                if (n.flags & 2 || n.child === null || n.tag === 4) continue t;
                (n.child.return = n), (n = n.child);
            }
            if (!(n.flags & 2)) {
                n = n.stateNode;
                break e;
            }
        }
        a ? zl(e, n, t) : Al(e, n, t);
    }
    function zl(e, t, n) {
        var a = e.tag,
            r = a === 5 || a === 6;
        if (r)
            (e = r ? e.stateNode : e.stateNode.instance),
                t
                    ? n.nodeType === 8
                        ? n.parentNode.insertBefore(e, t)
                        : n.insertBefore(e, t)
                    : (n.nodeType === 8
                          ? ((t = n.parentNode), t.insertBefore(e, n))
                          : ((t = n), t.appendChild(e)),
                      (n = n._reactRootContainer),
                      n != null || t.onclick !== null || (t.onclick = ei));
        else if (a !== 4 && ((e = e.child), e !== null))
            for (zl(e, t, n), e = e.sibling; e !== null; )
                zl(e, t, n), (e = e.sibling);
    }
    function Al(e, t, n) {
        var a = e.tag,
            r = a === 5 || a === 6;
        if (r)
            (e = r ? e.stateNode : e.stateNode.instance),
                t ? n.insertBefore(e, t) : n.appendChild(e);
        else if (a !== 4 && ((e = e.child), e !== null))
            for (Al(e, t, n), e = e.sibling; e !== null; )
                Al(e, t, n), (e = e.sibling);
    }
    function op(e, t) {
        for (var n = t, a = !1, r, i; ; ) {
            if (!a) {
                a = n.return;
                e: for (;;) {
                    if (a === null) throw Error(C(160));
                    switch (((r = a.stateNode), a.tag)) {
                        case 5:
                            i = !1;
                            break e;
                        case 3:
                            (r = r.containerInfo), (i = !0);
                            break e;
                        case 4:
                            (r = r.containerInfo), (i = !0);
                            break e;
                    }
                    a = a.return;
                }
                a = !0;
            }
            if (n.tag === 5 || n.tag === 6) {
                e: for (var o = e, s = n, l = s; ; )
                    if ((np(o, l), l.child !== null && l.tag !== 4))
                        (l.child.return = l), (l = l.child);
                    else {
                        if (l === s) break e;
                        for (; l.sibling === null; ) {
                            if (l.return === null || l.return === s) break e;
                            l = l.return;
                        }
                        (l.sibling.return = l.return), (l = l.sibling);
                    }
                i
                    ? ((o = r),
                      (s = n.stateNode),
                      o.nodeType === 8
                          ? o.parentNode.removeChild(s)
                          : o.removeChild(s))
                    : r.removeChild(n.stateNode);
            } else if (n.tag === 4) {
                if (n.child !== null) {
                    (r = n.stateNode.containerInfo),
                        (i = !0),
                        (n.child.return = n),
                        (n = n.child);
                    continue;
                }
            } else if ((np(e, n), n.child !== null)) {
                (n.child.return = n), (n = n.child);
                continue;
            }
            if (n === t) break;
            for (; n.sibling === null; ) {
                if (n.return === null || n.return === t) return;
                (n = n.return), n.tag === 4 && (a = !1);
            }
            (n.sibling.return = n.return), (n = n.sibling);
        }
    }
    function Dl(e, t) {
        switch (t.tag) {
            case 0:
            case 11:
            case 14:
            case 15:
            case 22:
                var n = t.updateQueue;
                if (((n = n !== null ? n.lastEffect : null), n !== null)) {
                    var a = (n = n.next);
                    do
                        (a.tag & 3) === 3 &&
                            ((e = a.destroy),
                            (a.destroy = void 0),
                            e !== void 0 && e()),
                            (a = a.next);
                    while (a !== n);
                }
                return;
            case 1:
                return;
            case 5:
                if (((n = t.stateNode), n != null)) {
                    a = t.memoizedProps;
                    var r = e !== null ? e.memoizedProps : a;
                    e = t.type;
                    var i = t.updateQueue;
                    if (((t.updateQueue = null), i !== null)) {
                        for (
                            n[ni] = a,
                                e === "input" &&
                                    a.type === "radio" &&
                                    a.name != null &&
                                    Fu(n, a),
                                xs(e, r),
                                t = xs(e, a),
                                r = 0;
                            r < i.length;
                            r += 2
                        ) {
                            var o = i[r],
                                s = i[r + 1];
                            o === "style"
                                ? Ju(n, s)
                                : o === "dangerouslySetInnerHTML"
                                ? Gu(n, s)
                                : o === "children"
                                ? Sa(n, s)
                                : as(n, o, s, t);
                        }
                        switch (e) {
                            case "input":
                                fs(n, a);
                                break;
                            case "textarea":
                                Vu(n, a);
                                break;
                            case "select":
                                (e = n._wrapperState.wasMultiple),
                                    (n._wrapperState.wasMultiple =
                                        !!a.multiple),
                                    (i = a.value),
                                    i != null
                                        ? xn(n, !!a.multiple, i, !1)
                                        : e !== !!a.multiple &&
                                          (a.defaultValue != null
                                              ? xn(
                                                    n,
                                                    !!a.multiple,
                                                    a.defaultValue,
                                                    !0
                                                )
                                              : xn(
                                                    n,
                                                    !!a.multiple,
                                                    a.multiple ? [] : "",
                                                    !1
                                                ));
                        }
                    }
                }
                return;
            case 6:
                if (t.stateNode === null) throw Error(C(162));
                t.stateNode.nodeValue = t.memoizedProps;
                return;
            case 3:
                (n = t.stateNode),
                    n.hydrate && ((n.hydrate = !1), md(n.containerInfo));
                return;
            case 12:
                return;
            case 13:
                t.memoizedState !== null && ((Ul = be()), tp(t.child, !0)),
                    sp(t);
                return;
            case 19:
                sp(t);
                return;
            case 17:
                return;
            case 23:
            case 24:
                tp(t, t.memoizedState !== null);
                return;
        }
        throw Error(C(163));
    }
    function sp(e) {
        var t = e.updateQueue;
        if (t !== null) {
            e.updateQueue = null;
            var n = e.stateNode;
            n === null && (n = e.stateNode = new ay()),
                t.forEach(function (a) {
                    var r = gy.bind(null, e, a);
                    n.has(a) || (n.add(a), a.then(r, r));
                });
        }
    }
    function oy(e, t) {
        return e !== null &&
            ((e = e.memoizedState), e === null || e.dehydrated !== null)
            ? ((t = t.memoizedState), t !== null && t.dehydrated === null)
            : !1;
    }
    var sy = Math.ceil,
        Ei = Gt.ReactCurrentDispatcher,
        Ml = Gt.ReactCurrentOwner,
        I = 0,
        we = null,
        Z = null,
        ke = 0,
        on = 0,
        Rl = Pt(0),
        de = 0,
        Ci = null,
        Fn = 0,
        ar = 0,
        On = 0,
        Ll = 0,
        Yl = null,
        Ul = 0,
        Bl = 1 / 0;
    function Hn() {
        Bl = be() + 500;
    }
    var N = null,
        $i = !1,
        Fl = null,
        rt = null,
        At = !1,
        rr = null,
        ir = 90,
        Ol = [],
        Hl = [],
        ft = null,
        or = 0,
        Vl = null,
        ji = -1,
        gt = 0,
        Pi = 0,
        sr = null,
        _i = !1;
    function Ne() {
        return I & 48 ? be() : ji !== -1 ? ji : (ji = be());
    }
    function Dt(e) {
        if (((e = e.mode), !(e & 2))) return 1;
        if (!(e & 4)) return Rn() === 99 ? 1 : 2;
        if ((gt === 0 && (gt = Fn), Gb.transition !== 0)) {
            Pi !== 0 && (Pi = Yl !== null ? Yl.pendingLanes : 0), (e = gt);
            var t = 4186112 & ~Pi;
            return (
                (t &= -t),
                t === 0 &&
                    ((e = 4186112 & ~e), (t = e & -e), t === 0 && (t = 8192)),
                t
            );
        }
        return (
            (e = Rn()),
            I & 4 && e === 98
                ? (e = Vr(12, gt))
                : ((e = Qg(e)), (e = Vr(e, gt))),
            e
        );
    }
    function Mt(e, t, n) {
        if (50 < or) throw ((or = 0), (Vl = null), Error(C(185)));
        if (((e = Ni(e, t)), e === null)) return null;
        Wr(e, t, n), e === we && ((On |= t), de === 4 && Vn(e, ke));
        var a = Rn();
        t === 1
            ? I & 8 && !(I & 48)
                ? Wl(e)
                : (Ye(e, n), I === 0 && (Hn(), et()))
            : (!(I & 4) ||
                  (a !== 98 && a !== 99) ||
                  (ft === null ? (ft = new Set([e])) : ft.add(e)),
              Ye(e, n)),
            (Yl = e);
    }
    function Ni(e, t) {
        e.lanes |= t;
        var n = e.alternate;
        for (n !== null && (n.lanes |= t), n = e, e = e.return; e !== null; )
            (e.childLanes |= t),
                (n = e.alternate),
                n !== null && (n.childLanes |= t),
                (n = e),
                (e = e.return);
        return n.tag === 3 ? n.stateNode : null;
    }
    function Ye(e, t) {
        for (
            var n = e.callbackNode,
                a = e.suspendedLanes,
                r = e.pingedLanes,
                i = e.expirationTimes,
                o = e.pendingLanes;
            0 < o;

        ) {
            var s = 31 - Ct(o),
                l = 1 << s,
                u = i[s];
            if (u === -1) {
                if (!(l & a) || l & r) {
                    (u = t), $n(l);
                    var m = B;
                    i[s] = 10 <= m ? u + 250 : 6 <= m ? u + 5e3 : -1;
                }
            } else u <= t && (e.expiredLanes |= l);
            o &= ~l;
        }
        if (((a = za(e, e === we ? ke : 0)), (t = B), a === 0))
            n !== null &&
                (n !== cl && sl(n),
                (e.callbackNode = null),
                (e.callbackPriority = 0));
        else {
            if (n !== null) {
                if (e.callbackPriority === t) return;
                n !== cl && sl(n);
            }
            t === 15
                ? ((n = Wl.bind(null, e)),
                  mt === null ? ((mt = [n]), (si = ol(oi, mm))) : mt.push(n),
                  (n = cl))
                : t === 14
                ? (n = Ha(99, Wl.bind(null, e)))
                : ((n = Xg(t)), (n = Ha(n, lp.bind(null, e)))),
                (e.callbackPriority = t),
                (e.callbackNode = n);
        }
    }
    function lp(e) {
        if (((ji = -1), (Pi = gt = 0), I & 48)) throw Error(C(327));
        var t = e.callbackNode;
        if (Rt() && e.callbackNode !== t) return null;
        var n = za(e, e === we ? ke : 0);
        if (n === 0) return null;
        var a = n,
            r = I;
        I |= 16;
        var i = mp();
        (we !== e || ke !== a) && (Hn(), Wn(e, a));
        do
            try {
                uy();
                break;
            } catch (s) {
                dp(e, s);
            }
        while (1);
        if (
            (dl(),
            (Ei.current = i),
            (I = r),
            Z !== null ? (a = 0) : ((we = null), (ke = 0), (a = de)),
            Fn & On)
        )
            Wn(e, 0);
        else if (a !== 0) {
            if (
                (a === 2 &&
                    ((I |= 64),
                    e.hydrate && ((e.hydrate = !1), nl(e.containerInfo)),
                    (n = kd(e)),
                    n !== 0 && (a = lr(e, n))),
                a === 1)
            )
                throw ((t = Ci), Wn(e, 0), Vn(e, n), Ye(e, be()), t);
            switch (
                ((e.finishedWork = e.current.alternate),
                (e.finishedLanes = n),
                a)
            ) {
                case 0:
                case 1:
                    throw Error(C(345));
                case 2:
                    sn(e);
                    break;
                case 3:
                    if (
                        (Vn(e, n),
                        (n & 62914560) === n && ((a = Ul + 500 - be()), 10 < a))
                    ) {
                        if (za(e, 0) !== 0) break;
                        if (((r = e.suspendedLanes), (r & n) !== n)) {
                            Ne(), (e.pingedLanes |= e.suspendedLanes & r);
                            break;
                        }
                        e.timeoutHandle = Xd(sn.bind(null, e), a);
                        break;
                    }
                    sn(e);
                    break;
                case 4:
                    if ((Vn(e, n), (n & 4186112) === n)) break;
                    for (a = e.eventTimes, r = -1; 0 < n; ) {
                        var o = 31 - Ct(n);
                        (i = 1 << o), (o = a[o]), o > r && (r = o), (n &= ~i);
                    }
                    if (
                        ((n = r),
                        (n = be() - n),
                        (n =
                            (120 > n
                                ? 120
                                : 480 > n
                                ? 480
                                : 1080 > n
                                ? 1080
                                : 1920 > n
                                ? 1920
                                : 3e3 > n
                                ? 3e3
                                : 4320 > n
                                ? 4320
                                : 1960 * sy(n / 1960)) - n),
                        10 < n)
                    ) {
                        e.timeoutHandle = Xd(sn.bind(null, e), n);
                        break;
                    }
                    sn(e);
                    break;
                case 5:
                    sn(e);
                    break;
                default:
                    throw Error(C(329));
            }
        }
        return Ye(e, be()), e.callbackNode === t ? lp.bind(null, e) : null;
    }
    function Vn(e, t) {
        for (
            t &= ~Ll,
                t &= ~On,
                e.suspendedLanes |= t,
                e.pingedLanes &= ~t,
                e = e.expirationTimes;
            0 < t;

        ) {
            var n = 31 - Ct(t),
                a = 1 << n;
            (e[n] = -1), (t &= ~a);
        }
    }
    function Wl(e) {
        if (I & 48) throw Error(C(327));
        if ((Rt(), e === we && e.expiredLanes & ke)) {
            var t = ke,
                n = lr(e, t);
            Fn & On && ((t = za(e, t)), (n = lr(e, t)));
        } else (t = za(e, 0)), (n = lr(e, t));
        if (
            (e.tag !== 0 &&
                n === 2 &&
                ((I |= 64),
                e.hydrate && ((e.hydrate = !1), nl(e.containerInfo)),
                (t = kd(e)),
                t !== 0 && (n = lr(e, t))),
            n === 1)
        )
            throw ((n = Ci), Wn(e, 0), Vn(e, t), Ye(e, be()), n);
        return (
            (e.finishedWork = e.current.alternate),
            (e.finishedLanes = t),
            sn(e),
            Ye(e, be()),
            null
        );
    }
    function ly() {
        if (ft !== null) {
            var e = ft;
            (ft = null),
                e.forEach(function (t) {
                    (t.expiredLanes |= 24 & t.pendingLanes), Ye(t, be());
                });
        }
        et();
    }
    function cp(e, t) {
        var n = I;
        I |= 1;
        try {
            return e(t);
        } finally {
            (I = n), I === 0 && (Hn(), et());
        }
    }
    function up(e, t) {
        var n = I;
        (I &= -2), (I |= 8);
        try {
            return e(t);
        } finally {
            (I = n), I === 0 && (Hn(), et());
        }
    }
    function Ti(e, t) {
        q(Rl, on), (on |= t), (Fn |= t);
    }
    function ql() {
        (on = Rl.current), O(Rl);
    }
    function Wn(e, t) {
        (e.finishedWork = null), (e.finishedLanes = 0);
        var n = e.timeoutHandle;
        if ((n !== -1 && ((e.timeoutHandle = -1), Fb(n)), Z !== null))
            for (n = Z.return; n !== null; ) {
                var a = n;
                switch (a.tag) {
                    case 1:
                        (a = a.type.childContextTypes), a != null && ri();
                        break;
                    case 3:
                        Un(), O(Ee), O(ge), kl();
                        break;
                    case 5:
                        gl(a);
                        break;
                    case 4:
                        Un();
                        break;
                    case 13:
                        O(G);
                        break;
                    case 19:
                        O(G);
                        break;
                    case 10:
                        ml(a);
                        break;
                    case 23:
                    case 24:
                        ql();
                }
                n = n.return;
            }
        (we = e),
            (Z = Yt(e.current, null)),
            (ke = on = Fn = t),
            (de = 0),
            (Ci = null),
            (Ll = On = ar = 0);
    }
    function dp(e, t) {
        do {
            var n = Z;
            try {
                if ((dl(), (Ja.current = xi), yi)) {
                    for (var a = Q.memoizedState; a !== null; ) {
                        var r = a.queue;
                        r !== null && (r.pending = null), (a = a.next);
                    }
                    yi = !1;
                }
                if (
                    ((Qa = 0),
                    (ue = ye = Q = null),
                    (Xa = !1),
                    (Ml.current = null),
                    n === null || n.return === null)
                ) {
                    (de = 1), (Ci = t), (Z = null);
                    break;
                }
                e: {
                    var i = e,
                        o = n.return,
                        s = n,
                        l = t;
                    if (
                        ((t = ke),
                        (s.flags |= 2048),
                        (s.firstEffect = s.lastEffect = null),
                        l !== null &&
                            typeof l == "object" &&
                            typeof l.then == "function")
                    ) {
                        var u = l;
                        if (!(s.mode & 2)) {
                            var m = s.alternate;
                            m
                                ? ((s.updateQueue = m.updateQueue),
                                  (s.memoizedState = m.memoizedState),
                                  (s.lanes = m.lanes))
                                : ((s.updateQueue = null),
                                  (s.memoizedState = null));
                        }
                        var p = (G.current & 1) !== 0,
                            d = o;
                        do {
                            var b;
                            if ((b = d.tag === 13)) {
                                var y = d.memoizedState;
                                if (y !== null) b = y.dehydrated !== null;
                                else {
                                    var v = d.memoizedProps;
                                    b =
                                        v.fallback === void 0
                                            ? !1
                                            : v.unstable_avoidThisFallback !==
                                              !0
                                            ? !0
                                            : !p;
                                }
                            }
                            if (b) {
                                var g = d.updateQueue;
                                if (g === null) {
                                    var h = new Set();
                                    h.add(u), (d.updateQueue = h);
                                } else g.add(u);
                                if (!(d.mode & 2)) {
                                    if (
                                        ((d.flags |= 64),
                                        (s.flags |= 16384),
                                        (s.flags &= -2981),
                                        s.tag === 1)
                                    )
                                        if (s.alternate === null) s.tag = 17;
                                        else {
                                            var f = Tt(-1, 1);
                                            (f.tag = 2), It(s, f);
                                        }
                                    s.lanes |= 1;
                                    break e;
                                }
                                (l = void 0), (s = t);
                                var x = i.pingCache;
                                if (
                                    (x === null
                                        ? ((x = i.pingCache = new ny()),
                                          (l = new Set()),
                                          x.set(u, l))
                                        : ((l = x.get(u)),
                                          l === void 0 &&
                                              ((l = new Set()), x.set(u, l))),
                                    !l.has(s))
                                ) {
                                    l.add(s);
                                    var w = fy.bind(null, i, u, s);
                                    u.then(w, w);
                                }
                                (d.flags |= 4096), (d.lanes = t);
                                break e;
                            }
                            d = d.return;
                        } while (d !== null);
                        l = Error(
                            (wn(s.type) || "A React component") +
                                ` suspended while rendering, but no fallback UI was specified.

Add a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.`
                        );
                    }
                    de !== 5 && (de = 2), (l = Tl(l, s)), (d = o);
                    do {
                        switch (d.tag) {
                            case 3:
                                (i = l),
                                    (d.flags |= 4096),
                                    (t &= -t),
                                    (d.lanes |= t);
                                var E = Xm(d, i, t);
                                fm(d, E);
                                break e;
                            case 1:
                                i = l;
                                var S = d.type,
                                    $ = d.stateNode;
                                if (
                                    !(d.flags & 64) &&
                                    (typeof S.getDerivedStateFromError ==
                                        "function" ||
                                        ($ !== null &&
                                            typeof $.componentDidCatch ==
                                                "function" &&
                                            (rt === null || !rt.has($))))
                                ) {
                                    (d.flags |= 4096),
                                        (t &= -t),
                                        (d.lanes |= t);
                                    var T = Zm(d, i, t);
                                    fm(d, T);
                                    break e;
                                }
                        }
                        d = d.return;
                    } while (d !== null);
                }
                hp(n);
            } catch (P) {
                (t = P), Z === n && n !== null && (Z = n = n.return);
                continue;
            }
            break;
        } while (1);
    }
    function mp() {
        var e = Ei.current;
        return (Ei.current = xi), e === null ? xi : e;
    }
    function lr(e, t) {
        var n = I;
        I |= 16;
        var a = mp();
        (we === e && ke === t) || Wn(e, t);
        do
            try {
                cy();
                break;
            } catch (r) {
                dp(e, r);
            }
        while (1);
        if ((dl(), (I = n), (Ei.current = a), Z !== null)) throw Error(C(261));
        return (we = null), (ke = 0), de;
    }
    function cy() {
        for (; Z !== null; ) pp(Z);
    }
    function uy() {
        for (; Z !== null && !Vb(); ) pp(Z);
    }
    function pp(e) {
        var t = bp(e.alternate, e, on);
        (e.memoizedProps = e.pendingProps),
            t === null ? hp(e) : (Z = t),
            (Ml.current = null);
    }
    function hp(e) {
        var t = e;
        do {
            var n = t.alternate;
            if (((e = t.return), t.flags & 2048)) {
                if (((n = ty(t)), n !== null)) {
                    (n.flags &= 2047), (Z = n);
                    return;
                }
                e !== null &&
                    ((e.firstEffect = e.lastEffect = null), (e.flags |= 2048));
            } else {
                if (((n = ey(n, t, on)), n !== null)) {
                    Z = n;
                    return;
                }
                if (
                    ((n = t),
                    (n.tag !== 24 && n.tag !== 23) ||
                        n.memoizedState === null ||
                        on & 1073741824 ||
                        !(n.mode & 4))
                ) {
                    for (var a = 0, r = n.child; r !== null; )
                        (a |= r.lanes | r.childLanes), (r = r.sibling);
                    n.childLanes = a;
                }
                e !== null &&
                    !(e.flags & 2048) &&
                    (e.firstEffect === null && (e.firstEffect = t.firstEffect),
                    t.lastEffect !== null &&
                        (e.lastEffect !== null &&
                            (e.lastEffect.nextEffect = t.firstEffect),
                        (e.lastEffect = t.lastEffect)),
                    1 < t.flags &&
                        (e.lastEffect !== null
                            ? (e.lastEffect.nextEffect = t)
                            : (e.firstEffect = t),
                        (e.lastEffect = t)));
            }
            if (((t = t.sibling), t !== null)) {
                Z = t;
                return;
            }
            Z = t = e;
        } while (t !== null);
        de === 0 && (de = 5);
    }
    function sn(e) {
        var t = Rn();
        return tn(99, dy.bind(null, e, t)), null;
    }
    function dy(e, t) {
        do Rt();
        while (rr !== null);
        if (I & 48) throw Error(C(327));
        var n = e.finishedWork;
        if (n === null) return null;
        if (((e.finishedWork = null), (e.finishedLanes = 0), n === e.current))
            throw Error(C(177));
        e.callbackNode = null;
        var a = n.lanes | n.childLanes,
            r = a,
            i = e.pendingLanes & ~r;
        (e.pendingLanes = r),
            (e.suspendedLanes = 0),
            (e.pingedLanes = 0),
            (e.expiredLanes &= r),
            (e.mutableReadLanes &= r),
            (e.entangledLanes &= r),
            (r = e.entanglements);
        for (var o = e.eventTimes, s = e.expirationTimes; 0 < i; ) {
            var l = 31 - Ct(i),
                u = 1 << l;
            (r[l] = 0), (o[l] = -1), (s[l] = -1), (i &= ~u);
        }
        if (
            (ft !== null && !(a & 24) && ft.has(e) && ft.delete(e),
            e === we && ((Z = we = null), (ke = 0)),
            1 < n.flags
                ? n.lastEffect !== null
                    ? ((n.lastEffect.nextEffect = n), (a = n.firstEffect))
                    : (a = n)
                : (a = n.firstEffect),
            a !== null)
        ) {
            if (
                ((r = I),
                (I |= 32),
                (Ml.current = null),
                (Zs = qr),
                (o = Yd()),
                Ks(o))
            ) {
                if ("selectionStart" in o)
                    s = { start: o.selectionStart, end: o.selectionEnd };
                else
                    e: if (
                        ((s =
                            ((s = o.ownerDocument) && s.defaultView) || window),
                        (u = s.getSelection && s.getSelection()) &&
                            u.rangeCount !== 0)
                    ) {
                        (s = u.anchorNode),
                            (i = u.anchorOffset),
                            (l = u.focusNode),
                            (u = u.focusOffset);
                        try {
                            s.nodeType, l.nodeType;
                        } catch {
                            s = null;
                            break e;
                        }
                        var m = 0,
                            p = -1,
                            d = -1,
                            b = 0,
                            y = 0,
                            v = o,
                            g = null;
                        t: for (;;) {
                            for (
                                var h;
                                v !== s ||
                                    (i !== 0 && v.nodeType !== 3) ||
                                    (p = m + i),
                                    v !== l ||
                                        (u !== 0 && v.nodeType !== 3) ||
                                        (d = m + u),
                                    v.nodeType === 3 &&
                                        (m += v.nodeValue.length),
                                    (h = v.firstChild) !== null;

                            )
                                (g = v), (v = h);
                            for (;;) {
                                if (v === o) break t;
                                if (
                                    (g === s && ++b === i && (p = m),
                                    g === l && ++y === u && (d = m),
                                    (h = v.nextSibling) !== null)
                                )
                                    break;
                                (v = g), (g = v.parentNode);
                            }
                            v = h;
                        }
                        s = p === -1 || d === -1 ? null : { start: p, end: d };
                    } else s = null;
                s = s || { start: 0, end: 0 };
            } else s = null;
            (el = { focusedElem: o, selectionRange: s }),
                (qr = !1),
                (sr = null),
                (_i = !1),
                (N = a);
            do
                try {
                    my();
                } catch (P) {
                    if (N === null) throw Error(C(330));
                    Lt(N, P), (N = N.nextEffect);
                }
            while (N !== null);
            (sr = null), (N = a);
            do
                try {
                    for (o = e; N !== null; ) {
                        var f = N.flags;
                        if ((f & 16 && Sa(N.stateNode, ""), f & 128)) {
                            var x = N.alternate;
                            if (x !== null) {
                                var w = x.ref;
                                w !== null &&
                                    (typeof w == "function"
                                        ? w(null)
                                        : (w.current = null));
                            }
                        }
                        switch (f & 1038) {
                            case 2:
                                ip(N), (N.flags &= -3);
                                break;
                            case 6:
                                ip(N), (N.flags &= -3), Dl(N.alternate, N);
                                break;
                            case 1024:
                                N.flags &= -1025;
                                break;
                            case 1028:
                                (N.flags &= -1025), Dl(N.alternate, N);
                                break;
                            case 4:
                                Dl(N.alternate, N);
                                break;
                            case 8:
                                (s = N), op(o, s);
                                var E = s.alternate;
                                ap(s), E !== null && ap(E);
                        }
                        N = N.nextEffect;
                    }
                } catch (P) {
                    if (N === null) throw Error(C(330));
                    Lt(N, P), (N = N.nextEffect);
                }
            while (N !== null);
            if (
                ((w = el),
                (x = Yd()),
                (f = w.focusedElem),
                (o = w.selectionRange),
                x !== f &&
                    f &&
                    f.ownerDocument &&
                    Ld(f.ownerDocument.documentElement, f))
            ) {
                for (
                    o !== null &&
                        Ks(f) &&
                        ((x = o.start),
                        (w = o.end),
                        w === void 0 && (w = x),
                        ("selectionStart" in f)
                            ? ((f.selectionStart = x),
                              (f.selectionEnd = Math.min(w, f.value.length)))
                            : ((w =
                                  ((x = f.ownerDocument || document) &&
                                      x.defaultView) ||
                                  window),
                              w.getSelection &&
                                  ((w = w.getSelection()),
                                  (s = f.textContent.length),
                                  (E = Math.min(o.start, s)),
                                  (o =
                                      o.end === void 0
                                          ? E
                                          : Math.min(o.end, s)),
                                  !w.extend &&
                                      E > o &&
                                      ((s = o), (o = E), (E = s)),
                                  (s = Rd(f, E)),
                                  (i = Rd(f, o)),
                                  s &&
                                      i &&
                                      (w.rangeCount !== 1 ||
                                          w.anchorNode !== s.node ||
                                          w.anchorOffset !== s.offset ||
                                          w.focusNode !== i.node ||
                                          w.focusOffset !== i.offset) &&
                                      ((x = x.createRange()),
                                      x.setStart(s.node, s.offset),
                                      w.removeAllRanges(),
                                      E > o
                                          ? (w.addRange(x),
                                            w.extend(i.node, i.offset))
                                          : (x.setEnd(i.node, i.offset),
                                            w.addRange(x)))))),
                        x = [],
                        w = f;
                    (w = w.parentNode);

                )
                    w.nodeType === 1 &&
                        x.push({
                            element: w,
                            left: w.scrollLeft,
                            top: w.scrollTop,
                        });
                for (
                    typeof f.focus == "function" && f.focus(), f = 0;
                    f < x.length;
                    f++
                )
                    (w = x[f]),
                        (w.element.scrollLeft = w.left),
                        (w.element.scrollTop = w.top);
            }
            (qr = !!Zs), (el = Zs = null), (e.current = n), (N = a);
            do
                try {
                    for (f = e; N !== null; ) {
                        var S = N.flags;
                        if ((S & 36 && iy(f, N.alternate, N), S & 128)) {
                            x = void 0;
                            var $ = N.ref;
                            if ($ !== null) {
                                var T = N.stateNode;
                                switch (N.tag) {
                                    case 5:
                                        x = T;
                                        break;
                                    default:
                                        x = T;
                                }
                                typeof $ == "function" ? $(x) : ($.current = x);
                            }
                        }
                        N = N.nextEffect;
                    }
                } catch (P) {
                    if (N === null) throw Error(C(330));
                    Lt(N, P), (N = N.nextEffect);
                }
            while (N !== null);
            (N = null), qb(), (I = r);
        } else e.current = n;
        if (At) (At = !1), (rr = e), (ir = t);
        else
            for (N = a; N !== null; )
                (t = N.nextEffect),
                    (N.nextEffect = null),
                    N.flags & 8 &&
                        ((S = N), (S.sibling = null), (S.stateNode = null)),
                    (N = t);
        if (
            ((a = e.pendingLanes),
            a === 0 && (rt = null),
            a === 1 ? (e === Vl ? or++ : ((or = 0), (Vl = e))) : (or = 0),
            (n = n.stateNode),
            en && typeof en.onCommitFiberRoot == "function")
        )
            try {
                en.onCommitFiberRoot(
                    il,
                    n,
                    void 0,
                    (n.current.flags & 64) === 64
                );
            } catch {}
        if ((Ye(e, be()), $i)) throw (($i = !1), (e = Fl), (Fl = null), e);
        return I & 8 || et(), null;
    }
    function my() {
        for (; N !== null; ) {
            var e = N.alternate;
            _i ||
                sr === null ||
                (N.flags & 8
                    ? id(N, sr) && (_i = !0)
                    : N.tag === 13 && oy(e, N) && id(N, sr) && (_i = !0));
            var t = N.flags;
            t & 256 && ry(e, N),
                !(t & 512) ||
                    At ||
                    ((At = !0),
                    Ha(97, function () {
                        return Rt(), null;
                    })),
                (N = N.nextEffect);
        }
    }
    function Rt() {
        if (ir !== 90) {
            var e = 97 < ir ? 97 : ir;
            return (ir = 90), tn(e, hy);
        }
        return !1;
    }
    function py(e, t) {
        Ol.push(t, e),
            At ||
                ((At = !0),
                Ha(97, function () {
                    return Rt(), null;
                }));
    }
    function fp(e, t) {
        Hl.push(t, e),
            At ||
                ((At = !0),
                Ha(97, function () {
                    return Rt(), null;
                }));
    }
    function hy() {
        if (rr === null) return !1;
        var e = rr;
        if (((rr = null), I & 48)) throw Error(C(331));
        var t = I;
        I |= 32;
        var n = Hl;
        Hl = [];
        for (var a = 0; a < n.length; a += 2) {
            var r = n[a],
                i = n[a + 1],
                o = r.destroy;
            if (((r.destroy = void 0), typeof o == "function"))
                try {
                    o();
                } catch (l) {
                    if (i === null) throw Error(C(330));
                    Lt(i, l);
                }
        }
        for (n = Ol, Ol = [], a = 0; a < n.length; a += 2) {
            (r = n[a]), (i = n[a + 1]);
            try {
                var s = r.create;
                r.destroy = s();
            } catch (l) {
                if (i === null) throw Error(C(330));
                Lt(i, l);
            }
        }
        for (s = e.current.firstEffect; s !== null; )
            (e = s.nextEffect),
                (s.nextEffect = null),
                s.flags & 8 && ((s.sibling = null), (s.stateNode = null)),
                (s = e);
        return (I = t), et(), !0;
    }
    function gp(e, t, n) {
        (t = Tl(n, t)),
            (t = Xm(e, t, 1)),
            It(e, t),
            (t = Ne()),
            (e = Ni(e, 1)),
            e !== null && (Wr(e, 1, t), Ye(e, t));
    }
    function Lt(e, t) {
        if (e.tag === 3) gp(e, e, t);
        else
            for (var n = e.return; n !== null; ) {
                if (n.tag === 3) {
                    gp(n, e, t);
                    break;
                } else if (n.tag === 1) {
                    var a = n.stateNode;
                    if (
                        typeof n.type.getDerivedStateFromError == "function" ||
                        (typeof a.componentDidCatch == "function" &&
                            (rt === null || !rt.has(a)))
                    ) {
                        e = Tl(t, e);
                        var r = Zm(n, e, 1);
                        if ((It(n, r), (r = Ne()), (n = Ni(n, 1)), n !== null))
                            Wr(n, 1, r), Ye(n, r);
                        else if (
                            typeof a.componentDidCatch == "function" &&
                            (rt === null || !rt.has(a))
                        )
                            try {
                                a.componentDidCatch(t, e);
                            } catch {}
                        break;
                    }
                }
                n = n.return;
            }
    }
    function fy(e, t, n) {
        var a = e.pingCache;
        a !== null && a.delete(t),
            (t = Ne()),
            (e.pingedLanes |= e.suspendedLanes & n),
            we === e &&
                (ke & n) === n &&
                (de === 4 ||
                (de === 3 && (ke & 62914560) === ke && 500 > be() - Ul)
                    ? Wn(e, 0)
                    : (Ll |= n)),
            Ye(e, t);
    }
    function gy(e, t) {
        var n = e.stateNode;
        n !== null && n.delete(t),
            (t = 0),
            t === 0 &&
                ((t = e.mode),
                t & 2
                    ? t & 4
                        ? (gt === 0 && (gt = Fn),
                          (t = jn(62914560 & ~gt)),
                          t === 0 && (t = 4194304))
                        : (t = Rn() === 99 ? 1 : 2)
                    : (t = 1)),
            (n = Ne()),
            (e = Ni(e, t)),
            e !== null && (Wr(e, t, n), Ye(e, n));
    }
    var bp;
    bp = function (e, t, n) {
        var a = t.lanes;
        if (e !== null)
            if (e.memoizedProps !== t.pendingProps || Ee.current) Ge = !0;
            else if (n & a) Ge = !!(e.flags & 16384);
            else {
                switch (((Ge = !1), t.tag)) {
                    case 3:
                        Fm(t), yl();
                        break;
                    case 5:
                        Sm(t);
                        break;
                    case 1:
                        Ce(t.type) && ii(t);
                        break;
                    case 4:
                        fl(t, t.stateNode.containerInfo);
                        break;
                    case 10:
                        a = t.memoizedProps.value;
                        var r = t.type._context;
                        q(li, r._currentValue), (r._currentValue = a);
                        break;
                    case 13:
                        if (t.memoizedState !== null)
                            return n & t.child.childLanes
                                ? Om(e, t, n)
                                : (q(G, G.current & 1),
                                  (t = ht(e, t, n)),
                                  t !== null ? t.sibling : null);
                        q(G, G.current & 1);
                        break;
                    case 19:
                        if (((a = (n & t.childLanes) !== 0), e.flags & 64)) {
                            if (a) return Gm(e, t, n);
                            t.flags |= 64;
                        }
                        if (
                            ((r = t.memoizedState),
                            r !== null &&
                                ((r.rendering = null),
                                (r.tail = null),
                                (r.lastEffect = null)),
                            q(G, G.current),
                            a)
                        )
                            break;
                        return null;
                    case 23:
                    case 24:
                        return (t.lanes = 0), $l(e, t, n);
                }
                return ht(e, t, n);
            }
        else Ge = !1;
        switch (((t.lanes = 0), t.tag)) {
            case 2:
                if (
                    ((a = t.type),
                    e !== null &&
                        ((e.alternate = null),
                        (t.alternate = null),
                        (t.flags |= 2)),
                    (e = t.pendingProps),
                    (r = Mn(t, ge.current)),
                    Yn(t, n),
                    (r = wl(null, t, a, e, r, n)),
                    (t.flags |= 1),
                    typeof r == "object" &&
                        r !== null &&
                        typeof r.render == "function" &&
                        r.$$typeof === void 0)
                ) {
                    if (
                        ((t.tag = 1),
                        (t.memoizedState = null),
                        (t.updateQueue = null),
                        Ce(a))
                    ) {
                        var i = !0;
                        ii(t);
                    } else i = !1;
                    (t.memoizedState =
                        r.state !== null && r.state !== void 0
                            ? r.state
                            : null),
                        pl(t);
                    var o = a.getDerivedStateFromProps;
                    typeof o == "function" && di(t, a, o, e),
                        (r.updater = mi),
                        (t.stateNode = r),
                        (r._reactInternals = t),
                        hl(t, a, e, n),
                        (t = Pl(null, t, a, !0, i, n));
                } else (t.tag = 0), je(null, t, r, n), (t = t.child);
                return t;
            case 16:
                r = t.elementType;
                e: {
                    switch (
                        (e !== null &&
                            ((e.alternate = null),
                            (t.alternate = null),
                            (t.flags |= 2)),
                        (e = t.pendingProps),
                        (i = r._init),
                        (r = i(r._payload)),
                        (t.type = r),
                        (i = t.tag = yy(r)),
                        (e = qe(r, e)),
                        i)
                    ) {
                        case 0:
                            t = jl(null, t, r, e, n);
                            break e;
                        case 1:
                            t = Bm(null, t, r, e, n);
                            break e;
                        case 11:
                            t = Rm(null, t, r, e, n);
                            break e;
                        case 14:
                            t = Lm(null, t, r, qe(r.type, e), a, n);
                            break e;
                    }
                    throw Error(C(306, r, ""));
                }
                return t;
            case 0:
                return (
                    (a = t.type),
                    (r = t.pendingProps),
                    (r = t.elementType === a ? r : qe(a, r)),
                    jl(e, t, a, r, n)
                );
            case 1:
                return (
                    (a = t.type),
                    (r = t.pendingProps),
                    (r = t.elementType === a ? r : qe(a, r)),
                    Bm(e, t, a, r, n)
                );
            case 3:
                if ((Fm(t), (a = t.updateQueue), e === null || a === null))
                    throw Error(C(282));
                if (
                    ((a = t.pendingProps),
                    (r = t.memoizedState),
                    (r = r !== null ? r.element : null),
                    hm(e, t),
                    Va(t, a, null, n),
                    (a = t.memoizedState.element),
                    a === r)
                )
                    yl(), (t = ht(e, t, n));
                else {
                    if (
                        ((r = t.stateNode),
                        (i = r.hydrate) &&
                            ((zt = In(t.stateNode.containerInfo.firstChild)),
                            (pt = t),
                            (i = nt = !0)),
                        i)
                    ) {
                        if (
                            ((e = r.mutableSourceEagerHydrationData), e != null)
                        )
                            for (r = 0; r < e.length; r += 2)
                                (i = e[r]),
                                    (i._workInProgressVersionPrimary =
                                        e[r + 1]),
                                    Bn.push(i);
                        for (n = xm(t, null, a, n), t.child = n; n; )
                            (n.flags = (n.flags & -3) | 1024), (n = n.sibling);
                    } else je(e, t, a, n), yl();
                    t = t.child;
                }
                return t;
            case 5:
                return (
                    Sm(t),
                    e === null && bl(t),
                    (a = t.type),
                    (r = t.pendingProps),
                    (i = e !== null ? e.memoizedProps : null),
                    (o = r.children),
                    tl(a, r)
                        ? (o = null)
                        : i !== null && tl(a, i) && (t.flags |= 16),
                    Um(e, t),
                    je(e, t, o, n),
                    t.child
                );
            case 6:
                return e === null && bl(t), null;
            case 13:
                return Om(e, t, n);
            case 4:
                return (
                    fl(t, t.stateNode.containerInfo),
                    (a = t.pendingProps),
                    e === null ? (t.child = fi(t, null, a, n)) : je(e, t, a, n),
                    t.child
                );
            case 11:
                return (
                    (a = t.type),
                    (r = t.pendingProps),
                    (r = t.elementType === a ? r : qe(a, r)),
                    Rm(e, t, a, r, n)
                );
            case 7:
                return je(e, t, t.pendingProps, n), t.child;
            case 8:
                return je(e, t, t.pendingProps.children, n), t.child;
            case 12:
                return je(e, t, t.pendingProps.children, n), t.child;
            case 10:
                e: {
                    (a = t.type._context),
                        (r = t.pendingProps),
                        (o = t.memoizedProps),
                        (i = r.value);
                    var s = t.type._context;
                    if (
                        (q(li, s._currentValue),
                        (s._currentValue = i),
                        o !== null)
                    )
                        if (
                            ((s = o.value),
                            (i = Me(s, i)
                                ? 0
                                : (typeof a._calculateChangedBits == "function"
                                      ? a._calculateChangedBits(s, i)
                                      : 1073741823) | 0),
                            i === 0)
                        ) {
                            if (o.children === r.children && !Ee.current) {
                                t = ht(e, t, n);
                                break e;
                            }
                        } else
                            for (
                                s = t.child, s !== null && (s.return = t);
                                s !== null;

                            ) {
                                var l = s.dependencies;
                                if (l !== null) {
                                    o = s.child;
                                    for (var u = l.firstContext; u !== null; ) {
                                        if (
                                            u.context === a &&
                                            u.observedBits & i
                                        ) {
                                            s.tag === 1 &&
                                                ((u = Tt(-1, n & -n)),
                                                (u.tag = 2),
                                                It(s, u)),
                                                (s.lanes |= n),
                                                (u = s.alternate),
                                                u !== null && (u.lanes |= n),
                                                pm(s.return, n),
                                                (l.lanes |= n);
                                            break;
                                        }
                                        u = u.next;
                                    }
                                } else
                                    o =
                                        s.tag === 10 && s.type === t.type
                                            ? null
                                            : s.child;
                                if (o !== null) o.return = s;
                                else
                                    for (o = s; o !== null; ) {
                                        if (o === t) {
                                            o = null;
                                            break;
                                        }
                                        if (((s = o.sibling), s !== null)) {
                                            (s.return = o.return), (o = s);
                                            break;
                                        }
                                        o = o.return;
                                    }
                                s = o;
                            }
                    je(e, t, r.children, n), (t = t.child);
                }
                return t;
            case 9:
                return (
                    (r = t.type),
                    (i = t.pendingProps),
                    (a = i.children),
                    Yn(t, n),
                    (r = Re(r, i.unstable_observedBits)),
                    (a = a(r)),
                    (t.flags |= 1),
                    je(e, t, a, n),
                    t.child
                );
            case 14:
                return (
                    (r = t.type),
                    (i = qe(r, t.pendingProps)),
                    (i = qe(r.type, i)),
                    Lm(e, t, r, i, a, n)
                );
            case 15:
                return Ym(e, t, t.type, t.pendingProps, a, n);
            case 17:
                return (
                    (a = t.type),
                    (r = t.pendingProps),
                    (r = t.elementType === a ? r : qe(a, r)),
                    e !== null &&
                        ((e.alternate = null),
                        (t.alternate = null),
                        (t.flags |= 2)),
                    (t.tag = 1),
                    Ce(a) ? ((e = !0), ii(t)) : (e = !1),
                    Yn(t, n),
                    km(t, a, r),
                    hl(t, a, r, n),
                    Pl(null, t, a, !0, e, n)
                );
            case 19:
                return Gm(e, t, n);
            case 23:
                return $l(e, t, n);
            case 24:
                return $l(e, t, n);
        }
        throw Error(C(156, t.tag));
    };
    function by(e, t, n, a) {
        (this.tag = e),
            (this.key = n),
            (this.sibling =
                this.child =
                this.return =
                this.stateNode =
                this.type =
                this.elementType =
                    null),
            (this.index = 0),
            (this.ref = null),
            (this.pendingProps = t),
            (this.dependencies =
                this.memoizedState =
                this.updateQueue =
                this.memoizedProps =
                    null),
            (this.mode = a),
            (this.flags = 0),
            (this.lastEffect = this.firstEffect = this.nextEffect = null),
            (this.childLanes = this.lanes = 0),
            (this.alternate = null);
    }
    function Ue(e, t, n, a) {
        return new by(e, t, n, a);
    }
    function Gl(e) {
        return (e = e.prototype), !(!e || !e.isReactComponent);
    }
    function yy(e) {
        if (typeof e == "function") return Gl(e) ? 1 : 0;
        if (e != null) {
            if (((e = e.$$typeof), e === zr)) return 11;
            if (e === Dr) return 14;
        }
        return 2;
    }
    function Yt(e, t) {
        var n = e.alternate;
        return (
            n === null
                ? ((n = Ue(e.tag, t, e.key, e.mode)),
                  (n.elementType = e.elementType),
                  (n.type = e.type),
                  (n.stateNode = e.stateNode),
                  (n.alternate = e),
                  (e.alternate = n))
                : ((n.pendingProps = t),
                  (n.type = e.type),
                  (n.flags = 0),
                  (n.nextEffect = null),
                  (n.firstEffect = null),
                  (n.lastEffect = null)),
            (n.childLanes = e.childLanes),
            (n.lanes = e.lanes),
            (n.child = e.child),
            (n.memoizedProps = e.memoizedProps),
            (n.memoizedState = e.memoizedState),
            (n.updateQueue = e.updateQueue),
            (t = e.dependencies),
            (n.dependencies =
                t === null
                    ? null
                    : { lanes: t.lanes, firstContext: t.firstContext }),
            (n.sibling = e.sibling),
            (n.index = e.index),
            (n.ref = e.ref),
            n
        );
    }
    function Ii(e, t, n, a, r, i) {
        var o = 2;
        if (((a = e), typeof e == "function")) Gl(e) && (o = 1);
        else if (typeof e == "string") o = 5;
        else
            e: switch (e) {
                case vt:
                    return qn(n.children, r, i, t);
                case Ru:
                    (o = 8), (r |= 16);
                    break;
                case rs:
                    (o = 8), (r |= 1);
                    break;
                case ka:
                    return (
                        (e = Ue(12, n, t, r | 8)),
                        (e.elementType = ka),
                        (e.type = ka),
                        (e.lanes = i),
                        e
                    );
                case va:
                    return (
                        (e = Ue(13, n, t, r)),
                        (e.type = va),
                        (e.elementType = va),
                        (e.lanes = i),
                        e
                    );
                case Ar:
                    return (
                        (e = Ue(19, n, t, r)),
                        (e.elementType = Ar),
                        (e.lanes = i),
                        e
                    );
                case us:
                    return Kl(n, r, i, t);
                case ds:
                    return (
                        (e = Ue(24, n, t, r)),
                        (e.elementType = ds),
                        (e.lanes = i),
                        e
                    );
                default:
                    if (typeof e == "object" && e !== null)
                        switch (e.$$typeof) {
                            case is:
                                o = 10;
                                break e;
                            case os:
                                o = 9;
                                break e;
                            case zr:
                                o = 11;
                                break e;
                            case Dr:
                                o = 14;
                                break e;
                            case ss:
                                (o = 16), (a = null);
                                break e;
                            case ls:
                                o = 22;
                                break e;
                        }
                    throw Error(C(130, e == null ? e : typeof e, ""));
            }
        return (
            (t = Ue(o, n, t, r)),
            (t.elementType = e),
            (t.type = a),
            (t.lanes = i),
            t
        );
    }
    function qn(e, t, n, a) {
        return (e = Ue(7, e, a, t)), (e.lanes = n), e;
    }
    function Kl(e, t, n, a) {
        return (e = Ue(23, e, a, t)), (e.elementType = us), (e.lanes = n), e;
    }
    function Jl(e, t, n) {
        return (e = Ue(6, e, null, t)), (e.lanes = n), e;
    }
    function Ql(e, t, n) {
        return (
            (t = Ue(4, e.children !== null ? e.children : [], e.key, t)),
            (t.lanes = n),
            (t.stateNode = {
                containerInfo: e.containerInfo,
                pendingChildren: null,
                implementation: e.implementation,
            }),
            t
        );
    }
    function ky(e, t, n) {
        (this.tag = t),
            (this.containerInfo = e),
            (this.finishedWork =
                this.pingCache =
                this.current =
                this.pendingChildren =
                    null),
            (this.timeoutHandle = -1),
            (this.pendingContext = this.context = null),
            (this.hydrate = n),
            (this.callbackNode = null),
            (this.callbackPriority = 0),
            (this.eventTimes = Rs(0)),
            (this.expirationTimes = Rs(-1)),
            (this.entangledLanes =
                this.finishedLanes =
                this.mutableReadLanes =
                this.expiredLanes =
                this.pingedLanes =
                this.suspendedLanes =
                this.pendingLanes =
                    0),
            (this.entanglements = Rs(0)),
            (this.mutableSourceEagerHydrationData = null);
    }
    function vy(e, t, n) {
        var a =
            3 < arguments.length && arguments[3] !== void 0
                ? arguments[3]
                : null;
        return {
            $$typeof: Kt,
            key: a == null ? null : "" + a,
            children: e,
            containerInfo: t,
            implementation: n,
        };
    }
    function zi(e, t, n, a) {
        var r = t.current,
            i = Ne(),
            o = Dt(r);
        e: if (n) {
            n = n._reactInternals;
            t: {
                if (Qt(n) !== n || n.tag !== 1) throw Error(C(170));
                var s = n;
                do {
                    switch (s.tag) {
                        case 3:
                            s = s.stateNode.context;
                            break t;
                        case 1:
                            if (Ce(s.type)) {
                                s =
                                    s.stateNode
                                        .__reactInternalMemoizedMergedChildContext;
                                break t;
                            }
                    }
                    s = s.return;
                } while (s !== null);
                throw Error(C(171));
            }
            if (n.tag === 1) {
                var l = n.type;
                if (Ce(l)) {
                    n = am(n, l, s);
                    break e;
                }
            }
            n = s;
        } else n = _t;
        return (
            t.context === null ? (t.context = n) : (t.pendingContext = n),
            (t = Tt(i, o)),
            (t.payload = { element: e }),
            (a = a === void 0 ? null : a),
            a !== null && (t.callback = a),
            It(r, t),
            Mt(r, o, i),
            o
        );
    }
    function Xl(e) {
        if (((e = e.current), !e.child)) return null;
        switch (e.child.tag) {
            case 5:
                return e.child.stateNode;
            default:
                return e.child.stateNode;
        }
    }
    function yp(e, t) {
        if (((e = e.memoizedState), e !== null && e.dehydrated !== null)) {
            var n = e.retryLane;
            e.retryLane = n !== 0 && n < t ? n : t;
        }
    }
    function Zl(e, t) {
        yp(e, t), (e = e.alternate) && yp(e, t);
    }
    function wy() {
        return null;
    }
    function ec(e, t, n) {
        var a =
            (n != null &&
                n.hydrationOptions != null &&
                n.hydrationOptions.mutableSources) ||
            null;
        if (
            ((n = new ky(e, t, n != null && n.hydrate === !0)),
            (t = Ue(3, null, null, t === 2 ? 7 : t === 1 ? 3 : 0)),
            (n.current = t),
            (t.stateNode = n),
            pl(t),
            (e[zn] = n.current),
            Wd(e.nodeType === 8 ? e.parentNode : e),
            a)
        )
            for (e = 0; e < a.length; e++) {
                t = a[e];
                var r = t._getVersion;
                (r = r(t._source)),
                    n.mutableSourceEagerHydrationData == null
                        ? (n.mutableSourceEagerHydrationData = [t, r])
                        : n.mutableSourceEagerHydrationData.push(t, r);
            }
        this._internalRoot = n;
    }
    (ec.prototype.render = function (e) {
        zi(e, this._internalRoot, null, null);
    }),
        (ec.prototype.unmount = function () {
            var e = this._internalRoot,
                t = e.containerInfo;
            zi(null, e, null, function () {
                t[zn] = null;
            });
        });
    function cr(e) {
        return !(
            !e ||
            (e.nodeType !== 1 &&
                e.nodeType !== 9 &&
                e.nodeType !== 11 &&
                (e.nodeType !== 8 ||
                    e.nodeValue !== " react-mount-point-unstable "))
        );
    }
    function xy(e, t) {
        if (
            (t ||
                ((t = e
                    ? e.nodeType === 9
                        ? e.documentElement
                        : e.firstChild
                    : null),
                (t = !(
                    !t ||
                    t.nodeType !== 1 ||
                    !t.hasAttribute("data-reactroot")
                ))),
            !t)
        )
            for (var n; (n = e.lastChild); ) e.removeChild(n);
        return new ec(e, 0, t ? { hydrate: !0 } : void 0);
    }
    function Ai(e, t, n, a, r) {
        var i = n._reactRootContainer;
        if (i) {
            var o = i._internalRoot;
            if (typeof r == "function") {
                var s = r;
                r = function () {
                    var u = Xl(o);
                    s.call(u);
                };
            }
            zi(t, o, e, r);
        } else {
            if (
                ((i = n._reactRootContainer = xy(n, a)),
                (o = i._internalRoot),
                typeof r == "function")
            ) {
                var l = r;
                r = function () {
                    var u = Xl(o);
                    l.call(u);
                };
            }
            up(function () {
                zi(t, o, e, r);
            });
        }
        return Xl(o);
    }
    (od = function (e) {
        if (e.tag === 13) {
            var t = Ne();
            Mt(e, 4, t), Zl(e, 4);
        }
    }),
        (Ts = function (e) {
            if (e.tag === 13) {
                var t = Ne();
                Mt(e, 67108864, t), Zl(e, 67108864);
            }
        }),
        (sd = function (e) {
            if (e.tag === 13) {
                var t = Ne(),
                    n = Dt(e);
                Mt(e, n, t), Zl(e, n);
            }
        }),
        (ld = function (e, t) {
            return t();
        }),
        (Es = function (e, t, n) {
            switch (t) {
                case "input":
                    if (
                        (fs(e, n),
                        (t = n.name),
                        n.type === "radio" && t != null)
                    ) {
                        for (n = e; n.parentNode; ) n = n.parentNode;
                        for (
                            n = n.querySelectorAll(
                                "input[name=" +
                                    JSON.stringify("" + t) +
                                    '][type="radio"]'
                            ),
                                t = 0;
                            t < n.length;
                            t++
                        ) {
                            var a = n[t];
                            if (a !== e && a.form === e.form) {
                                var r = ai(a);
                                if (!r) throw Error(C(90));
                                Uu(a), fs(a, r);
                            }
                        }
                    }
                    break;
                case "textarea":
                    Vu(e, n);
                    break;
                case "select":
                    (t = n.value), t != null && xn(e, !!n.multiple, t, !1);
            }
        }),
        (Cs = cp),
        (ed = function (e, t, n, a, r) {
            var i = I;
            I |= 4;
            try {
                return tn(98, e.bind(null, t, n, a, r));
            } finally {
                (I = i), I === 0 && (Hn(), et());
            }
        }),
        ($s = function () {
            !(I & 49) && (ly(), Rt());
        }),
        (td = function (e, t) {
            var n = I;
            I |= 2;
            try {
                return e(t);
            } finally {
                (I = n), I === 0 && (Hn(), et());
            }
        });
    function kp(e, t) {
        var n =
            2 < arguments.length && arguments[2] !== void 0
                ? arguments[2]
                : null;
        if (!cr(t)) throw Error(C(200));
        return vy(e, t, null, n);
    }
    var Sy = { Events: [Oa, An, ai, Xu, Zu, Rt, { current: !1 }] },
        ur = {
            findFiberByHostInstance: Xt,
            bundleType: 0,
            version: "17.0.2",
            rendererPackageName: "react-dom",
        },
        Ey = {
            bundleType: ur.bundleType,
            version: ur.version,
            rendererPackageName: ur.rendererPackageName,
            rendererConfig: ur.rendererConfig,
            overrideHookState: null,
            overrideHookStateDeletePath: null,
            overrideHookStateRenamePath: null,
            overrideProps: null,
            overridePropsDeletePath: null,
            overridePropsRenamePath: null,
            setSuspenseHandler: null,
            scheduleUpdate: null,
            currentDispatcherRef: Gt.ReactCurrentDispatcher,
            findHostInstanceByFiber: function (e) {
                return (e = rd(e)), e === null ? null : e.stateNode;
            },
            findFiberByHostInstance: ur.findFiberByHostInstance || wy,
            findHostInstancesForRefresh: null,
            scheduleRefresh: null,
            scheduleRoot: null,
            setRefreshHandler: null,
            getCurrentFiber: null,
        };
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
        var Di = __REACT_DEVTOOLS_GLOBAL_HOOK__;
        if (!Di.isDisabled && Di.supportsFiber)
            try {
                (il = Di.inject(Ey)), (en = Di);
            } catch {}
    }
    (De.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Sy),
        (De.createPortal = kp),
        (De.findDOMNode = function (e) {
            if (e == null) return null;
            if (e.nodeType === 1) return e;
            var t = e._reactInternals;
            if (t === void 0)
                throw typeof e.render == "function"
                    ? Error(C(188))
                    : Error(C(268, Object.keys(e)));
            return (e = rd(t)), (e = e === null ? null : e.stateNode), e;
        }),
        (De.flushSync = function (e, t) {
            var n = I;
            if (n & 48) return e(t);
            I |= 1;
            try {
                if (e) return tn(99, e.bind(null, t));
            } finally {
                (I = n), et();
            }
        }),
        (De.hydrate = function (e, t, n) {
            if (!cr(t)) throw Error(C(200));
            return Ai(null, e, t, !0, n);
        }),
        (De.render = function (e, t, n) {
            if (!cr(t)) throw Error(C(200));
            return Ai(null, e, t, !1, n);
        }),
        (De.unmountComponentAtNode = function (e) {
            if (!cr(e)) throw Error(C(40));
            return e._reactRootContainer
                ? (up(function () {
                      Ai(null, null, e, !1, function () {
                          (e._reactRootContainer = null), (e[zn] = null);
                      });
                  }),
                  !0)
                : !1;
        }),
        (De.unstable_batchedUpdates = cp),
        (De.unstable_createPortal = function (e, t) {
            return kp(
                e,
                t,
                2 < arguments.length && arguments[2] !== void 0
                    ? arguments[2]
                    : null
            );
        }),
        (De.unstable_renderSubtreeIntoContainer = function (e, t, n, a) {
            if (!cr(n)) throw Error(C(200));
            if (e == null || e._reactInternals === void 0) throw Error(C(38));
            return Ai(e, t, n, !1, a);
        }),
        (De.version = "17.0.2");
    function vp() {
        if (
            !(
                typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
                typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
            )
        )
            try {
                __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(vp);
            } catch (e) {
                console.error(e);
            }
    }
    vp(), (Nu.exports = De);
    var tc = Nu.exports;
    const Cy = Pe(tc),
        jE = "",
        wp = Object.prototype.toString;
    function nc(e) {
        switch (wp.call(e)) {
            case "[object Error]":
            case "[object Exception]":
            case "[object DOMException]":
                return !0;
            default:
                return cn(e, Error);
        }
    }
    function Gn(e, t) {
        return wp.call(e) === `[object ${t}]`;
    }
    function ac(e) {
        return Gn(e, "ErrorEvent");
    }
    function xp(e) {
        return Gn(e, "DOMError");
    }
    function $y(e) {
        return Gn(e, "DOMException");
    }
    function ln(e) {
        return Gn(e, "String");
    }
    function Sp(e) {
        return e === null || (typeof e != "object" && typeof e != "function");
    }
    function Kn(e) {
        return Gn(e, "Object");
    }
    function Mi(e) {
        return typeof Event < "u" && cn(e, Event);
    }
    function jy(e) {
        return typeof Element < "u" && cn(e, Element);
    }
    function Py(e) {
        return Gn(e, "RegExp");
    }
    function rc(e) {
        return !!(e && e.then && typeof e.then == "function");
    }
    function _y(e) {
        return (
            Kn(e) &&
            "nativeEvent" in e &&
            "preventDefault" in e &&
            "stopPropagation" in e
        );
    }
    function Ny(e) {
        return typeof e == "number" && e !== e;
    }
    function cn(e, t) {
        try {
            return e instanceof t;
        } catch {
            return !1;
        }
    }
    function Ep(e) {
        return !!(
            typeof e == "object" &&
            e !== null &&
            (e.__isVue || e._isVue)
        );
    }
    function Jn(e, t = 0) {
        return typeof e != "string" || t === 0 || e.length <= t
            ? e
            : `${e.slice(0, t)}...`;
    }
    function Cp(e, t) {
        if (!Array.isArray(e)) return "";
        const n = [];
        for (let a = 0; a < e.length; a++) {
            const r = e[a];
            try {
                Ep(r) ? n.push("[VueViewModel]") : n.push(String(r));
            } catch {
                n.push("[value cannot be serialized]");
            }
        }
        return n.join(t);
    }
    function Ty(e, t, n = !1) {
        return ln(e)
            ? Py(t)
                ? t.test(e)
                : ln(t)
                ? n
                    ? e === t
                    : e.includes(t)
                : !1
            : !1;
    }
    function Ri(e, t = [], n = !1) {
        return t.some((a) => Ty(e, a, n));
    }
    function Iy(e, t, n = 250, a, r, i, o) {
        if (
            !i.exception ||
            !i.exception.values ||
            !o ||
            !cn(o.originalException, Error)
        )
            return;
        const s =
            i.exception.values.length > 0
                ? i.exception.values[i.exception.values.length - 1]
                : void 0;
        s &&
            (i.exception.values = zy(
                ic(e, t, r, o.originalException, a, i.exception.values, s, 0),
                n
            ));
    }
    function ic(e, t, n, a, r, i, o, s) {
        if (i.length >= n + 1) return i;
        let l = [...i];
        if (cn(a[r], Error)) {
            $p(o, s);
            const u = e(t, a[r]),
                m = l.length;
            jp(u, r, m, s), (l = ic(e, t, n, a[r], r, [u, ...l], u, m));
        }
        return (
            Array.isArray(a.errors) &&
                a.errors.forEach((u, m) => {
                    if (cn(u, Error)) {
                        $p(o, s);
                        const p = e(t, u),
                            d = l.length;
                        jp(p, `errors[${m}]`, d, s),
                            (l = ic(e, t, n, u, r, [p, ...l], p, d));
                    }
                }),
            l
        );
    }
    function $p(e, t) {
        (e.mechanism = e.mechanism || { type: "generic", handled: !0 }),
            (e.mechanism = {
                ...e.mechanism,
                is_exception_group: !0,
                exception_id: t,
            });
    }
    function jp(e, t, n, a) {
        (e.mechanism = e.mechanism || { type: "generic", handled: !0 }),
            (e.mechanism = {
                ...e.mechanism,
                type: "chained",
                source: t,
                exception_id: n,
                parent_id: a,
            });
    }
    function zy(e, t) {
        return e.map((n) => (n.value && (n.value = Jn(n.value, t)), n));
    }
    function Li(e) {
        return e && e.Math == Math ? e : void 0;
    }
    const ie =
        (typeof globalThis == "object" && Li(globalThis)) ||
        (typeof window == "object" && Li(window)) ||
        (typeof self == "object" && Li(self)) ||
        (typeof global == "object" && Li(global)) ||
        (function () {
            return this;
        })() ||
        {};
    function dr() {
        return ie;
    }
    function Pp(e, t, n) {
        const a = n || ie,
            r = (a.__SENTRY__ = a.__SENTRY__ || {});
        return r[e] || (r[e] = t());
    }
    const Ay = dr(),
        Dy = 80;
    function oc(e, t = {}) {
        try {
            let n = e;
            const a = 5,
                r = [];
            let i = 0,
                o = 0;
            const s = " > ",
                l = s.length;
            let u;
            const m = Array.isArray(t) ? t : t.keyAttrs,
                p = (!Array.isArray(t) && t.maxStringLength) || Dy;
            for (
                ;
                n &&
                i++ < a &&
                ((u = My(n, m)),
                !(u === "html" || (i > 1 && o + r.length * l + u.length >= p)));

            )
                r.push(u), (o += u.length), (n = n.parentNode);
            return r.reverse().join(s);
        } catch {
            return "<unknown>";
        }
    }
    function My(e, t) {
        const n = e,
            a = [];
        let r, i, o, s, l;
        if (!n || !n.tagName) return "";
        a.push(n.tagName.toLowerCase());
        const u =
            t && t.length
                ? t
                      .filter((p) => n.getAttribute(p))
                      .map((p) => [p, n.getAttribute(p)])
                : null;
        if (u && u.length)
            u.forEach((p) => {
                a.push(`[${p[0]}="${p[1]}"]`);
            });
        else if ((n.id && a.push(`#${n.id}`), (r = n.className), r && ln(r)))
            for (i = r.split(/\s+/), l = 0; l < i.length; l++)
                a.push(`.${i[l]}`);
        const m = ["aria-label", "type", "name", "title", "alt"];
        for (l = 0; l < m.length; l++)
            (o = m[l]), (s = n.getAttribute(o)), s && a.push(`[${o}="${s}"]`);
        return a.join("");
    }
    function Ry() {
        try {
            return Ay.document.location.href;
        } catch {
            return "";
        }
    }
    const Ly = "Sentry Logger ",
        sc = ["debug", "info", "warn", "error", "log", "assert", "trace"],
        Yi = {};
    function _p(e) {
        if (!("console" in ie)) return e();
        const t = ie.console,
            n = {},
            a = Object.keys(Yi);
        a.forEach((r) => {
            const i = Yi[r];
            (n[r] = t[r]), (t[r] = i);
        });
        try {
            return e();
        } finally {
            a.forEach((r) => {
                t[r] = n[r];
            });
        }
    }
    function Yy() {
        let e = !1;
        const t = {
            enable: () => {
                e = !0;
            },
            disable: () => {
                e = !1;
            },
        };
        return (
            typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__
                ? sc.forEach((n) => {
                      t[n] = (...a) => {
                          e &&
                              _p(() => {
                                  ie.console[n](`${Ly}[${n}]:`, ...a);
                              });
                      };
                  })
                : sc.forEach((n) => {
                      t[n] = () => {};
                  }),
            t
        );
    }
    const z = Yy(),
        Uy = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+)?)?@)([\w.-]+)(?::(\d+))?\/(.+)/;
    function By(e) {
        return e === "http" || e === "https";
    }
    function mr(e, t = !1) {
        const {
            host: n,
            path: a,
            pass: r,
            port: i,
            projectId: o,
            protocol: s,
            publicKey: l,
        } = e;
        return `${s}://${l}${t && r ? `:${r}` : ""}@${n}${i ? `:${i}` : ""}/${a && `${a}/`}${o}`;
    }
    function Fy(e) {
        const t = Uy.exec(e);
        if (!t) {
            console.error(`Invalid Sentry Dsn: ${e}`);
            return;
        }
        const [n, a, r = "", i, o = "", s] = t.slice(1);
        let l = "",
            u = s;
        const m = u.split("/");
        if (
            (m.length > 1 && ((l = m.slice(0, -1).join("/")), (u = m.pop())), u)
        ) {
            const p = u.match(/^\d+/);
            p && (u = p[0]);
        }
        return Np({
            host: i,
            pass: r,
            path: l,
            projectId: u,
            port: o,
            protocol: n,
            publicKey: a,
        });
    }
    function Np(e) {
        return {
            protocol: e.protocol,
            publicKey: e.publicKey || "",
            pass: e.pass || "",
            host: e.host,
            port: e.port || "",
            path: e.path || "",
            projectId: e.projectId,
        };
    }
    function Oy(e) {
        if (!(typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__)) return !0;
        const { port: t, projectId: n, protocol: a } = e;
        return ["protocol", "publicKey", "host", "projectId"].find((o) =>
            e[o] ? !1 : (z.error(`Invalid Sentry Dsn: ${o} missing`), !0)
        )
            ? !1
            : n.match(/^\d+$/)
            ? By(a)
                ? t && isNaN(parseInt(t, 10))
                    ? (z.error(`Invalid Sentry Dsn: Invalid port ${t}`), !1)
                    : !0
                : (z.error(`Invalid Sentry Dsn: Invalid protocol ${a}`), !1)
            : (z.error(`Invalid Sentry Dsn: Invalid projectId ${n}`), !1);
    }
    function Tp(e) {
        const t = typeof e == "string" ? Fy(e) : Np(e);
        if (!(!t || !Oy(t))) return t;
    }
    class Ke extends Error {
        constructor(t, n = "warn") {
            super(t),
                (this.message = t),
                (this.name = new.target.prototype.constructor.name),
                Object.setPrototypeOf(this, new.target.prototype),
                (this.logLevel = n);
        }
    }
    function me(e, t, n) {
        if (!(t in e)) return;
        const a = e[t],
            r = n(a);
        typeof r == "function" && Ip(r, a), (e[t] = r);
    }
    function lc(e, t, n) {
        try {
            Object.defineProperty(e, t, {
                value: n,
                writable: !0,
                configurable: !0,
            });
        } catch {
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                z.log(
                    `Failed to add non-enumerable property "${t}" to object`,
                    e
                );
        }
    }
    function Ip(e, t) {
        try {
            const n = t.prototype || {};
            (e.prototype = t.prototype = n), lc(e, "__sentry_original__", t);
        } catch {}
    }
    function cc(e) {
        return e.__sentry_original__;
    }
    function Hy(e) {
        return Object.keys(e)
            .map((t) => `${encodeURIComponent(t)}=${encodeURIComponent(e[t])}`)
            .join("&");
    }
    function zp(e) {
        if (nc(e))
            return {
                message: e.message,
                name: e.name,
                stack: e.stack,
                ...Dp(e),
            };
        if (Mi(e)) {
            const t = {
                type: e.type,
                target: Ap(e.target),
                currentTarget: Ap(e.currentTarget),
                ...Dp(e),
            };
            return (
                typeof CustomEvent < "u" &&
                    cn(e, CustomEvent) &&
                    (t.detail = e.detail),
                t
            );
        } else return e;
    }
    function Ap(e) {
        try {
            return jy(e) ? oc(e) : Object.prototype.toString.call(e);
        } catch {
            return "<unknown>";
        }
    }
    function Dp(e) {
        if (typeof e == "object" && e !== null) {
            const t = {};
            for (const n in e)
                Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
            return t;
        } else return {};
    }
    function Vy(e, t = 40) {
        const n = Object.keys(zp(e));
        if ((n.sort(), !n.length)) return "[object has no keys]";
        if (n[0].length >= t) return Jn(n[0], t);
        for (let a = n.length; a > 0; a--) {
            const r = n.slice(0, a).join(", ");
            if (!(r.length > t)) return a === n.length ? r : Jn(r, t);
        }
        return "";
    }
    function Ui(e) {
        return uc(e, new Map());
    }
    function uc(e, t) {
        if (Kn(e)) {
            const n = t.get(e);
            if (n !== void 0) return n;
            const a = {};
            t.set(e, a);
            for (const r of Object.keys(e))
                typeof e[r] < "u" && (a[r] = uc(e[r], t));
            return a;
        }
        if (Array.isArray(e)) {
            const n = t.get(e);
            if (n !== void 0) return n;
            const a = [];
            return (
                t.set(e, a),
                e.forEach((r) => {
                    a.push(uc(r, t));
                }),
                a
            );
        }
        return e;
    }
    const Mp = 50,
        Rp = /\(error: (.*)\)/,
        Lp = /captureMessage|captureException/;
    function Yp(...e) {
        const t = e.sort((n, a) => n[0] - a[0]).map((n) => n[1]);
        return (n, a = 0) => {
            const r = [],
                i = n.split(`
`);
            for (let o = a; o < i.length; o++) {
                const s = i[o];
                if (s.length > 1024) continue;
                const l = Rp.test(s) ? s.replace(Rp, "$1") : s;
                if (!l.match(/\S*Error: /)) {
                    for (const u of t) {
                        const m = u(l);
                        if (m) {
                            r.push(m);
                            break;
                        }
                    }
                    if (r.length >= Mp) break;
                }
            }
            return qy(r);
        };
    }
    function Wy(e) {
        return Array.isArray(e) ? Yp(...e) : e;
    }
    function qy(e) {
        if (!e.length) return [];
        const t = Array.from(e);
        return (
            /sentryWrapped/.test(t[t.length - 1].function || "") && t.pop(),
            t.reverse(),
            Lp.test(t[t.length - 1].function || "") &&
                (t.pop(), Lp.test(t[t.length - 1].function || "") && t.pop()),
            t
                .slice(0, Mp)
                .map((n) => ({
                    ...n,
                    filename: n.filename || t[t.length - 1].filename,
                    function: n.function || "?",
                }))
        );
    }
    const dc = "<anonymous>";
    function Ut(e) {
        try {
            return !e || typeof e != "function" ? dc : e.name || dc;
        } catch {
            return dc;
        }
    }
    const mc = dr();
    function Up() {
        if (!("fetch" in mc)) return !1;
        try {
            return (
                new Headers(),
                new Request("http://www.example.com"),
                new Response(),
                !0
            );
        } catch {
            return !1;
        }
    }
    function pc(e) {
        return (
            e &&
            /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(
                e.toString()
            )
        );
    }
    function Gy() {
        if (!Up()) return !1;
        if (pc(mc.fetch)) return !0;
        let e = !1;
        const t = mc.document;
        if (t && typeof t.createElement == "function")
            try {
                const n = t.createElement("iframe");
                (n.hidden = !0),
                    t.head.appendChild(n),
                    n.contentWindow &&
                        n.contentWindow.fetch &&
                        (e = pc(n.contentWindow.fetch)),
                    t.head.removeChild(n);
            } catch (n) {
                (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    z.warn(
                        "Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ",
                        n
                    );
            }
        return e;
    }
    const Bi = dr();
    function Ky() {
        const e = Bi.chrome,
            t = e && e.app && e.app.runtime,
            n =
                "history" in Bi &&
                !!Bi.history.pushState &&
                !!Bi.history.replaceState;
        return !t && n;
    }
    const oe = dr(),
        pr = "__sentry_xhr_v2__",
        hr = {},
        Bp = {};
    function Jy(e) {
        if (!Bp[e])
            switch (((Bp[e] = !0), e)) {
                case "console":
                    Qy();
                    break;
                case "dom":
                    ik();
                    break;
                case "xhr":
                    ek();
                    break;
                case "fetch":
                    Xy();
                    break;
                case "history":
                    tk();
                    break;
                case "error":
                    ok();
                    break;
                case "unhandledrejection":
                    sk();
                    break;
                default:
                    (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                        z.warn("unknown instrumentation type:", e);
                    return;
            }
    }
    function Bt(e, t) {
        (hr[e] = hr[e] || []), hr[e].push(t), Jy(e);
    }
    function Je(e, t) {
        if (!(!e || !hr[e]))
            for (const n of hr[e] || [])
                try {
                    n(t);
                } catch (a) {
                    (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                        z.error(
                            `Error while triggering instrumentation handler.
Type: ${e}
Name: ${Ut(n)}
Error:`,
                            a
                        );
                }
    }
    function Qy() {
        "console" in ie &&
            sc.forEach(function (e) {
                e in ie.console &&
                    me(ie.console, e, function (t) {
                        return (
                            (Yi[e] = t),
                            function (...n) {
                                Je("console", { args: n, level: e });
                                const a = Yi[e];
                                a && a.apply(ie.console, n);
                            }
                        );
                    });
            });
    }
    function Xy() {
        Gy() &&
            me(ie, "fetch", function (e) {
                return function (...t) {
                    const { method: n, url: a } = Zy(t),
                        r = {
                            args: t,
                            fetchData: { method: n, url: a },
                            startTimestamp: Date.now(),
                        };
                    return (
                        Je("fetch", { ...r }),
                        e.apply(ie, t).then(
                            (i) => (
                                Je("fetch", {
                                    ...r,
                                    endTimestamp: Date.now(),
                                    response: i,
                                }),
                                i
                            ),
                            (i) => {
                                throw (
                                    (Je("fetch", {
                                        ...r,
                                        endTimestamp: Date.now(),
                                        error: i,
                                    }),
                                    i)
                                );
                            }
                        )
                    );
                };
            });
    }
    function hc(e, t) {
        return !!e && typeof e == "object" && !!e[t];
    }
    function Fp(e) {
        return typeof e == "string"
            ? e
            : e
            ? hc(e, "url")
                ? e.url
                : e.toString
                ? e.toString()
                : ""
            : "";
    }
    function Zy(e) {
        if (e.length === 0) return { method: "GET", url: "" };
        if (e.length === 2) {
            const [n, a] = e;
            return {
                url: Fp(n),
                method: hc(a, "method")
                    ? String(a.method).toUpperCase()
                    : "GET",
            };
        }
        const t = e[0];
        return {
            url: Fp(t),
            method: hc(t, "method") ? String(t.method).toUpperCase() : "GET",
        };
    }
    function ek() {
        if (!oe.XMLHttpRequest) return;
        const e = XMLHttpRequest.prototype;
        me(e, "open", function (t) {
            return function (...n) {
                const a = n[1],
                    r = (this[pr] = {
                        method: ln(n[0]) ? n[0].toUpperCase() : n[0],
                        url: n[1],
                        request_headers: {},
                    });
                ln(a) &&
                    r.method === "POST" &&
                    a.match(/sentry_key/) &&
                    (this.__sentry_own_request__ = !0);
                const i = () => {
                    const o = this[pr];
                    if (o && this.readyState === 4) {
                        try {
                            o.status_code = this.status;
                        } catch {}
                        Je("xhr", {
                            args: n,
                            endTimestamp: Date.now(),
                            startTimestamp: Date.now(),
                            xhr: this,
                        });
                    }
                };
                return (
                    "onreadystatechange" in this &&
                    typeof this.onreadystatechange == "function"
                        ? me(this, "onreadystatechange", function (o) {
                              return function (...s) {
                                  return i(), o.apply(this, s);
                              };
                          })
                        : this.addEventListener("readystatechange", i),
                    me(this, "setRequestHeader", function (o) {
                        return function (...s) {
                            const [l, u] = s,
                                m = this[pr];
                            return (
                                m && (m.request_headers[l.toLowerCase()] = u),
                                o.apply(this, s)
                            );
                        };
                    }),
                    t.apply(this, n)
                );
            };
        }),
            me(e, "send", function (t) {
                return function (...n) {
                    const a = this[pr];
                    return (
                        a && n[0] !== void 0 && (a.body = n[0]),
                        Je("xhr", {
                            args: n,
                            startTimestamp: Date.now(),
                            xhr: this,
                        }),
                        t.apply(this, n)
                    );
                };
            });
    }
    let Fi;
    function tk() {
        if (!Ky()) return;
        const e = oe.onpopstate;
        oe.onpopstate = function (...n) {
            const a = oe.location.href,
                r = Fi;
            if (((Fi = a), Je("history", { from: r, to: a }), e))
                try {
                    return e.apply(this, n);
                } catch {}
        };
        function t(n) {
            return function (...a) {
                const r = a.length > 2 ? a[2] : void 0;
                if (r) {
                    const i = Fi,
                        o = String(r);
                    (Fi = o), Je("history", { from: i, to: o });
                }
                return n.apply(this, a);
            };
        }
        me(oe.history, "pushState", t), me(oe.history, "replaceState", t);
    }
    const nk = 1e3;
    let Oi, Hi;
    function ak(e, t) {
        if (!e || e.type !== t.type) return !0;
        try {
            if (e.target !== t.target) return !0;
        } catch {}
        return !1;
    }
    function rk(e) {
        if (e.type !== "keypress") return !1;
        try {
            const t = e.target;
            if (!t || !t.tagName) return !0;
            if (
                t.tagName === "INPUT" ||
                t.tagName === "TEXTAREA" ||
                t.isContentEditable
            )
                return !1;
        } catch {}
        return !0;
    }
    function Op(e, t = !1) {
        return (n) => {
            if (!n || Hi === n || rk(n)) return;
            const a = n.type === "keypress" ? "input" : n.type;
            Oi === void 0
                ? (e({ event: n, name: a, global: t }), (Hi = n))
                : ak(Hi, n) && (e({ event: n, name: a, global: t }), (Hi = n)),
                clearTimeout(Oi),
                (Oi = oe.setTimeout(() => {
                    Oi = void 0;
                }, nk));
        };
    }
    function ik() {
        if (!oe.document) return;
        const e = Je.bind(null, "dom"),
            t = Op(e, !0);
        oe.document.addEventListener("click", t, !1),
            oe.document.addEventListener("keypress", t, !1),
            ["EventTarget", "Node"].forEach((n) => {
                const a = oe[n] && oe[n].prototype;
                !a ||
                    !a.hasOwnProperty ||
                    !a.hasOwnProperty("addEventListener") ||
                    (me(a, "addEventListener", function (r) {
                        return function (i, o, s) {
                            if (i === "click" || i == "keypress")
                                try {
                                    const l = this,
                                        u =
                                            (l.__sentry_instrumentation_handlers__ =
                                                l.__sentry_instrumentation_handlers__ ||
                                                {}),
                                        m = (u[i] = u[i] || { refCount: 0 });
                                    if (!m.handler) {
                                        const p = Op(e);
                                        (m.handler = p), r.call(this, i, p, s);
                                    }
                                    m.refCount++;
                                } catch {}
                            return r.call(this, i, o, s);
                        };
                    }),
                    me(a, "removeEventListener", function (r) {
                        return function (i, o, s) {
                            if (i === "click" || i == "keypress")
                                try {
                                    const l = this,
                                        u =
                                            l.__sentry_instrumentation_handlers__ ||
                                            {},
                                        m = u[i];
                                    m &&
                                        (m.refCount--,
                                        m.refCount <= 0 &&
                                            (r.call(this, i, m.handler, s),
                                            (m.handler = void 0),
                                            delete u[i]),
                                        Object.keys(u).length === 0 &&
                                            delete l.__sentry_instrumentation_handlers__);
                                } catch {}
                            return r.call(this, i, o, s);
                        };
                    }));
            });
    }
    let Vi = null;
    function ok() {
        (Vi = oe.onerror),
            (oe.onerror = function (e, t, n, a, r) {
                return (
                    Je("error", {
                        column: a,
                        error: r,
                        line: n,
                        msg: e,
                        url: t,
                    }),
                    Vi && !Vi.__SENTRY_LOADER__ ? Vi.apply(this, arguments) : !1
                );
            }),
            (oe.onerror.__SENTRY_INSTRUMENTED__ = !0);
    }
    let Wi = null;
    function sk() {
        (Wi = oe.onunhandledrejection),
            (oe.onunhandledrejection = function (e) {
                return (
                    Je("unhandledrejection", e),
                    Wi && !Wi.__SENTRY_LOADER__ ? Wi.apply(this, arguments) : !0
                );
            }),
            (oe.onunhandledrejection.__SENTRY_INSTRUMENTED__ = !0);
    }
    function lk() {
        const e = typeof WeakSet == "function",
            t = e ? new WeakSet() : [];
        function n(r) {
            if (e) return t.has(r) ? !0 : (t.add(r), !1);
            for (let i = 0; i < t.length; i++) if (t[i] === r) return !0;
            return t.push(r), !1;
        }
        function a(r) {
            if (e) t.delete(r);
            else
                for (let i = 0; i < t.length; i++)
                    if (t[i] === r) {
                        t.splice(i, 1);
                        break;
                    }
        }
        return [n, a];
    }
    function Ft() {
        const e = ie,
            t = e.crypto || e.msCrypto;
        let n = () => Math.random() * 16;
        try {
            if (t && t.randomUUID) return t.randomUUID().replace(/-/g, "");
            t &&
                t.getRandomValues &&
                (n = () => t.getRandomValues(new Uint8Array(1))[0]);
        } catch {}
        return ([1e7] + 1e3 + 4e3 + 8e3 + 1e11).replace(/[018]/g, (a) =>
            (a ^ ((n() & 15) >> (a / 4))).toString(16)
        );
    }
    function Hp(e) {
        return e.exception && e.exception.values
            ? e.exception.values[0]
            : void 0;
    }
    function Ot(e) {
        const { message: t, event_id: n } = e;
        if (t) return t;
        const a = Hp(e);
        return a
            ? a.type && a.value
                ? `${a.type}: ${a.value}`
                : a.type || a.value || n || "<unknown>"
            : n || "<unknown>";
    }
    function fc(e, t, n) {
        const a = (e.exception = e.exception || {}),
            r = (a.values = a.values || []),
            i = (r[0] = r[0] || {});
        i.value || (i.value = t || ""), i.type || (i.type = n || "Error");
    }
    function Qn(e, t) {
        const n = Hp(e);
        if (!n) return;
        const a = { type: "generic", handled: !0 },
            r = n.mechanism;
        if (((n.mechanism = { ...a, ...r, ...t }), t && "data" in t)) {
            const i = { ...(r && r.data), ...t.data };
            n.mechanism.data = i;
        }
    }
    function Vp(e) {
        if (e && e.__sentry_captured__) return !0;
        try {
            lc(e, "__sentry_captured__", !0);
        } catch {}
        return !1;
    }
    function Wp(e) {
        return Array.isArray(e) ? e : [e];
    }
    function ck() {
        return (
            typeof __SENTRY_BROWSER_BUNDLE__ < "u" &&
            !!__SENTRY_BROWSER_BUNDLE__
        );
    }
    function uk() {
        return "npm";
    }
    function dk() {
        return (
            !ck() &&
            Object.prototype.toString.call(
                typeof process < "u" ? process : 0
            ) === "[object process]"
        );
    }
    function mk(e, t) {
        return e.require(t);
    }
    function Ht(e, t = 100, n = 1 / 0) {
        try {
            return gc("", e, t, n);
        } catch (a) {
            return { ERROR: `**non-serializable** (${a})` };
        }
    }
    function qp(e, t = 3, n = 100 * 1024) {
        const a = Ht(e, t);
        return gk(a) > n ? qp(e, t - 1, n) : a;
    }
    function gc(e, t, n = 1 / 0, a = 1 / 0, r = lk()) {
        const [i, o] = r;
        if (
            t == null ||
            (["number", "boolean", "string"].includes(typeof t) && !Ny(t))
        )
            return t;
        const s = pk(e, t);
        if (!s.startsWith("[object ")) return s;
        if (t.__sentry_skip_normalization__) return t;
        const l =
            typeof t.__sentry_override_normalization_depth__ == "number"
                ? t.__sentry_override_normalization_depth__
                : n;
        if (l === 0) return s.replace("object ", "");
        if (i(t)) return "[Circular ~]";
        const u = t;
        if (u && typeof u.toJSON == "function")
            try {
                const b = u.toJSON();
                return gc("", b, l - 1, a, r);
            } catch {}
        const m = Array.isArray(t) ? [] : {};
        let p = 0;
        const d = zp(t);
        for (const b in d) {
            if (!Object.prototype.hasOwnProperty.call(d, b)) continue;
            if (p >= a) {
                m[b] = "[MaxProperties ~]";
                break;
            }
            const y = d[b];
            (m[b] = gc(b, y, l - 1, a, r)), p++;
        }
        return o(t), m;
    }
    function pk(e, t) {
        try {
            if (e === "domain" && t && typeof t == "object" && t._events)
                return "[Domain]";
            if (e === "domainEmitter") return "[DomainEmitter]";
            if (typeof global < "u" && t === global) return "[Global]";
            if (typeof window < "u" && t === window) return "[Window]";
            if (typeof document < "u" && t === document) return "[Document]";
            if (Ep(t)) return "[VueViewModel]";
            if (_y(t)) return "[SyntheticEvent]";
            if (typeof t == "number" && t !== t) return "[NaN]";
            if (typeof t == "function") return `[Function: ${Ut(t)}]`;
            if (typeof t == "symbol") return `[${String(t)}]`;
            if (typeof t == "bigint") return `[BigInt: ${String(t)}]`;
            const n = hk(t);
            return /^HTML(\w*)Element$/.test(n)
                ? `[HTMLElement: ${n}]`
                : `[object ${n}]`;
        } catch (n) {
            return `**non-serializable** (${n})`;
        }
    }
    function hk(e) {
        const t = Object.getPrototypeOf(e);
        return t ? t.constructor.name : "null prototype";
    }
    function fk(e) {
        return ~-encodeURI(e).split(/%..|./).length;
    }
    function gk(e) {
        return fk(JSON.stringify(e));
    }
    var bt;
    (function (e) {
        e[(e.PENDING = 0)] = "PENDING";
        const n = 1;
        e[(e.RESOLVED = n)] = "RESOLVED";
        const a = 2;
        e[(e.REJECTED = a)] = "REJECTED";
    })(bt || (bt = {}));
    function un(e) {
        return new Te((t) => {
            t(e);
        });
    }
    function qi(e) {
        return new Te((t, n) => {
            n(e);
        });
    }
    class Te {
        constructor(t) {
            Te.prototype.__init.call(this),
                Te.prototype.__init2.call(this),
                Te.prototype.__init3.call(this),
                Te.prototype.__init4.call(this),
                (this._state = bt.PENDING),
                (this._handlers = []);
            try {
                t(this._resolve, this._reject);
            } catch (n) {
                this._reject(n);
            }
        }
        then(t, n) {
            return new Te((a, r) => {
                this._handlers.push([
                    !1,
                    (i) => {
                        if (!t) a(i);
                        else
                            try {
                                a(t(i));
                            } catch (o) {
                                r(o);
                            }
                    },
                    (i) => {
                        if (!n) r(i);
                        else
                            try {
                                a(n(i));
                            } catch (o) {
                                r(o);
                            }
                    },
                ]),
                    this._executeHandlers();
            });
        }
        catch(t) {
            return this.then((n) => n, t);
        }
        finally(t) {
            return new Te((n, a) => {
                let r, i;
                return this.then(
                    (o) => {
                        (i = !1), (r = o), t && t();
                    },
                    (o) => {
                        (i = !0), (r = o), t && t();
                    }
                ).then(() => {
                    if (i) {
                        a(r);
                        return;
                    }
                    n(r);
                });
            });
        }
        __init() {
            this._resolve = (t) => {
                this._setResult(bt.RESOLVED, t);
            };
        }
        __init2() {
            this._reject = (t) => {
                this._setResult(bt.REJECTED, t);
            };
        }
        __init3() {
            this._setResult = (t, n) => {
                if (this._state === bt.PENDING) {
                    if (rc(n)) {
                        n.then(this._resolve, this._reject);
                        return;
                    }
                    (this._state = t),
                        (this._value = n),
                        this._executeHandlers();
                }
            };
        }
        __init4() {
            this._executeHandlers = () => {
                if (this._state === bt.PENDING) return;
                const t = this._handlers.slice();
                (this._handlers = []),
                    t.forEach((n) => {
                        n[0] ||
                            (this._state === bt.RESOLVED && n[1](this._value),
                            this._state === bt.REJECTED && n[2](this._value),
                            (n[0] = !0));
                    });
            };
        }
    }
    function bk(e) {
        const t = [];
        function n() {
            return e === void 0 || t.length < e;
        }
        function a(o) {
            return t.splice(t.indexOf(o), 1)[0];
        }
        function r(o) {
            if (!n())
                return qi(
                    new Ke(
                        "Not adding Promise because buffer limit was reached."
                    )
                );
            const s = o();
            return (
                t.indexOf(s) === -1 && t.push(s),
                s.then(() => a(s)).then(null, () => a(s).then(null, () => {})),
                s
            );
        }
        function i(o) {
            return new Te((s, l) => {
                let u = t.length;
                if (!u) return s(!0);
                const m = setTimeout(() => {
                    o && o > 0 && s(!1);
                }, o);
                t.forEach((p) => {
                    un(p).then(() => {
                        --u || (clearTimeout(m), s(!0));
                    }, l);
                });
            });
        }
        return { $: t, add: r, drain: i };
    }
    function bc(e) {
        if (!e) return {};
        const t = e.match(
            /^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/
        );
        if (!t) return {};
        const n = t[6] || "",
            a = t[8] || "";
        return {
            host: t[4],
            path: t[5],
            protocol: t[2],
            search: n,
            hash: a,
            relative: t[5] + n + a,
        };
    }
    const yk = ["fatal", "error", "warning", "log", "info", "debug"];
    function kk(e) {
        return e === "warn" ? "warning" : yk.includes(e) ? e : "log";
    }
    const Gp = dr(),
        yc = { nowSeconds: () => Date.now() / 1e3 };
    function vk() {
        const { performance: e } = Gp;
        if (!e || !e.now) return;
        const t = Date.now() - e.now();
        return { now: () => e.now(), timeOrigin: t };
    }
    function wk() {
        try {
            return mk(module, "perf_hooks").performance;
        } catch {
            return;
        }
    }
    const kc = dk() ? wk() : vk(),
        Kp =
            kc === void 0
                ? yc
                : { nowSeconds: () => (kc.timeOrigin + kc.now()) / 1e3 },
        Gi = yc.nowSeconds.bind(yc),
        Jp = Kp.nowSeconds.bind(Kp);
    (() => {
        const { performance: e } = Gp;
        if (!e || !e.now) return;
        const t = 3600 * 1e3,
            n = e.now(),
            a = Date.now(),
            r = e.timeOrigin ? Math.abs(e.timeOrigin + n - a) : t,
            i = r < t,
            o = e.timing && e.timing.navigationStart,
            l = typeof o == "number" ? Math.abs(o + n - a) : t,
            u = l < t;
        return i || u ? (r <= l ? e.timeOrigin : o) : a;
    })();
    function fr(e, t = []) {
        return [e, t];
    }
    function xk(e, t) {
        const [n, a] = e;
        return [n, [...a, t]];
    }
    function Qp(e, t) {
        const n = e[1];
        for (const a of n) {
            const r = a[0].type;
            if (t(a, r)) return !0;
        }
        return !1;
    }
    function vc(e, t) {
        return (t || new TextEncoder()).encode(e);
    }
    function Sk(e, t) {
        const [n, a] = e;
        let r = JSON.stringify(n);
        function i(o) {
            typeof r == "string"
                ? (r = typeof o == "string" ? r + o : [vc(r, t), o])
                : r.push(typeof o == "string" ? vc(o, t) : o);
        }
        for (const o of a) {
            const [s, l] = o;
            if (
                (i(`
${JSON.stringify(s)}
`),
                typeof l == "string" || l instanceof Uint8Array)
            )
                i(l);
            else {
                let u;
                try {
                    u = JSON.stringify(l);
                } catch {
                    u = JSON.stringify(Ht(l));
                }
                i(u);
            }
        }
        return typeof r == "string" ? r : Ek(r);
    }
    function Ek(e) {
        const t = e.reduce((r, i) => r + i.length, 0),
            n = new Uint8Array(t);
        let a = 0;
        for (const r of e) n.set(r, a), (a += r.length);
        return n;
    }
    function Ck(e, t) {
        const n = typeof e.data == "string" ? vc(e.data, t) : e.data;
        return [
            Ui({
                type: "attachment",
                length: n.length,
                filename: e.filename,
                content_type: e.contentType,
                attachment_type: e.attachmentType,
            }),
            n,
        ];
    }
    const $k = {
        session: "session",
        sessions: "session",
        attachment: "attachment",
        transaction: "transaction",
        event: "error",
        client_report: "internal",
        user_report: "default",
        profile: "profile",
        replay_event: "replay",
        replay_recording: "replay",
        check_in: "monitor",
    };
    function Xp(e) {
        return $k[e];
    }
    function Zp(e) {
        if (!e || !e.sdk) return;
        const { name: t, version: n } = e.sdk;
        return { name: t, version: n };
    }
    function jk(e, t, n, a) {
        const r =
            e.sdkProcessingMetadata &&
            e.sdkProcessingMetadata.dynamicSamplingContext;
        return {
            event_id: e.event_id,
            sent_at: new Date().toISOString(),
            ...(t && { sdk: t }),
            ...(!!n && { dsn: mr(a) }),
            ...(r && { trace: Ui({ ...r }) }),
        };
    }
    function Pk(e, t, n) {
        const a = [
            { type: "client_report" },
            { timestamp: n || Gi(), discarded_events: e },
        ];
        return fr(t ? { dsn: t } : {}, [a]);
    }
    const _k = 60 * 1e3;
    function Nk(e, t = Date.now()) {
        const n = parseInt(`${e}`, 10);
        if (!isNaN(n)) return n * 1e3;
        const a = Date.parse(`${e}`);
        return isNaN(a) ? _k : a - t;
    }
    function Tk(e, t) {
        return e[t] || e.all || 0;
    }
    function Ik(e, t, n = Date.now()) {
        return Tk(e, t) > n;
    }
    function zk(e, { statusCode: t, headers: n }, a = Date.now()) {
        const r = { ...e },
            i = n && n["x-sentry-rate-limits"],
            o = n && n["retry-after"];
        if (i)
            for (const s of i.trim().split(",")) {
                const [l, u] = s.split(":", 2),
                    m = parseInt(l, 10),
                    p = (isNaN(m) ? 60 : m) * 1e3;
                if (!u) r.all = a + p;
                else for (const d of u.split(";")) r[d] = a + p;
            }
        else o ? (r.all = a + Nk(o, a)) : t === 429 && (r.all = a + 60 * 1e3);
        return r;
    }
    const wc = "production";
    function eh() {
        return Pp("globalEventProcessors", () => []);
    }
    function th(e) {
        eh().push(e);
    }
    function Ki(e, t, n, a = 0) {
        return new Te((r, i) => {
            const o = e[a];
            if (t === null || typeof o != "function") r(t);
            else {
                const s = o({ ...t }, n);
                (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    o.id &&
                    s === null &&
                    z.log(`Event processor "${o.id}" dropped event`),
                    rc(s)
                        ? s
                              .then((l) => Ki(e, l, n, a + 1).then(r))
                              .then(null, i)
                        : Ki(e, s, n, a + 1)
                              .then(r)
                              .then(null, i);
            }
        });
    }
    function Ak(e) {
        const t = Jp(),
            n = {
                sid: Ft(),
                init: !0,
                timestamp: t,
                started: t,
                duration: 0,
                status: "ok",
                errors: 0,
                ignoreDuration: !1,
                toJSON: () => Mk(n),
            };
        return e && Xn(n, e), n;
    }
    function Xn(e, t = {}) {
        if (
            (t.user &&
                (!e.ipAddress &&
                    t.user.ip_address &&
                    (e.ipAddress = t.user.ip_address),
                !e.did &&
                    !t.did &&
                    (e.did = t.user.id || t.user.email || t.user.username)),
            (e.timestamp = t.timestamp || Jp()),
            t.ignoreDuration && (e.ignoreDuration = t.ignoreDuration),
            t.sid && (e.sid = t.sid.length === 32 ? t.sid : Ft()),
            t.init !== void 0 && (e.init = t.init),
            !e.did && t.did && (e.did = `${t.did}`),
            typeof t.started == "number" && (e.started = t.started),
            e.ignoreDuration)
        )
            e.duration = void 0;
        else if (typeof t.duration == "number") e.duration = t.duration;
        else {
            const n = e.timestamp - e.started;
            e.duration = n >= 0 ? n : 0;
        }
        t.release && (e.release = t.release),
            t.environment && (e.environment = t.environment),
            !e.ipAddress && t.ipAddress && (e.ipAddress = t.ipAddress),
            !e.userAgent && t.userAgent && (e.userAgent = t.userAgent),
            typeof t.errors == "number" && (e.errors = t.errors),
            t.status && (e.status = t.status);
    }
    function Dk(e, t) {
        let n = {};
        t
            ? (n = { status: t })
            : e.status === "ok" && (n = { status: "exited" }),
            Xn(e, n);
    }
    function Mk(e) {
        return Ui({
            sid: `${e.sid}`,
            init: e.init,
            started: new Date(e.started * 1e3).toISOString(),
            timestamp: new Date(e.timestamp * 1e3).toISOString(),
            status: e.status,
            errors: e.errors,
            did:
                typeof e.did == "number" || typeof e.did == "string"
                    ? `${e.did}`
                    : void 0,
            duration: e.duration,
            attrs: {
                release: e.release,
                environment: e.environment,
                ip_address: e.ipAddress,
                user_agent: e.userAgent,
            },
        });
    }
    const Rk = 100;
    class dn {
        constructor() {
            (this._notifyingListeners = !1),
                (this._scopeListeners = []),
                (this._eventProcessors = []),
                (this._breadcrumbs = []),
                (this._attachments = []),
                (this._user = {}),
                (this._tags = {}),
                (this._extra = {}),
                (this._contexts = {}),
                (this._sdkProcessingMetadata = {}),
                (this._propagationContext = nh());
        }
        static clone(t) {
            const n = new dn();
            return (
                t &&
                    ((n._breadcrumbs = [...t._breadcrumbs]),
                    (n._tags = { ...t._tags }),
                    (n._extra = { ...t._extra }),
                    (n._contexts = { ...t._contexts }),
                    (n._user = t._user),
                    (n._level = t._level),
                    (n._span = t._span),
                    (n._session = t._session),
                    (n._transactionName = t._transactionName),
                    (n._fingerprint = t._fingerprint),
                    (n._eventProcessors = [...t._eventProcessors]),
                    (n._requestSession = t._requestSession),
                    (n._attachments = [...t._attachments]),
                    (n._sdkProcessingMetadata = {
                        ...t._sdkProcessingMetadata,
                    }),
                    (n._propagationContext = { ...t._propagationContext })),
                n
            );
        }
        addScopeListener(t) {
            this._scopeListeners.push(t);
        }
        addEventProcessor(t) {
            return this._eventProcessors.push(t), this;
        }
        setUser(t) {
            return (
                (this._user = t || {}),
                this._session && Xn(this._session, { user: t }),
                this._notifyScopeListeners(),
                this
            );
        }
        getUser() {
            return this._user;
        }
        getRequestSession() {
            return this._requestSession;
        }
        setRequestSession(t) {
            return (this._requestSession = t), this;
        }
        setTags(t) {
            return (
                (this._tags = { ...this._tags, ...t }),
                this._notifyScopeListeners(),
                this
            );
        }
        setTag(t, n) {
            return (
                (this._tags = { ...this._tags, [t]: n }),
                this._notifyScopeListeners(),
                this
            );
        }
        setExtras(t) {
            return (
                (this._extra = { ...this._extra, ...t }),
                this._notifyScopeListeners(),
                this
            );
        }
        setExtra(t, n) {
            return (
                (this._extra = { ...this._extra, [t]: n }),
                this._notifyScopeListeners(),
                this
            );
        }
        setFingerprint(t) {
            return (this._fingerprint = t), this._notifyScopeListeners(), this;
        }
        setLevel(t) {
            return (this._level = t), this._notifyScopeListeners(), this;
        }
        setTransactionName(t) {
            return (
                (this._transactionName = t), this._notifyScopeListeners(), this
            );
        }
        setContext(t, n) {
            return (
                n === null ? delete this._contexts[t] : (this._contexts[t] = n),
                this._notifyScopeListeners(),
                this
            );
        }
        setSpan(t) {
            return (this._span = t), this._notifyScopeListeners(), this;
        }
        getSpan() {
            return this._span;
        }
        getTransaction() {
            const t = this.getSpan();
            return t && t.transaction;
        }
        setSession(t) {
            return (
                t ? (this._session = t) : delete this._session,
                this._notifyScopeListeners(),
                this
            );
        }
        getSession() {
            return this._session;
        }
        update(t) {
            if (!t) return this;
            if (typeof t == "function") {
                const n = t(this);
                return n instanceof dn ? n : this;
            }
            return (
                t instanceof dn
                    ? ((this._tags = { ...this._tags, ...t._tags }),
                      (this._extra = { ...this._extra, ...t._extra }),
                      (this._contexts = { ...this._contexts, ...t._contexts }),
                      t._user &&
                          Object.keys(t._user).length &&
                          (this._user = t._user),
                      t._level && (this._level = t._level),
                      t._fingerprint && (this._fingerprint = t._fingerprint),
                      t._requestSession &&
                          (this._requestSession = t._requestSession),
                      t._propagationContext &&
                          (this._propagationContext = t._propagationContext))
                    : Kn(t) &&
                      ((t = t),
                      (this._tags = { ...this._tags, ...t.tags }),
                      (this._extra = { ...this._extra, ...t.extra }),
                      (this._contexts = { ...this._contexts, ...t.contexts }),
                      t.user && (this._user = t.user),
                      t.level && (this._level = t.level),
                      t.fingerprint && (this._fingerprint = t.fingerprint),
                      t.requestSession &&
                          (this._requestSession = t.requestSession),
                      t.propagationContext &&
                          (this._propagationContext = t.propagationContext)),
                this
            );
        }
        clear() {
            return (
                (this._breadcrumbs = []),
                (this._tags = {}),
                (this._extra = {}),
                (this._user = {}),
                (this._contexts = {}),
                (this._level = void 0),
                (this._transactionName = void 0),
                (this._fingerprint = void 0),
                (this._requestSession = void 0),
                (this._span = void 0),
                (this._session = void 0),
                this._notifyScopeListeners(),
                (this._attachments = []),
                (this._propagationContext = nh()),
                this
            );
        }
        addBreadcrumb(t, n) {
            const a = typeof n == "number" ? n : Rk;
            if (a <= 0) return this;
            const r = { timestamp: Gi(), ...t },
                i = this._breadcrumbs;
            return (
                i.push(r),
                (this._breadcrumbs = i.length > a ? i.slice(-a) : i),
                this._notifyScopeListeners(),
                this
            );
        }
        getLastBreadcrumb() {
            return this._breadcrumbs[this._breadcrumbs.length - 1];
        }
        clearBreadcrumbs() {
            return (this._breadcrumbs = []), this._notifyScopeListeners(), this;
        }
        addAttachment(t) {
            return this._attachments.push(t), this;
        }
        getAttachments() {
            return this._attachments;
        }
        clearAttachments() {
            return (this._attachments = []), this;
        }
        applyToEvent(t, n = {}) {
            if (
                (this._extra &&
                    Object.keys(this._extra).length &&
                    (t.extra = { ...this._extra, ...t.extra }),
                this._tags &&
                    Object.keys(this._tags).length &&
                    (t.tags = { ...this._tags, ...t.tags }),
                this._user &&
                    Object.keys(this._user).length &&
                    (t.user = { ...this._user, ...t.user }),
                this._contexts &&
                    Object.keys(this._contexts).length &&
                    (t.contexts = { ...this._contexts, ...t.contexts }),
                this._level && (t.level = this._level),
                this._transactionName &&
                    (t.transaction = this._transactionName),
                this._span)
            ) {
                t.contexts = {
                    trace: this._span.getTraceContext(),
                    ...t.contexts,
                };
                const i = this._span.transaction;
                if (i) {
                    t.sdkProcessingMetadata = {
                        dynamicSamplingContext: i.getDynamicSamplingContext(),
                        ...t.sdkProcessingMetadata,
                    };
                    const o = i.name;
                    o && (t.tags = { transaction: o, ...t.tags });
                }
            }
            this._applyFingerprint(t);
            const a = this._getBreadcrumbs(),
                r = [...(t.breadcrumbs || []), ...a];
            return (
                (t.breadcrumbs = r.length > 0 ? r : void 0),
                (t.sdkProcessingMetadata = {
                    ...t.sdkProcessingMetadata,
                    ...this._sdkProcessingMetadata,
                    propagationContext: this._propagationContext,
                }),
                Ki([...eh(), ...this._eventProcessors], t, n)
            );
        }
        setSDKProcessingMetadata(t) {
            return (
                (this._sdkProcessingMetadata = {
                    ...this._sdkProcessingMetadata,
                    ...t,
                }),
                this
            );
        }
        setPropagationContext(t) {
            return (this._propagationContext = t), this;
        }
        getPropagationContext() {
            return this._propagationContext;
        }
        _getBreadcrumbs() {
            return this._breadcrumbs;
        }
        _notifyScopeListeners() {
            this._notifyingListeners ||
                ((this._notifyingListeners = !0),
                this._scopeListeners.forEach((t) => {
                    t(this);
                }),
                (this._notifyingListeners = !1));
        }
        _applyFingerprint(t) {
            (t.fingerprint = t.fingerprint ? Wp(t.fingerprint) : []),
                this._fingerprint &&
                    (t.fingerprint = t.fingerprint.concat(this._fingerprint)),
                t.fingerprint && !t.fingerprint.length && delete t.fingerprint;
        }
    }
    function nh() {
        return { traceId: Ft(), spanId: Ft().substring(16) };
    }
    const ah = 4,
        Lk = 100;
    class rh {
        constructor(t, n = new dn(), a = ah) {
            (this._version = a),
                (this._stack = [{ scope: n }]),
                t && this.bindClient(t);
        }
        isOlderThan(t) {
            return this._version < t;
        }
        bindClient(t) {
            const n = this.getStackTop();
            (n.client = t), t && t.setupIntegrations && t.setupIntegrations();
        }
        pushScope() {
            const t = dn.clone(this.getScope());
            return (
                this.getStack().push({ client: this.getClient(), scope: t }), t
            );
        }
        popScope() {
            return this.getStack().length <= 1 ? !1 : !!this.getStack().pop();
        }
        withScope(t) {
            const n = this.pushScope();
            try {
                t(n);
            } finally {
                this.popScope();
            }
        }
        getClient() {
            return this.getStackTop().client;
        }
        getScope() {
            return this.getStackTop().scope;
        }
        getStack() {
            return this._stack;
        }
        getStackTop() {
            return this._stack[this._stack.length - 1];
        }
        captureException(t, n) {
            const a = (this._lastEventId = n && n.event_id ? n.event_id : Ft()),
                r = new Error("Sentry syntheticException");
            return (
                this._withClient((i, o) => {
                    i.captureException(
                        t,
                        {
                            originalException: t,
                            syntheticException: r,
                            ...n,
                            event_id: a,
                        },
                        o
                    );
                }),
                a
            );
        }
        captureMessage(t, n, a) {
            const r = (this._lastEventId = a && a.event_id ? a.event_id : Ft()),
                i = new Error(t);
            return (
                this._withClient((o, s) => {
                    o.captureMessage(
                        t,
                        n,
                        {
                            originalException: t,
                            syntheticException: i,
                            ...a,
                            event_id: r,
                        },
                        s
                    );
                }),
                r
            );
        }
        captureEvent(t, n) {
            const a = n && n.event_id ? n.event_id : Ft();
            return (
                t.type || (this._lastEventId = a),
                this._withClient((r, i) => {
                    r.captureEvent(t, { ...n, event_id: a }, i);
                }),
                a
            );
        }
        lastEventId() {
            return this._lastEventId;
        }
        addBreadcrumb(t, n) {
            const { scope: a, client: r } = this.getStackTop();
            if (!r) return;
            const { beforeBreadcrumb: i = null, maxBreadcrumbs: o = Lk } =
                (r.getOptions && r.getOptions()) || {};
            if (o <= 0) return;
            const l = { timestamp: Gi(), ...t },
                u = i ? _p(() => i(l, n)) : l;
            u !== null &&
                (r.emit && r.emit("beforeAddBreadcrumb", u, n),
                a.addBreadcrumb(u, o));
        }
        setUser(t) {
            this.getScope().setUser(t);
        }
        setTags(t) {
            this.getScope().setTags(t);
        }
        setExtras(t) {
            this.getScope().setExtras(t);
        }
        setTag(t, n) {
            this.getScope().setTag(t, n);
        }
        setExtra(t, n) {
            this.getScope().setExtra(t, n);
        }
        setContext(t, n) {
            this.getScope().setContext(t, n);
        }
        configureScope(t) {
            const { scope: n, client: a } = this.getStackTop();
            a && t(n);
        }
        run(t) {
            const n = ih(this);
            try {
                t(this);
            } finally {
                ih(n);
            }
        }
        getIntegration(t) {
            const n = this.getClient();
            if (!n) return null;
            try {
                return n.getIntegration(t);
            } catch {
                return (
                    (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                        z.warn(
                            `Cannot retrieve integration ${t.id} from the current Hub`
                        ),
                    null
                );
            }
        }
        startTransaction(t, n) {
            const a = this._callExtensionMethod("startTransaction", t, n);
            if ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) && !a) {
                const r = this.getClient();
                console.warn(
                    r
                        ? `Tracing extension 'startTransaction' has not been added. Call 'addTracingExtensions' before calling 'init':
Sentry.addTracingExtensions();
Sentry.init({...});
`
                        : "Tracing extension 'startTransaction' is missing. You should 'init' the SDK before calling 'startTransaction'"
                );
            }
            return a;
        }
        traceHeaders() {
            return this._callExtensionMethod("traceHeaders");
        }
        captureSession(t = !1) {
            if (t) return this.endSession();
            this._sendSessionUpdate();
        }
        endSession() {
            const n = this.getStackTop().scope,
                a = n.getSession();
            a && Dk(a), this._sendSessionUpdate(), n.setSession();
        }
        startSession(t) {
            const { scope: n, client: a } = this.getStackTop(),
                { release: r, environment: i = wc } =
                    (a && a.getOptions()) || {},
                { userAgent: o } = ie.navigator || {},
                s = Ak({
                    release: r,
                    environment: i,
                    user: n.getUser(),
                    ...(o && { userAgent: o }),
                    ...t,
                }),
                l = n.getSession && n.getSession();
            return (
                l && l.status === "ok" && Xn(l, { status: "exited" }),
                this.endSession(),
                n.setSession(s),
                s
            );
        }
        shouldSendDefaultPii() {
            const t = this.getClient(),
                n = t && t.getOptions();
            return !!(n && n.sendDefaultPii);
        }
        _sendSessionUpdate() {
            const { scope: t, client: n } = this.getStackTop(),
                a = t.getSession();
            a && n && n.captureSession && n.captureSession(a);
        }
        _withClient(t) {
            const { scope: n, client: a } = this.getStackTop();
            a && t(a, n);
        }
        _callExtensionMethod(t, ...n) {
            const r = Ji().__SENTRY__;
            if (r && r.extensions && typeof r.extensions[t] == "function")
                return r.extensions[t].apply(this, n);
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                z.warn(
                    `Extension method ${t} couldn't be found, doing nothing.`
                );
        }
    }
    function Ji() {
        return (
            (ie.__SENTRY__ = ie.__SENTRY__ || { extensions: {}, hub: void 0 }),
            ie
        );
    }
    function ih(e) {
        const t = Ji(),
            n = xc(t);
        return oh(t, e), n;
    }
    function ee() {
        const e = Ji();
        if (e.__SENTRY__ && e.__SENTRY__.acs) {
            const t = e.__SENTRY__.acs.getCurrentHub();
            if (t) return t;
        }
        return Yk(e);
    }
    function Yk(e = Ji()) {
        return (!Uk(e) || xc(e).isOlderThan(ah)) && oh(e, new rh()), xc(e);
    }
    function Uk(e) {
        return !!(e && e.__SENTRY__ && e.__SENTRY__.hub);
    }
    function xc(e) {
        return Pp("hub", () => new rh(), e);
    }
    function oh(e, t) {
        if (!e) return !1;
        const n = (e.__SENTRY__ = e.__SENTRY__ || {});
        return (n.hub = t), !0;
    }
    function Bk(e, t, n) {
        const a = t.getOptions(),
            { publicKey: r } = t.getDsn() || {},
            { segment: i } = (n && n.getUser()) || {},
            o = Ui({
                environment: a.environment || wc,
                release: a.release,
                user_segment: i,
                public_key: r,
                trace_id: e,
            });
        return t.emit && t.emit("createDsc", o), o;
    }
    function sh(e, t) {
        return ee().captureException(e, { captureContext: t });
    }
    function lh(e) {
        ee().withScope(e);
    }
    const Fk = "7";
    function ch(e) {
        const t = e.protocol ? `${e.protocol}:` : "",
            n = e.port ? `:${e.port}` : "";
        return `${t}//${e.host}${n}${e.path ? `/${e.path}` : ""}/api/`;
    }
    function Ok(e) {
        return `${ch(e)}${e.projectId}/envelope/`;
    }
    function Hk(e, t) {
        return Hy({
            sentry_key: e.publicKey,
            sentry_version: Fk,
            ...(t && { sentry_client: `${t.name}/${t.version}` }),
        });
    }
    function Vk(e, t = {}) {
        const n = typeof t == "string" ? t : t.tunnel,
            a = typeof t == "string" || !t._metadata ? void 0 : t._metadata.sdk;
        return n || `${Ok(e)}?${Hk(e, a)}`;
    }
    function Wk(e, t) {
        const n = Tp(e);
        if (!n) return "";
        const a = `${ch(n)}embed/error-page/`;
        let r = `dsn=${mr(n)}`;
        for (const i in t)
            if (i !== "dsn")
                if (i === "user") {
                    const o = t.user;
                    if (!o) continue;
                    o.name && (r += `&name=${encodeURIComponent(o.name)}`),
                        o.email &&
                            (r += `&email=${encodeURIComponent(o.email)}`);
                } else
                    r += `&${encodeURIComponent(i)}=${encodeURIComponent(
                        t[i]
                    )}`;
        return `${a}?${r}`;
    }
    function qk(e, t) {
        return (
            t &&
                ((e.sdk = e.sdk || {}),
                (e.sdk.name = e.sdk.name || t.name),
                (e.sdk.version = e.sdk.version || t.version),
                (e.sdk.integrations = [
                    ...(e.sdk.integrations || []),
                    ...(t.integrations || []),
                ]),
                (e.sdk.packages = [
                    ...(e.sdk.packages || []),
                    ...(t.packages || []),
                ])),
            e
        );
    }
    function Gk(e, t, n, a) {
        const r = Zp(n),
            i = {
                sent_at: new Date().toISOString(),
                ...(r && { sdk: r }),
                ...(!!a && { dsn: mr(t) }),
            },
            o =
                "aggregates" in e
                    ? [{ type: "sessions" }, e]
                    : [{ type: "session" }, e.toJSON()];
        return fr(i, [o]);
    }
    function Kk(e, t, n, a) {
        const r = Zp(n),
            i = e.type && e.type !== "replay_event" ? e.type : "event";
        qk(e, n && n.sdk);
        const o = jk(e, r, a, t);
        return delete e.sdkProcessingMetadata, fr(o, [[{ type: i }, e]]);
    }
    const uh = [];
    function Jk(e) {
        const t = {};
        return (
            e.forEach((n) => {
                const { name: a } = n,
                    r = t[a];
                (r && !r.isDefaultInstance && n.isDefaultInstance) ||
                    (t[a] = n);
            }),
            Object.keys(t).map((n) => t[n])
        );
    }
    function Qk(e) {
        const t = e.defaultIntegrations || [],
            n = e.integrations;
        t.forEach((o) => {
            o.isDefaultInstance = !0;
        });
        let a;
        Array.isArray(n)
            ? (a = [...t, ...n])
            : typeof n == "function"
            ? (a = Wp(n(t)))
            : (a = t);
        const r = Jk(a),
            i = Zk(r, (o) => o.name === "Debug");
        if (i !== -1) {
            const [o] = r.splice(i, 1);
            r.push(o);
        }
        return r;
    }
    function Xk(e, t) {
        const n = {};
        return (
            t.forEach((a) => {
                a && dh(e, a, n);
            }),
            n
        );
    }
    function dh(e, t, n) {
        if (
            ((n[t.name] = t),
            uh.indexOf(t.name) === -1 && (t.setupOnce(th, ee), uh.push(t.name)),
            e.on && typeof t.preprocessEvent == "function")
        ) {
            const a = t.preprocessEvent.bind(t);
            e.on("preprocessEvent", (r, i) => a(r, i, e));
        }
        if (e.addEventProcessor && typeof t.processEvent == "function") {
            const a = t.processEvent.bind(t),
                r = Object.assign((i, o) => a(i, o, e), { id: t.name });
            e.addEventProcessor(r);
        }
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
            z.log(`Integration installed: ${t.name}`);
    }
    function Zk(e, t) {
        for (let n = 0; n < e.length; n++) if (t(e[n]) === !0) return n;
        return -1;
    }
    function ev(e, t, n, a, r) {
        const { normalizeDepth: i = 3, normalizeMaxBreadth: o = 1e3 } = e,
            s = {
                ...t,
                event_id: t.event_id || n.event_id || Ft(),
                timestamp: t.timestamp || Gi(),
            },
            l = n.integrations || e.integrations.map((p) => p.name);
        tv(s, e), rv(s, l), t.type === void 0 && nv(s, e.stackParser);
        let u = a;
        n.captureContext && (u = dn.clone(u).update(n.captureContext));
        let m = un(s);
        if (u) {
            if (u.getAttachments) {
                const p = [...(n.attachments || []), ...u.getAttachments()];
                p.length && (n.attachments = p);
            }
            m = u.applyToEvent(s, n);
        }
        return m
            .then((p) =>
                r && r.getEventProcessors ? Ki(r.getEventProcessors(), p, n) : p
            )
            .then(
                (p) => (
                    p && av(p), typeof i == "number" && i > 0 ? iv(p, i, o) : p
                )
            );
    }
    function tv(e, t) {
        const {
            environment: n,
            release: a,
            dist: r,
            maxValueLength: i = 250,
        } = t;
        "environment" in e || (e.environment = "environment" in t ? n : wc),
            e.release === void 0 && a !== void 0 && (e.release = a),
            e.dist === void 0 && r !== void 0 && (e.dist = r),
            e.message && (e.message = Jn(e.message, i));
        const o = e.exception && e.exception.values && e.exception.values[0];
        o && o.value && (o.value = Jn(o.value, i));
        const s = e.request;
        s && s.url && (s.url = Jn(s.url, i));
    }
    const mh = new WeakMap();
    function nv(e, t) {
        const n = ie._sentryDebugIds;
        if (!n) return;
        let a;
        const r = mh.get(t);
        r ? (a = r) : ((a = new Map()), mh.set(t, a));
        const i = Object.keys(n).reduce((o, s) => {
            let l;
            const u = a.get(s);
            u ? (l = u) : ((l = t(s)), a.set(s, l));
            for (let m = l.length - 1; m >= 0; m--) {
                const p = l[m];
                if (p.filename) {
                    o[p.filename] = n[s];
                    break;
                }
            }
            return o;
        }, {});
        try {
            e.exception.values.forEach((o) => {
                o.stacktrace.frames.forEach((s) => {
                    s.filename && (s.debug_id = i[s.filename]);
                });
            });
        } catch {}
    }
    function av(e) {
        const t = {};
        try {
            e.exception.values.forEach((a) => {
                a.stacktrace.frames.forEach((r) => {
                    r.debug_id &&
                        (r.abs_path
                            ? (t[r.abs_path] = r.debug_id)
                            : r.filename && (t[r.filename] = r.debug_id),
                        delete r.debug_id);
                });
            });
        } catch {}
        if (Object.keys(t).length === 0) return;
        (e.debug_meta = e.debug_meta || {}),
            (e.debug_meta.images = e.debug_meta.images || []);
        const n = e.debug_meta.images;
        Object.keys(t).forEach((a) => {
            n.push({ type: "sourcemap", code_file: a, debug_id: t[a] });
        });
    }
    function rv(e, t) {
        t.length > 0 &&
            ((e.sdk = e.sdk || {}),
            (e.sdk.integrations = [...(e.sdk.integrations || []), ...t]));
    }
    function iv(e, t, n) {
        if (!e) return null;
        const a = {
            ...e,
            ...(e.breadcrumbs && {
                breadcrumbs: e.breadcrumbs.map((r) => ({
                    ...r,
                    ...(r.data && { data: Ht(r.data, t, n) }),
                })),
            }),
            ...(e.user && { user: Ht(e.user, t, n) }),
            ...(e.contexts && { contexts: Ht(e.contexts, t, n) }),
            ...(e.extra && { extra: Ht(e.extra, t, n) }),
        };
        return (
            e.contexts &&
                e.contexts.trace &&
                a.contexts &&
                ((a.contexts.trace = e.contexts.trace),
                e.contexts.trace.data &&
                    (a.contexts.trace.data = Ht(e.contexts.trace.data, t, n))),
            e.spans &&
                (a.spans = e.spans.map(
                    (r) => (r.data && (r.data = Ht(r.data, t, n)), r)
                )),
            a
        );
    }
    const ph = "Not capturing exception because it's already been captured.";
    class ov {
        constructor(t) {
            if (
                ((this._options = t),
                (this._integrations = {}),
                (this._integrationsInitialized = !1),
                (this._numProcessing = 0),
                (this._outcomes = {}),
                (this._hooks = {}),
                (this._eventProcessors = []),
                t.dsn
                    ? (this._dsn = Tp(t.dsn))
                    : (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                      z.warn("No DSN provided, client will not do anything."),
                this._dsn)
            ) {
                const n = Vk(this._dsn, t);
                this._transport = t.transport({
                    recordDroppedEvent: this.recordDroppedEvent.bind(this),
                    ...t.transportOptions,
                    url: n,
                });
            }
        }
        captureException(t, n, a) {
            if (Vp(t)) {
                (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    z.log(ph);
                return;
            }
            let r = n && n.event_id;
            return (
                this._process(
                    this.eventFromException(t, n)
                        .then((i) => this._captureEvent(i, n, a))
                        .then((i) => {
                            r = i;
                        })
                ),
                r
            );
        }
        captureMessage(t, n, a, r) {
            let i = a && a.event_id;
            const o = Sp(t)
                ? this.eventFromMessage(String(t), n, a)
                : this.eventFromException(t, a);
            return (
                this._process(
                    o
                        .then((s) => this._captureEvent(s, a, r))
                        .then((s) => {
                            i = s;
                        })
                ),
                i
            );
        }
        captureEvent(t, n, a) {
            if (n && n.originalException && Vp(n.originalException)) {
                (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    z.log(ph);
                return;
            }
            let r = n && n.event_id;
            return (
                this._process(
                    this._captureEvent(t, n, a).then((i) => {
                        r = i;
                    })
                ),
                r
            );
        }
        captureSession(t) {
            if (!this._isEnabled()) {
                (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    z.warn("SDK not enabled, will not capture session.");
                return;
            }
            typeof t.release != "string"
                ? (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                  z.warn(
                      "Discarded session because of missing or non-string release"
                  )
                : (this.sendSession(t), Xn(t, { init: !1 }));
        }
        getDsn() {
            return this._dsn;
        }
        getOptions() {
            return this._options;
        }
        getSdkMetadata() {
            return this._options._metadata;
        }
        getTransport() {
            return this._transport;
        }
        flush(t) {
            const n = this._transport;
            return n
                ? this._isClientDoneProcessing(t).then((a) =>
                      n.flush(t).then((r) => a && r)
                  )
                : un(!0);
        }
        close(t) {
            return this.flush(t).then(
                (n) => ((this.getOptions().enabled = !1), n)
            );
        }
        getEventProcessors() {
            return this._eventProcessors;
        }
        addEventProcessor(t) {
            this._eventProcessors.push(t);
        }
        setupIntegrations() {
            this._isEnabled() &&
                !this._integrationsInitialized &&
                ((this._integrations = Xk(this, this._options.integrations)),
                (this._integrationsInitialized = !0));
        }
        getIntegrationById(t) {
            return this._integrations[t];
        }
        getIntegration(t) {
            try {
                return this._integrations[t.id] || null;
            } catch {
                return (
                    (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                        z.warn(
                            `Cannot retrieve integration ${t.id} from the current Client`
                        ),
                    null
                );
            }
        }
        addIntegration(t) {
            dh(this, t, this._integrations);
        }
        sendEvent(t, n = {}) {
            if ((this.emit("beforeSendEvent", t, n), this._dsn)) {
                let a = Kk(
                    t,
                    this._dsn,
                    this._options._metadata,
                    this._options.tunnel
                );
                for (const i of n.attachments || [])
                    a = xk(
                        a,
                        Ck(
                            i,
                            this._options.transportOptions &&
                                this._options.transportOptions.textEncoder
                        )
                    );
                const r = this._sendEnvelope(a);
                r && r.then((i) => this.emit("afterSendEvent", t, i), null);
            }
        }
        sendSession(t) {
            if (this._dsn) {
                const n = Gk(
                    t,
                    this._dsn,
                    this._options._metadata,
                    this._options.tunnel
                );
                this._sendEnvelope(n);
            }
        }
        recordDroppedEvent(t, n, a) {
            if (this._options.sendClientReports) {
                const r = `${t}:${n}`;
                (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    z.log(`Adding outcome: "${r}"`),
                    (this._outcomes[r] = this._outcomes[r] + 1 || 1);
            }
        }
        on(t, n) {
            this._hooks[t] || (this._hooks[t] = []), this._hooks[t].push(n);
        }
        emit(t, ...n) {
            this._hooks[t] && this._hooks[t].forEach((a) => a(...n));
        }
        _updateSessionFromEvent(t, n) {
            let a = !1,
                r = !1;
            const i = n.exception && n.exception.values;
            if (i) {
                r = !0;
                for (const l of i) {
                    const u = l.mechanism;
                    if (u && u.handled === !1) {
                        a = !0;
                        break;
                    }
                }
            }
            const o = t.status === "ok";
            ((o && t.errors === 0) || (o && a)) &&
                (Xn(t, {
                    ...(a && { status: "crashed" }),
                    errors: t.errors || Number(r || a),
                }),
                this.captureSession(t));
        }
        _isClientDoneProcessing(t) {
            return new Te((n) => {
                let a = 0;
                const r = 1,
                    i = setInterval(() => {
                        this._numProcessing == 0
                            ? (clearInterval(i), n(!0))
                            : ((a += r),
                              t && a >= t && (clearInterval(i), n(!1)));
                    }, r);
            });
        }
        _isEnabled() {
            return this.getOptions().enabled !== !1 && this._dsn !== void 0;
        }
        _prepareEvent(t, n, a) {
            const r = this.getOptions(),
                i = Object.keys(this._integrations);
            return (
                !n.integrations && i.length > 0 && (n.integrations = i),
                this.emit("preprocessEvent", t, n),
                ev(r, t, n, a, this).then((o) => {
                    if (o === null) return o;
                    const { propagationContext: s } =
                        o.sdkProcessingMetadata || {};
                    if (!(o.contexts && o.contexts.trace) && s) {
                        const {
                            traceId: u,
                            spanId: m,
                            parentSpanId: p,
                            dsc: d,
                        } = s;
                        o.contexts = {
                            trace: {
                                trace_id: u,
                                span_id: m,
                                parent_span_id: p,
                            },
                            ...o.contexts,
                        };
                        const b = d || Bk(u, this, a);
                        o.sdkProcessingMetadata = {
                            dynamicSamplingContext: b,
                            ...o.sdkProcessingMetadata,
                        };
                    }
                    return o;
                })
            );
        }
        _captureEvent(t, n = {}, a) {
            return this._processEvent(t, n, a).then(
                (r) => r.event_id,
                (r) => {
                    if (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) {
                        const i = r;
                        i.logLevel === "log" ? z.log(i.message) : z.warn(i);
                    }
                }
            );
        }
        _processEvent(t, n, a) {
            const r = this.getOptions(),
                { sampleRate: i } = r;
            if (!this._isEnabled())
                return qi(
                    new Ke("SDK not enabled, will not capture event.", "log")
                );
            const o = fh(t),
                s = hh(t),
                l = t.type || "error",
                u = `before send for type \`${l}\``;
            if (s && typeof i == "number" && Math.random() > i)
                return (
                    this.recordDroppedEvent("sample_rate", "error", t),
                    qi(
                        new Ke(
                            `Discarding event because it's not included in the random sample (sampling rate = ${i})`,
                            "log"
                        )
                    )
                );
            const m = l === "replay_event" ? "replay" : l;
            return this._prepareEvent(t, n, a)
                .then((p) => {
                    if (p === null)
                        throw (
                            (this.recordDroppedEvent("event_processor", m, t),
                            new Ke(
                                "An event processor returned `null`, will not send event.",
                                "log"
                            ))
                        );
                    if (n.data && n.data.__sentry__ === !0) return p;
                    const b = lv(r, p, n);
                    return sv(b, u);
                })
                .then((p) => {
                    if (p === null)
                        throw (
                            (this.recordDroppedEvent("before_send", m, t),
                            new Ke(
                                `${u} returned \`null\`, will not send event.`,
                                "log"
                            ))
                        );
                    const d = a && a.getSession();
                    !o && d && this._updateSessionFromEvent(d, p);
                    const b = p.transaction_info;
                    if (o && b && p.transaction !== t.transaction) {
                        const y = "custom";
                        p.transaction_info = { ...b, source: y };
                    }
                    return this.sendEvent(p, n), p;
                })
                .then(null, (p) => {
                    throw p instanceof Ke
                        ? p
                        : (this.captureException(p, {
                              data: { __sentry__: !0 },
                              originalException: p,
                          }),
                          new Ke(`Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.
Reason: ${p}`));
                });
        }
        _process(t) {
            this._numProcessing++,
                t.then(
                    (n) => (this._numProcessing--, n),
                    (n) => (this._numProcessing--, n)
                );
        }
        _sendEnvelope(t) {
            if (this._transport && this._dsn)
                return (
                    this.emit("beforeEnvelope", t),
                    this._transport.send(t).then(null, (n) => {
                        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                            z.error("Error while sending event:", n);
                    })
                );
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                z.error("Transport disabled");
        }
        _clearOutcomes() {
            const t = this._outcomes;
            return (
                (this._outcomes = {}),
                Object.keys(t).map((n) => {
                    const [a, r] = n.split(":");
                    return { reason: a, category: r, quantity: t[n] };
                })
            );
        }
    }
    function sv(e, t) {
        const n = `${t} must return \`null\` or a valid event.`;
        if (rc(e))
            return e.then(
                (a) => {
                    if (!Kn(a) && a !== null) throw new Ke(n);
                    return a;
                },
                (a) => {
                    throw new Ke(`${t} rejected with ${a}`);
                }
            );
        if (!Kn(e) && e !== null) throw new Ke(n);
        return e;
    }
    function lv(e, t, n) {
        const { beforeSend: a, beforeSendTransaction: r } = e;
        return hh(t) && a ? a(t, n) : fh(t) && r ? r(t, n) : t;
    }
    function hh(e) {
        return e.type === void 0;
    }
    function fh(e) {
        return e.type === "transaction";
    }
    function cv(e, t) {
        t.debug === !0 &&
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__
                ? z.enable()
                : console.warn(
                      "[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle."
                  ));
        const n = ee();
        n.getScope().update(t.initialScope);
        const r = new e(t);
        n.bindClient(r);
    }
    const uv = 30;
    function gh(e, t, n = bk(e.bufferSize || uv)) {
        let a = {};
        const r = (o) => n.drain(o);
        function i(o) {
            const s = [];
            if (
                (Qp(o, (p, d) => {
                    const b = Xp(d);
                    if (Ik(a, b)) {
                        const y = bh(p, d);
                        e.recordDroppedEvent("ratelimit_backoff", b, y);
                    } else s.push(p);
                }),
                s.length === 0)
            )
                return un();
            const l = fr(o[0], s),
                u = (p) => {
                    Qp(l, (d, b) => {
                        const y = bh(d, b);
                        e.recordDroppedEvent(p, Xp(b), y);
                    });
                },
                m = () =>
                    t({ body: Sk(l, e.textEncoder) }).then(
                        (p) => (
                            p.statusCode !== void 0 &&
                                (p.statusCode < 200 || p.statusCode >= 300) &&
                                (typeof __SENTRY_DEBUG__ > "u" ||
                                    __SENTRY_DEBUG__) &&
                                z.warn(
                                    `Sentry responded with status code ${p.statusCode} to sent event.`
                                ),
                            (a = zk(a, p)),
                            p
                        ),
                        (p) => {
                            throw (u("network_error"), p);
                        }
                    );
            return n.add(m).then(
                (p) => p,
                (p) => {
                    if (p instanceof Ke)
                        return (
                            (typeof __SENTRY_DEBUG__ > "u" ||
                                __SENTRY_DEBUG__) &&
                                z.error(
                                    "Skipped sending event because buffer is full."
                                ),
                            u("queue_overflow"),
                            un()
                        );
                    throw p;
                }
            );
        }
        return (i.__sentry__baseTransport__ = !0), { send: i, flush: r };
    }
    function bh(e, t) {
        if (!(t !== "event" && t !== "transaction"))
            return Array.isArray(e) ? e[1] : void 0;
    }
    const Qi = "7.70.0";
    let yh;
    class Xi {
        static __initStatic() {
            this.id = "FunctionToString";
        }
        constructor() {
            this.name = Xi.id;
        }
        setupOnce() {
            yh = Function.prototype.toString;
            try {
                Function.prototype.toString = function (...t) {
                    const n = cc(this) || this;
                    return yh.apply(n, t);
                };
            } catch {}
        }
    }
    Xi.__initStatic();
    const dv = [
            /^Script error\.?$/,
            /^Javascript error: Script error\.? on line 0$/,
        ],
        mv = [
            /^.*healthcheck.*$/,
            /^.*healthy.*$/,
            /^.*live.*$/,
            /^.*ready.*$/,
            /^.*heartbeat.*$/,
            /^.*\/health$/,
            /^.*\/healthz$/,
        ];
    class gr {
        static __initStatic() {
            this.id = "InboundFilters";
        }
        constructor(t = {}) {
            (this.name = gr.id), (this._options = t);
        }
        setupOnce(t, n) {
            const a = (r) => {
                const i = n();
                if (i) {
                    const o = i.getIntegration(gr);
                    if (o) {
                        const s = i.getClient(),
                            l = s ? s.getOptions() : {},
                            u = pv(o._options, l);
                        return hv(r, u) ? null : r;
                    }
                }
                return r;
            };
            (a.id = this.name), t(a);
        }
    }
    gr.__initStatic();
    function pv(e = {}, t = {}) {
        return {
            allowUrls: [...(e.allowUrls || []), ...(t.allowUrls || [])],
            denyUrls: [...(e.denyUrls || []), ...(t.denyUrls || [])],
            ignoreErrors: [
                ...(e.ignoreErrors || []),
                ...(t.ignoreErrors || []),
                ...(e.disableErrorDefaults ? [] : dv),
            ],
            ignoreTransactions: [
                ...(e.ignoreTransactions || []),
                ...(t.ignoreTransactions || []),
                ...(e.disableTransactionDefaults ? [] : mv),
            ],
            ignoreInternal: e.ignoreInternal !== void 0 ? e.ignoreInternal : !0,
        };
    }
    function hv(e, t) {
        return t.ignoreInternal && vv(e)
            ? ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                  z.warn(`Event dropped due to being internal Sentry Error.
Event: ${Ot(e)}`),
              !0)
            : fv(e, t.ignoreErrors)
            ? ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                  z.warn(`Event dropped due to being matched by \`ignoreErrors\` option.
Event: ${Ot(e)}`),
              !0)
            : gv(e, t.ignoreTransactions)
            ? ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                  z.warn(`Event dropped due to being matched by \`ignoreTransactions\` option.
Event: ${Ot(e)}`),
              !0)
            : bv(e, t.denyUrls)
            ? ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                  z.warn(`Event dropped due to being matched by \`denyUrls\` option.
Event: ${Ot(e)}.
Url: ${Zi(e)}`),
              !0)
            : yv(e, t.allowUrls)
            ? !1
            : ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                  z.warn(`Event dropped due to not being matched by \`allowUrls\` option.
Event: ${Ot(e)}.
Url: ${Zi(e)}`),
              !0);
    }
    function fv(e, t) {
        return e.type || !t || !t.length ? !1 : kv(e).some((n) => Ri(n, t));
    }
    function gv(e, t) {
        if (e.type !== "transaction" || !t || !t.length) return !1;
        const n = e.transaction;
        return n ? Ri(n, t) : !1;
    }
    function bv(e, t) {
        if (!t || !t.length) return !1;
        const n = Zi(e);
        return n ? Ri(n, t) : !1;
    }
    function yv(e, t) {
        if (!t || !t.length) return !0;
        const n = Zi(e);
        return n ? Ri(n, t) : !0;
    }
    function kv(e) {
        const t = [];
        e.message && t.push(e.message);
        let n;
        try {
            n = e.exception.values[e.exception.values.length - 1];
        } catch {}
        return (
            n &&
                n.value &&
                (t.push(n.value), n.type && t.push(`${n.type}: ${n.value}`)),
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                t.length === 0 &&
                z.error(`Could not extract message for event ${Ot(e)}`),
            t
        );
    }
    function vv(e) {
        try {
            return e.exception.values[0].type === "SentryError";
        } catch {}
        return !1;
    }
    function wv(e = []) {
        for (let t = e.length - 1; t >= 0; t--) {
            const n = e[t];
            if (
                n &&
                n.filename !== "<anonymous>" &&
                n.filename !== "[native code]"
            )
                return n.filename || null;
        }
        return null;
    }
    function Zi(e) {
        try {
            let t;
            try {
                t = e.exception.values[0].stacktrace.frames;
            } catch {}
            return t ? wv(t) : null;
        } catch {
            return (
                (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    z.error(`Cannot extract url for event ${Ot(e)}`),
                null
            );
        }
    }
    const L = ie;
    let Sc = 0;
    function kh() {
        return Sc > 0;
    }
    function xv() {
        Sc++,
            setTimeout(() => {
                Sc--;
            });
    }
    function Zn(e, t = {}, n) {
        if (typeof e != "function") return e;
        try {
            const r = e.__sentry_wrapped__;
            if (r) return r;
            if (cc(e)) return e;
        } catch {
            return e;
        }
        const a = function () {
            const r = Array.prototype.slice.call(arguments);
            try {
                n && typeof n == "function" && n.apply(this, arguments);
                const i = r.map((o) => Zn(o, t));
                return e.apply(this, i);
            } catch (i) {
                throw (
                    (xv(),
                    lh((o) => {
                        o.addEventProcessor(
                            (s) => (
                                t.mechanism &&
                                    (fc(s, void 0, void 0), Qn(s, t.mechanism)),
                                (s.extra = { ...s.extra, arguments: r }),
                                s
                            )
                        ),
                            sh(i);
                    }),
                    i)
                );
            }
        };
        try {
            for (const r in e)
                Object.prototype.hasOwnProperty.call(e, r) && (a[r] = e[r]);
        } catch {}
        Ip(a, e), lc(e, "__sentry_wrapped__", a);
        try {
            Object.getOwnPropertyDescriptor(a, "name").configurable &&
                Object.defineProperty(a, "name", {
                    get() {
                        return e.name;
                    },
                });
        } catch {}
        return a;
    }
    function vh(e, t) {
        const n = Cc(e, t),
            a = { type: t && t.name, value: $v(t) };
        return (
            n.length && (a.stacktrace = { frames: n }),
            a.type === void 0 &&
                a.value === "" &&
                (a.value = "Unrecoverable error caught"),
            a
        );
    }
    function Sv(e, t, n, a) {
        const i = ee().getClient(),
            o = i && i.getOptions().normalizeDepth,
            s = {
                exception: {
                    values: [
                        {
                            type: Mi(t)
                                ? t.constructor.name
                                : a
                                ? "UnhandledRejection"
                                : "Error",
                            value: _v(t, { isUnhandledRejection: a }),
                        },
                    ],
                },
                extra: { __serialized__: qp(t, o) },
            };
        if (n) {
            const l = Cc(e, n);
            l.length && (s.exception.values[0].stacktrace = { frames: l });
        }
        return s;
    }
    function Ec(e, t) {
        return { exception: { values: [vh(e, t)] } };
    }
    function Cc(e, t) {
        const n = t.stacktrace || t.stack || "",
            a = Cv(t);
        try {
            return e(n, a);
        } catch {}
        return [];
    }
    const Ev = /Minified React error #\d+;/i;
    function Cv(e) {
        if (e) {
            if (typeof e.framesToPop == "number") return e.framesToPop;
            if (Ev.test(e.message)) return 1;
        }
        return 0;
    }
    function $v(e) {
        const t = e && e.message;
        return t
            ? t.error && typeof t.error.message == "string"
                ? t.error.message
                : t
            : "No error message";
    }
    function jv(e, t, n, a) {
        const r = (n && n.syntheticException) || void 0,
            i = $c(e, t, r, a);
        return (
            Qn(i),
            (i.level = "error"),
            n && n.event_id && (i.event_id = n.event_id),
            un(i)
        );
    }
    function Pv(e, t, n = "info", a, r) {
        const i = (a && a.syntheticException) || void 0,
            o = jc(e, t, i, r);
        return (
            (o.level = n), a && a.event_id && (o.event_id = a.event_id), un(o)
        );
    }
    function $c(e, t, n, a, r) {
        let i;
        if (ac(t) && t.error) return Ec(e, t.error);
        if (xp(t) || $y(t)) {
            const o = t;
            if ("stack" in t) i = Ec(e, t);
            else {
                const s = o.name || (xp(o) ? "DOMError" : "DOMException"),
                    l = o.message ? `${s}: ${o.message}` : s;
                (i = jc(e, l, n, a)), fc(i, l);
            }
            return (
                "code" in o &&
                    (i.tags = { ...i.tags, "DOMException.code": `${o.code}` }),
                i
            );
        }
        return nc(t)
            ? Ec(e, t)
            : Kn(t) || Mi(t)
            ? ((i = Sv(e, t, n, r)), Qn(i, { synthetic: !0 }), i)
            : ((i = jc(e, t, n, a)),
              fc(i, `${t}`, void 0),
              Qn(i, { synthetic: !0 }),
              i);
    }
    function jc(e, t, n, a) {
        const r = { message: t };
        if (a && n) {
            const i = Cc(e, n);
            i.length &&
                (r.exception = {
                    values: [{ value: t, stacktrace: { frames: i } }],
                });
        }
        return r;
    }
    function _v(e, { isUnhandledRejection: t }) {
        const n = Vy(e),
            a = t ? "promise rejection" : "exception";
        return ac(e)
            ? `Event \`ErrorEvent\` captured as ${a} with message \`${e.message}\``
            : Mi(e)
            ? `Event \`${Nv(e)}\` (type=${e.type}) captured as ${a}`
            : `Object captured as ${a} with keys: ${n}`;
    }
    function Nv(e) {
        try {
            const t = Object.getPrototypeOf(e);
            return t ? t.constructor.name : void 0;
        } catch {}
    }
    function Tv(e, { metadata: t, tunnel: n, dsn: a }) {
        const r = {
                event_id: e.event_id,
                sent_at: new Date().toISOString(),
                ...(t &&
                    t.sdk && {
                        sdk: { name: t.sdk.name, version: t.sdk.version },
                    }),
                ...(!!n && !!a && { dsn: mr(a) }),
            },
            i = Iv(e);
        return fr(r, [i]);
    }
    function Iv(e) {
        return [{ type: "user_report" }, e];
    }
    class zv extends ov {
        constructor(t) {
            const n = L.SENTRY_SDK_SOURCE || uk();
            (t._metadata = t._metadata || {}),
                (t._metadata.sdk = t._metadata.sdk || {
                    name: "sentry.javascript.browser",
                    packages: [{ name: `${n}:@sentry/browser`, version: Qi }],
                    version: Qi,
                }),
                super(t),
                t.sendClientReports &&
                    L.document &&
                    L.document.addEventListener("visibilitychange", () => {
                        L.document.visibilityState === "hidden" &&
                            this._flushOutcomes();
                    });
        }
        eventFromException(t, n) {
            return jv(
                this._options.stackParser,
                t,
                n,
                this._options.attachStacktrace
            );
        }
        eventFromMessage(t, n = "info", a) {
            return Pv(
                this._options.stackParser,
                t,
                n,
                a,
                this._options.attachStacktrace
            );
        }
        captureUserFeedback(t) {
            if (!this._isEnabled()) {
                (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    z.warn("SDK not enabled, will not capture user feedback.");
                return;
            }
            const n = Tv(t, {
                metadata: this.getSdkMetadata(),
                dsn: this.getDsn(),
                tunnel: this.getOptions().tunnel,
            });
            this._sendEnvelope(n);
        }
        _prepareEvent(t, n, a) {
            return (
                (t.platform = t.platform || "javascript"),
                super._prepareEvent(t, n, a)
            );
        }
        _flushOutcomes() {
            const t = this._clearOutcomes();
            if (t.length === 0) {
                (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    z.log("No outcomes to send");
                return;
            }
            if (!this._dsn) {
                (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    z.log("No dsn provided, will not send outcomes");
                return;
            }
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                z.log("Sending outcomes:", t);
            const n = Pk(t, this._options.tunnel && mr(this._dsn));
            this._sendEnvelope(n);
        }
    }
    let br;
    function Av() {
        if (br) return br;
        if (pc(L.fetch)) return (br = L.fetch.bind(L));
        const e = L.document;
        let t = L.fetch;
        if (e && typeof e.createElement == "function")
            try {
                const n = e.createElement("iframe");
                (n.hidden = !0), e.head.appendChild(n);
                const a = n.contentWindow;
                a && a.fetch && (t = a.fetch), e.head.removeChild(n);
            } catch (n) {
                (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    z.warn(
                        "Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ",
                        n
                    );
            }
        return (br = t.bind(L));
    }
    function Dv() {
        br = void 0;
    }
    function Mv(e, t = Av()) {
        let n = 0,
            a = 0;
        function r(i) {
            const o = i.body.length;
            (n += o), a++;
            const s = {
                body: i.body,
                method: "POST",
                referrerPolicy: "origin",
                headers: e.headers,
                keepalive: n <= 6e4 && a < 15,
                ...e.fetchOptions,
            };
            try {
                return t(e.url, s).then(
                    (l) => (
                        (n -= o),
                        a--,
                        {
                            statusCode: l.status,
                            headers: {
                                "x-sentry-rate-limits": l.headers.get(
                                    "X-Sentry-Rate-Limits"
                                ),
                                "retry-after": l.headers.get("Retry-After"),
                            },
                        }
                    )
                );
            } catch (l) {
                return Dv(), (n -= o), a--, qi(l);
            }
        }
        return gh(e, r);
    }
    const Rv = 4;
    function Lv(e) {
        function t(n) {
            return new Te((a, r) => {
                const i = new XMLHttpRequest();
                (i.onerror = r),
                    (i.onreadystatechange = () => {
                        i.readyState === Rv &&
                            a({
                                statusCode: i.status,
                                headers: {
                                    "x-sentry-rate-limits": i.getResponseHeader(
                                        "X-Sentry-Rate-Limits"
                                    ),
                                    "retry-after":
                                        i.getResponseHeader("Retry-After"),
                                },
                            });
                    }),
                    i.open("POST", e.url);
                for (const o in e.headers)
                    Object.prototype.hasOwnProperty.call(e.headers, o) &&
                        i.setRequestHeader(o, e.headers[o]);
                i.send(n.body);
            });
        }
        return gh(e, t);
    }
    const eo = "?",
        Yv = 30,
        Uv = 40,
        Bv = 50;
    function Pc(e, t, n, a) {
        const r = { filename: e, function: t, in_app: !0 };
        return n !== void 0 && (r.lineno = n), a !== void 0 && (r.colno = a), r;
    }
    const Fv =
            /^\s*at (?:(.+?\)(?: \[.+\])?|.*?) ?\((?:address at )?)?(?:async )?((?:<anonymous>|[-a-z]+:|.*bundle|\/)?.*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,
        Ov = /\((\S*)(?::(\d+))(?::(\d+))\)/,
        Hv = [
            Yv,
            (e) => {
                const t = Fv.exec(e);
                if (t) {
                    if (t[2] && t[2].indexOf("eval") === 0) {
                        const i = Ov.exec(t[2]);
                        i && ((t[2] = i[1]), (t[3] = i[2]), (t[4] = i[3]));
                    }
                    const [a, r] = wh(t[1] || eo, t[2]);
                    return Pc(
                        r,
                        a,
                        t[3] ? +t[3] : void 0,
                        t[4] ? +t[4] : void 0
                    );
                }
            },
        ],
        Vv =
            /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:[-a-z]+)?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i,
        Wv = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i,
        qv = [
            Bv,
            (e) => {
                const t = Vv.exec(e);
                if (t) {
                    if (t[3] && t[3].indexOf(" > eval") > -1) {
                        const i = Wv.exec(t[3]);
                        i &&
                            ((t[1] = t[1] || "eval"),
                            (t[3] = i[1]),
                            (t[4] = i[2]),
                            (t[5] = ""));
                    }
                    let a = t[3],
                        r = t[1] || eo;
                    return (
                        ([r, a] = wh(r, a)),
                        Pc(a, r, t[4] ? +t[4] : void 0, t[5] ? +t[5] : void 0)
                    );
                }
            },
        ],
        Gv =
            /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:[-a-z]+):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
        Kv = Yp(
            ...[
                Hv,
                qv,
                [
                    Uv,
                    (e) => {
                        const t = Gv.exec(e);
                        return t
                            ? Pc(t[2], t[1] || eo, +t[3], t[4] ? +t[4] : void 0)
                            : void 0;
                    },
                ],
            ]
        ),
        wh = (e, t) => {
            const n = e.indexOf("safari-extension") !== -1,
                a = e.indexOf("safari-web-extension") !== -1;
            return n || a
                ? [
                      e.indexOf("@") !== -1 ? e.split("@")[0] : eo,
                      n ? `safari-extension:${t}` : `safari-web-extension:${t}`,
                  ]
                : [e, t];
        };
    class ea {
        static __initStatic() {
            this.id = "GlobalHandlers";
        }
        constructor(t) {
            (this.name = ea.id),
                (this._options = {
                    onerror: !0,
                    onunhandledrejection: !0,
                    ...t,
                }),
                (this._installFunc = { onerror: Jv, onunhandledrejection: Qv });
        }
        setupOnce() {
            Error.stackTraceLimit = 50;
            const t = this._options;
            for (const n in t) {
                const a = this._installFunc[n];
                a && t[n] && (ew(n), a(), (this._installFunc[n] = void 0));
            }
        }
    }
    ea.__initStatic();
    function Jv() {
        Bt("error", (e) => {
            const [t, n, a] = Eh();
            if (!t.getIntegration(ea)) return;
            const { msg: r, url: i, line: o, column: s, error: l } = e;
            if (kh() || (l && l.__sentry_own_request__)) return;
            const u =
                l === void 0 && ln(r)
                    ? Zv(r, i, o, s)
                    : xh($c(n, l || r, void 0, a, !1), i, o, s);
            (u.level = "error"), Sh(t, l, u, "onerror");
        });
    }
    function Qv() {
        Bt("unhandledrejection", (e) => {
            const [t, n, a] = Eh();
            if (!t.getIntegration(ea)) return;
            let r = e;
            try {
                "reason" in e
                    ? (r = e.reason)
                    : "detail" in e &&
                      "reason" in e.detail &&
                      (r = e.detail.reason);
            } catch {}
            if (kh() || (r && r.__sentry_own_request__)) return !0;
            const i = Sp(r) ? Xv(r) : $c(n, r, void 0, a, !0);
            (i.level = "error"), Sh(t, r, i, "onunhandledrejection");
        });
    }
    function Xv(e) {
        return {
            exception: {
                values: [
                    {
                        type: "UnhandledRejection",
                        value: `Non-Error promise rejection captured with value: ${String(
                            e
                        )}`,
                    },
                ],
            },
        };
    }
    function Zv(e, t, n, a) {
        const r =
            /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;
        let i = ac(e) ? e.message : e,
            o = "Error";
        const s = i.match(r);
        return (
            s && ((o = s[1]), (i = s[2])),
            xh({ exception: { values: [{ type: o, value: i }] } }, t, n, a)
        );
    }
    function xh(e, t, n, a) {
        const r = (e.exception = e.exception || {}),
            i = (r.values = r.values || []),
            o = (i[0] = i[0] || {}),
            s = (o.stacktrace = o.stacktrace || {}),
            l = (s.frames = s.frames || []),
            u = isNaN(parseInt(a, 10)) ? void 0 : a,
            m = isNaN(parseInt(n, 10)) ? void 0 : n,
            p = ln(t) && t.length > 0 ? t : Ry();
        return (
            l.length === 0 &&
                l.push({
                    colno: u,
                    filename: p,
                    function: "?",
                    in_app: !0,
                    lineno: m,
                }),
            e
        );
    }
    function ew(e) {
        (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
            z.log(`Global Handler attached: ${e}`);
    }
    function Sh(e, t, n, a) {
        Qn(n, { handled: !1, type: a }),
            e.captureEvent(n, { originalException: t });
    }
    function Eh() {
        const e = ee(),
            t = e.getClient(),
            n = (t && t.getOptions()) || {
                stackParser: () => [],
                attachStacktrace: !1,
            };
        return [e, n.stackParser, n.attachStacktrace];
    }
    const tw = [
        "EventTarget",
        "Window",
        "Node",
        "ApplicationCache",
        "AudioTrackList",
        "BroadcastChannel",
        "ChannelMergerNode",
        "CryptoOperation",
        "EventSource",
        "FileReader",
        "HTMLUnknownElement",
        "IDBDatabase",
        "IDBRequest",
        "IDBTransaction",
        "KeyOperation",
        "MediaController",
        "MessagePort",
        "ModalWindow",
        "Notification",
        "SVGElementInstance",
        "Screen",
        "SharedWorker",
        "TextTrack",
        "TextTrackCue",
        "TextTrackList",
        "WebSocket",
        "WebSocketWorker",
        "Worker",
        "XMLHttpRequest",
        "XMLHttpRequestEventTarget",
        "XMLHttpRequestUpload",
    ];
    class to {
        static __initStatic() {
            this.id = "TryCatch";
        }
        constructor(t) {
            (this.name = to.id),
                (this._options = {
                    XMLHttpRequest: !0,
                    eventTarget: !0,
                    requestAnimationFrame: !0,
                    setInterval: !0,
                    setTimeout: !0,
                    ...t,
                });
        }
        setupOnce() {
            this._options.setTimeout && me(L, "setTimeout", Ch),
                this._options.setInterval && me(L, "setInterval", Ch),
                this._options.requestAnimationFrame &&
                    me(L, "requestAnimationFrame", nw),
                this._options.XMLHttpRequest &&
                    "XMLHttpRequest" in L &&
                    me(XMLHttpRequest.prototype, "send", aw);
            const t = this._options.eventTarget;
            t && (Array.isArray(t) ? t : tw).forEach(rw);
        }
    }
    to.__initStatic();
    function Ch(e) {
        return function (...t) {
            const n = t[0];
            return (
                (t[0] = Zn(n, {
                    mechanism: {
                        data: { function: Ut(e) },
                        handled: !1,
                        type: "instrument",
                    },
                })),
                e.apply(this, t)
            );
        };
    }
    function nw(e) {
        return function (t) {
            return e.apply(this, [
                Zn(t, {
                    mechanism: {
                        data: {
                            function: "requestAnimationFrame",
                            handler: Ut(e),
                        },
                        handled: !1,
                        type: "instrument",
                    },
                }),
            ]);
        };
    }
    function aw(e) {
        return function (...t) {
            const n = this;
            return (
                [
                    "onload",
                    "onerror",
                    "onprogress",
                    "onreadystatechange",
                ].forEach((r) => {
                    r in n &&
                        typeof n[r] == "function" &&
                        me(n, r, function (i) {
                            const o = {
                                    mechanism: {
                                        data: { function: r, handler: Ut(i) },
                                        handled: !1,
                                        type: "instrument",
                                    },
                                },
                                s = cc(i);
                            return (
                                s && (o.mechanism.data.handler = Ut(s)),
                                Zn(i, o)
                            );
                        });
                }),
                e.apply(this, t)
            );
        };
    }
    function rw(e) {
        const t = L,
            n = t[e] && t[e].prototype;
        !n ||
            !n.hasOwnProperty ||
            !n.hasOwnProperty("addEventListener") ||
            (me(n, "addEventListener", function (a) {
                return function (r, i, o) {
                    try {
                        typeof i.handleEvent == "function" &&
                            (i.handleEvent = Zn(i.handleEvent, {
                                mechanism: {
                                    data: {
                                        function: "handleEvent",
                                        handler: Ut(i),
                                        target: e,
                                    },
                                    handled: !1,
                                    type: "instrument",
                                },
                            }));
                    } catch {}
                    return a.apply(this, [
                        r,
                        Zn(i, {
                            mechanism: {
                                data: {
                                    function: "addEventListener",
                                    handler: Ut(i),
                                    target: e,
                                },
                                handled: !1,
                                type: "instrument",
                            },
                        }),
                        o,
                    ]);
                };
            }),
            me(n, "removeEventListener", function (a) {
                return function (r, i, o) {
                    const s = i;
                    try {
                        const l = s && s.__sentry_wrapped__;
                        l && a.call(this, r, l, o);
                    } catch {}
                    return a.call(this, r, s, o);
                };
            }));
    }
    const no = 1024;
    class ao {
        static __initStatic() {
            this.id = "Breadcrumbs";
        }
        constructor(t) {
            (this.name = ao.id),
                (this.options = {
                    console: !0,
                    dom: !0,
                    fetch: !0,
                    history: !0,
                    sentry: !0,
                    xhr: !0,
                    ...t,
                });
        }
        setupOnce() {
            if (
                (this.options.console && Bt("console", sw),
                this.options.dom && Bt("dom", ow(this.options.dom)),
                this.options.xhr && Bt("xhr", lw),
                this.options.fetch && Bt("fetch", cw),
                this.options.history && Bt("history", uw),
                this.options.sentry)
            ) {
                const t = ee().getClient();
                t && t.on && t.on("beforeSendEvent", iw);
            }
        }
    }
    ao.__initStatic();
    function iw(e) {
        ee().addBreadcrumb(
            {
                category: `sentry.${
                    e.type === "transaction" ? "transaction" : "event"
                }`,
                event_id: e.event_id,
                level: e.level,
                message: Ot(e),
            },
            { event: e }
        );
    }
    function ow(e) {
        function t(n) {
            let a,
                r = typeof e == "object" ? e.serializeAttribute : void 0,
                i =
                    typeof e == "object" && typeof e.maxStringLength == "number"
                        ? e.maxStringLength
                        : void 0;
            i &&
                i > no &&
                ((typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                    z.warn(
                        `\`dom.maxStringLength\` cannot exceed ${no}, but a value of ${i} was configured. Sentry will use ${no} instead.`
                    ),
                (i = no)),
                typeof r == "string" && (r = [r]);
            try {
                const o = n.event;
                a = dw(o)
                    ? oc(o.target, { keyAttrs: r, maxStringLength: i })
                    : oc(o, { keyAttrs: r, maxStringLength: i });
            } catch {
                a = "<unknown>";
            }
            a.length !== 0 &&
                ee().addBreadcrumb(
                    { category: `ui.${n.name}`, message: a },
                    { event: n.event, name: n.name, global: n.global }
                );
        }
        return t;
    }
    function sw(e) {
        const t = {
            category: "console",
            data: { arguments: e.args, logger: "console" },
            level: kk(e.level),
            message: Cp(e.args, " "),
        };
        if (e.level === "assert")
            if (e.args[0] === !1)
                (t.message = `Assertion failed: ${
                    Cp(e.args.slice(1), " ") || "console.assert"
                }`),
                    (t.data.arguments = e.args.slice(1));
            else return;
        ee().addBreadcrumb(t, { input: e.args, level: e.level });
    }
    function lw(e) {
        const { startTimestamp: t, endTimestamp: n } = e,
            a = e.xhr[pr];
        if (!t || !n || !a) return;
        const { method: r, url: i, status_code: o, body: s } = a,
            l = { method: r, url: i, status_code: o },
            u = { xhr: e.xhr, input: s, startTimestamp: t, endTimestamp: n };
        ee().addBreadcrumb({ category: "xhr", data: l, type: "http" }, u);
    }
    function cw(e) {
        const { startTimestamp: t, endTimestamp: n } = e;
        if (
            n &&
            !(
                e.fetchData.url.match(/sentry_key/) &&
                e.fetchData.method === "POST"
            )
        )
            if (e.error) {
                const a = e.fetchData,
                    r = {
                        data: e.error,
                        input: e.args,
                        startTimestamp: t,
                        endTimestamp: n,
                    };
                ee().addBreadcrumb(
                    {
                        category: "fetch",
                        data: a,
                        level: "error",
                        type: "http",
                    },
                    r
                );
            } else {
                const a = {
                        ...e.fetchData,
                        status_code: e.response && e.response.status,
                    },
                    r = {
                        input: e.args,
                        response: e.response,
                        startTimestamp: t,
                        endTimestamp: n,
                    };
                ee().addBreadcrumb(
                    { category: "fetch", data: a, type: "http" },
                    r
                );
            }
    }
    function uw(e) {
        let t = e.from,
            n = e.to;
        const a = bc(L.location.href);
        let r = bc(t);
        const i = bc(n);
        r.path || (r = a),
            a.protocol === i.protocol && a.host === i.host && (n = i.relative),
            a.protocol === r.protocol && a.host === r.host && (t = r.relative),
            ee().addBreadcrumb({
                category: "navigation",
                data: { from: t, to: n },
            });
    }
    function dw(e) {
        return !!e && !!e.target;
    }
    const mw = "cause",
        pw = 5;
    class ro {
        static __initStatic() {
            this.id = "LinkedErrors";
        }
        constructor(t = {}) {
            (this.name = ro.id),
                (this._key = t.key || mw),
                (this._limit = t.limit || pw);
        }
        setupOnce() {}
        preprocessEvent(t, n, a) {
            const r = a.getOptions();
            Iy(
                vh,
                r.stackParser,
                r.maxValueLength,
                this._key,
                this._limit,
                t,
                n
            );
        }
    }
    ro.__initStatic();
    class yr {
        static __initStatic() {
            this.id = "HttpContext";
        }
        constructor() {
            this.name = yr.id;
        }
        setupOnce() {
            th((t) => {
                if (ee().getIntegration(yr)) {
                    if (!L.navigator && !L.location && !L.document) return t;
                    const n =
                            (t.request && t.request.url) ||
                            (L.location && L.location.href),
                        { referrer: a } = L.document || {},
                        { userAgent: r } = L.navigator || {},
                        i = {
                            ...(t.request && t.request.headers),
                            ...(a && { Referer: a }),
                            ...(r && { "User-Agent": r }),
                        },
                        o = { ...t.request, ...(n && { url: n }), headers: i };
                    return { ...t, request: o };
                }
                return t;
            });
        }
    }
    yr.__initStatic();
    class kr {
        static __initStatic() {
            this.id = "Dedupe";
        }
        constructor() {
            this.name = kr.id;
        }
        setupOnce(t, n) {
            const a = (r) => {
                if (r.type) return r;
                const i = n().getIntegration(kr);
                if (i) {
                    try {
                        if (hw(r, i._previousEvent))
                            return (
                                (typeof __SENTRY_DEBUG__ > "u" ||
                                    __SENTRY_DEBUG__) &&
                                    z.warn(
                                        "Event dropped due to being a duplicate of previously captured event."
                                    ),
                                null
                            );
                    } catch {
                        return (i._previousEvent = r);
                    }
                    return (i._previousEvent = r);
                }
                return r;
            };
            (a.id = this.name), t(a);
        }
    }
    kr.__initStatic();
    function hw(e, t) {
        return t ? !!(fw(e, t) || gw(e, t)) : !1;
    }
    function fw(e, t) {
        const n = e.message,
            a = t.message;
        return !(
            (!n && !a) ||
            (n && !a) ||
            (!n && a) ||
            n !== a ||
            !jh(e, t) ||
            !$h(e, t)
        );
    }
    function gw(e, t) {
        const n = Ph(t),
            a = Ph(e);
        return !(
            !n ||
            !a ||
            n.type !== a.type ||
            n.value !== a.value ||
            !jh(e, t) ||
            !$h(e, t)
        );
    }
    function $h(e, t) {
        let n = _h(e),
            a = _h(t);
        if (!n && !a) return !0;
        if ((n && !a) || (!n && a) || ((n = n), (a = a), a.length !== n.length))
            return !1;
        for (let r = 0; r < a.length; r++) {
            const i = a[r],
                o = n[r];
            if (
                i.filename !== o.filename ||
                i.lineno !== o.lineno ||
                i.colno !== o.colno ||
                i.function !== o.function
            )
                return !1;
        }
        return !0;
    }
    function jh(e, t) {
        let n = e.fingerprint,
            a = t.fingerprint;
        if (!n && !a) return !0;
        if ((n && !a) || (!n && a)) return !1;
        (n = n), (a = a);
        try {
            return n.join("") === a.join("");
        } catch {
            return !1;
        }
    }
    function Ph(e) {
        return e.exception && e.exception.values && e.exception.values[0];
    }
    function _h(e) {
        const t = e.exception;
        if (t)
            try {
                return t.values[0].stacktrace.frames;
            } catch {
                return;
            }
    }
    const bw = [
        new gr(),
        new Xi(),
        new to(),
        new ao(),
        new ea(),
        new ro(),
        new kr(),
        new yr(),
    ];
    function yw(e = {}) {
        e.defaultIntegrations === void 0 && (e.defaultIntegrations = bw),
            e.release === void 0 &&
                (typeof __SENTRY_RELEASE__ == "string" &&
                    (e.release = __SENTRY_RELEASE__),
                L.SENTRY_RELEASE &&
                    L.SENTRY_RELEASE.id &&
                    (e.release = L.SENTRY_RELEASE.id)),
            e.autoSessionTracking === void 0 && (e.autoSessionTracking = !0),
            e.sendClientReports === void 0 && (e.sendClientReports = !0);
        const t = {
            ...e,
            stackParser: Wy(e.stackParser || Kv),
            integrations: Qk(e),
            transport: e.transport || (Up() ? Mv : Lv),
        };
        cv(zv, t), e.autoSessionTracking && kw();
    }
    function Nh(e = {}, t = ee()) {
        if (!L.document) {
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                z.error("Global document not defined in showReportDialog call");
            return;
        }
        const { client: n, scope: a } = t.getStackTop(),
            r = e.dsn || (n && n.getDsn());
        if (!r) {
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                z.error("DSN not configured for showReportDialog call");
            return;
        }
        a && (e.user = { ...a.getUser(), ...e.user }),
            e.eventId || (e.eventId = t.lastEventId());
        const i = L.document.createElement("script");
        (i.async = !0),
            (i.crossOrigin = "anonymous"),
            (i.src = Wk(r, e)),
            e.onLoad && (i.onload = e.onLoad);
        const o = L.document.head || L.document.body;
        o
            ? o.appendChild(i)
            : (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
              z.error(
                  "Not injecting report dialog. No injection point found in HTML"
              );
    }
    function Th(e) {
        e.startSession({ ignoreDuration: !0 }), e.captureSession();
    }
    function kw() {
        if (typeof L.document > "u") {
            (typeof __SENTRY_DEBUG__ > "u" || __SENTRY_DEBUG__) &&
                z.warn(
                    "Session tracking in non-browser environment with @sentry/browser is not supported."
                );
            return;
        }
        const e = ee();
        e.captureSession &&
            (Th(e),
            Bt("history", ({ from: t, to: n }) => {
                t === void 0 || t === n || Th(ee());
            }));
    }
    function vw(e) {
        (e._metadata = e._metadata || {}),
            (e._metadata.sdk = e._metadata.sdk || {
                name: "sentry.javascript.react",
                packages: [{ name: "npm:@sentry/react", version: Qi }],
                version: Qi,
            }),
            yw(e);
    }
    var Ih = { exports: {} },
        Y = {};
    /** @license React v16.13.1
     * react-is.production.min.js
     *
     * Copyright (c) Facebook, Inc. and its affiliates.
     *
     * This source code is licensed under the MIT license found in the
     * LICENSE file in the root directory of this source tree.
     */ var se = typeof Symbol == "function" && Symbol.for,
        _c = se ? Symbol.for("react.element") : 60103,
        Nc = se ? Symbol.for("react.portal") : 60106,
        io = se ? Symbol.for("react.fragment") : 60107,
        oo = se ? Symbol.for("react.strict_mode") : 60108,
        so = se ? Symbol.for("react.profiler") : 60114,
        lo = se ? Symbol.for("react.provider") : 60109,
        co = se ? Symbol.for("react.context") : 60110,
        Tc = se ? Symbol.for("react.async_mode") : 60111,
        uo = se ? Symbol.for("react.concurrent_mode") : 60111,
        mo = se ? Symbol.for("react.forward_ref") : 60112,
        po = se ? Symbol.for("react.suspense") : 60113,
        ww = se ? Symbol.for("react.suspense_list") : 60120,
        ho = se ? Symbol.for("react.memo") : 60115,
        fo = se ? Symbol.for("react.lazy") : 60116,
        xw = se ? Symbol.for("react.block") : 60121,
        Sw = se ? Symbol.for("react.fundamental") : 60117,
        Ew = se ? Symbol.for("react.responder") : 60118,
        Cw = se ? Symbol.for("react.scope") : 60119;
    function Ie(e) {
        if (typeof e == "object" && e !== null) {
            var t = e.$$typeof;
            switch (t) {
                case _c:
                    switch (((e = e.type), e)) {
                        case Tc:
                        case uo:
                        case io:
                        case so:
                        case oo:
                        case po:
                            return e;
                        default:
                            switch (((e = e && e.$$typeof), e)) {
                                case co:
                                case mo:
                                case fo:
                                case ho:
                                case lo:
                                    return e;
                                default:
                                    return t;
                            }
                    }
                case Nc:
                    return t;
            }
        }
    }
    function zh(e) {
        return Ie(e) === uo;
    }
    (Y.AsyncMode = Tc),
        (Y.ConcurrentMode = uo),
        (Y.ContextConsumer = co),
        (Y.ContextProvider = lo),
        (Y.Element = _c),
        (Y.ForwardRef = mo),
        (Y.Fragment = io),
        (Y.Lazy = fo),
        (Y.Memo = ho),
        (Y.Portal = Nc),
        (Y.Profiler = so),
        (Y.StrictMode = oo),
        (Y.Suspense = po),
        (Y.isAsyncMode = function (e) {
            return zh(e) || Ie(e) === Tc;
        }),
        (Y.isConcurrentMode = zh),
        (Y.isContextConsumer = function (e) {
            return Ie(e) === co;
        }),
        (Y.isContextProvider = function (e) {
            return Ie(e) === lo;
        }),
        (Y.isElement = function (e) {
            return typeof e == "object" && e !== null && e.$$typeof === _c;
        }),
        (Y.isForwardRef = function (e) {
            return Ie(e) === mo;
        }),
        (Y.isFragment = function (e) {
            return Ie(e) === io;
        }),
        (Y.isLazy = function (e) {
            return Ie(e) === fo;
        }),
        (Y.isMemo = function (e) {
            return Ie(e) === ho;
        }),
        (Y.isPortal = function (e) {
            return Ie(e) === Nc;
        }),
        (Y.isProfiler = function (e) {
            return Ie(e) === so;
        }),
        (Y.isStrictMode = function (e) {
            return Ie(e) === oo;
        }),
        (Y.isSuspense = function (e) {
            return Ie(e) === po;
        }),
        (Y.isValidElementType = function (e) {
            return (
                typeof e == "string" ||
                typeof e == "function" ||
                e === io ||
                e === uo ||
                e === so ||
                e === oo ||
                e === po ||
                e === ww ||
                (typeof e == "object" &&
                    e !== null &&
                    (e.$$typeof === fo ||
                        e.$$typeof === ho ||
                        e.$$typeof === lo ||
                        e.$$typeof === co ||
                        e.$$typeof === mo ||
                        e.$$typeof === Sw ||
                        e.$$typeof === Ew ||
                        e.$$typeof === Cw ||
                        e.$$typeof === xw))
            );
        }),
        (Y.typeOf = Ie),
        (Ih.exports = Y);
    var $w = Ih.exports,
        Ah = $w,
        jw = {
            $$typeof: !0,
            render: !0,
            defaultProps: !0,
            displayName: !0,
            propTypes: !0,
        },
        Pw = {
            $$typeof: !0,
            compare: !0,
            defaultProps: !0,
            displayName: !0,
            propTypes: !0,
            type: !0,
        },
        Dh = {};
    (Dh[Ah.ForwardRef] = jw), (Dh[Ah.Memo] = Pw);
    function _w(e) {
        const t = e.match(/^([^.]+)/);
        return t !== null && parseInt(t[0]) >= 17;
    }
    const Mh = { componentStack: null, error: null, eventId: null };
    function Nw(e, t) {
        const n = new WeakMap();
        function a(r, i) {
            if (!n.has(r)) {
                if (r.cause) return n.set(r, !0), a(r.cause, i);
                r.cause = i;
            }
        }
        a(e, t);
    }
    class Ic extends k.Component {
        constructor(t) {
            super(t),
                Ic.prototype.__init.call(this),
                (this.state = Mh),
                (this._openFallbackReportDialog = !0);
            const n = ee().getClient();
            n &&
                n.on &&
                t.showDialog &&
                ((this._openFallbackReportDialog = !1),
                n.on("afterSendEvent", (a) => {
                    !a.type &&
                        a.event_id === this._lastEventId &&
                        Nh({ ...t.dialogOptions, eventId: this._lastEventId });
                }));
        }
        componentDidCatch(t, { componentStack: n }) {
            const {
                beforeCapture: a,
                onError: r,
                showDialog: i,
                dialogOptions: o,
            } = this.props;
            lh((s) => {
                if (_w(k.version) && nc(t)) {
                    const u = new Error(t.message);
                    (u.name = `React ErrorBoundary ${u.name}`),
                        (u.stack = n),
                        Nw(t, u);
                }
                a && a(s, t, n),
                    s.addEventProcessor((u) => (Qn(u, { handled: !1 }), u));
                const l = sh(t, { contexts: { react: { componentStack: n } } });
                r && r(t, n, l),
                    i &&
                        ((this._lastEventId = l),
                        this._openFallbackReportDialog &&
                            Nh({ ...o, eventId: l })),
                    this.setState({ error: t, componentStack: n, eventId: l });
            });
        }
        componentDidMount() {
            const { onMount: t } = this.props;
            t && t();
        }
        componentWillUnmount() {
            const { error: t, componentStack: n, eventId: a } = this.state,
                { onUnmount: r } = this.props;
            r && r(t, n, a);
        }
        __init() {
            this.resetErrorBoundary = () => {
                const { onReset: t } = this.props,
                    { error: n, componentStack: a, eventId: r } = this.state;
                t && t(n, a, r), this.setState(Mh);
            };
        }
        render() {
            const { fallback: t, children: n } = this.props,
                a = this.state;
            if (a.error) {
                let r;
                return (
                    typeof t == "function"
                        ? (r = t({
                              error: a.error,
                              componentStack: a.componentStack,
                              resetError: this.resetErrorBoundary,
                              eventId: a.eventId,
                          }))
                        : (r = t),
                    k.isValidElement(r)
                        ? r
                        : (t &&
                              (typeof __SENTRY_DEBUG__ > "u" ||
                                  __SENTRY_DEBUG__) &&
                              z.warn(
                                  "fallback did not produce a valid ReactElement"
                              ),
                          null)
                );
            }
            return typeof n == "function" ? n() : n;
        }
    }
    class zc extends k.Component {
        constructor() {
            super(...arguments);
            J(this, "handleLoad", () => {
                this.setupFrameBaseStyle();
            });
        }
        componentDidMount() {
            this.node.addEventListener("load", this.handleLoad);
        }
        componentWillUnmout() {
            this.node.removeEventListener("load", this.handleLoad);
        }
        setupFrameBaseStyle() {
            this.node.contentDocument &&
                ((this.iframeHtml = this.node.contentDocument.documentElement),
                (this.iframeHead = this.node.contentDocument.head),
                (this.iframeRoot = this.node.contentDocument.body),
                this.forceUpdate());
        }
        render() {
            const {
                children: n,
                head: a,
                title: r = "",
                style: i = {},
                dataTestId: o = "",
                ...s
            } = this.props;
            return c.jsxs("iframe", {
                srcDoc: "<!DOCTYPE html>",
                "data-testid": o,
                ref: (l) => (this.node = l),
                title: r,
                style: i,
                frameBorder: "0",
                ...s,
                children: [
                    this.iframeHead && tc.createPortal(a, this.iframeHead),
                    this.iframeRoot && tc.createPortal(n, this.iframeRoot),
                ],
            });
        }
    }
    const Ac = (e) =>
            k.createElement(
                "svg",
                {
                    id: "Regular",
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    ...e,
                },
                k.createElement(
                    "defs",
                    null,
                    k.createElement(
                        "style",
                        null,
                        ".cls-1{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:0.8px;}"
                    )
                ),
                k.createElement("circle", {
                    className: "cls-1",
                    cx: 12,
                    cy: 9.75,
                    r: 5.25,
                }),
                k.createElement("path", {
                    className: "cls-1",
                    d: "M18.913,20.876a9.746,9.746,0,0,0-13.826,0",
                }),
                k.createElement("circle", {
                    className: "cls-1",
                    cx: 12,
                    cy: 12,
                    r: 11.25,
                })
            ),
        Rh = `
    .gh-portal-avatar {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        margin: 0 0 8px 0;
        border-radius: 999px;
    }

    .gh-portal-avatar img {
        position: absolute;
        display: block;
        top: -2px;
        right: -2px;
        bottom: -2px;
        left: -2px;
        width: calc(100% + 4px);
        height: calc(100% + 4px);
        opacity: 1;
        max-width: unset;
    }
`,
        Tw = ({ style: e = {} }) => ({
            avatarContainer: { ...(e.avatarContainer || {}) },
            gravatar: { ...(e.avatarContainer || {}) },
            userIcon: {
                width: "34px",
                height: "34px",
                color: "#fff",
                ...(e.userIcon || {}),
            },
        });
    function Dc({ gravatar: e, style: t }) {
        let n = Tw({ style: t });
        return c.jsxs("figure", {
            className: "gh-portal-avatar",
            style: n.avatarContainer,
            children: [
                c.jsx(Ac, { style: n.userIcon }),
                e ? c.jsx("img", { style: n.gravatar, src: e, alt: "" }) : null,
            ],
        });
    }
    const _ = R.createContext({
            site: {},
            member: {},
            action: "",
            lastPage: "",
            brandColor: "",
            pageData: {},
            onAction: (e, t) => ({ action: e, data: t }),
        }),
        Iw = (e) =>
            k.createElement(
                "svg",
                {
                    width: 21,
                    height: 24,
                    viewBox: "0 0 21 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                },
                k.createElement("path", {
                    d: "M10.533 11.267c2.835 0 5.134-2.299 5.134-5.134C15.667 3.298 13.368 1 10.533 1 7.698 1 5.4 3.298 5.4 6.133s2.298 5.134 5.133 5.134zM1 23c0-2.529 1.004-4.953 2.792-6.741 1.788-1.788 4.213-2.792 6.741-2.792 2.529 0 4.954 1.004 6.741 2.792 1.788 1.788 2.793 4.212 2.793 6.74",
                    stroke: "#fff",
                    strokeWidth: 1.5,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                })
            ),
        zw = (e) =>
            k.createElement(
                "svg",
                {
                    width: 24,
                    height: 24,
                    viewBox: "0 0 24 24",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                },
                k.createElement(
                    "g",
                    { fill: "none", fillRule: "evenodd" },
                    k.createElement("path", {
                        stroke: "#FFF",
                        strokeWidth: 1.5,
                        strokeLinecap: "round",
                        d: "M12.5 2v20M2 12.5h20",
                    })
                )
            ),
        Aw = (e) =>
            k.createElement(
                "svg",
                {
                    width: 25,
                    height: 24,
                    viewBox: "0 0 25 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                },
                k.createElement("path", {
                    d: "M23.5 6v14.25c0 .597-.237 1.169-.659 1.591-.422.422-.994.659-1.591.659s-1.169-.237-1.591-.659c-.422-.422-.659-.994-.659-1.591V3c0-.398-.158-.78-.44-1.06-.28-.282-.662-.44-1.06-.44h-15c-.398 0-.78.158-1.06.44C1.157 2.22 1 2.601 1 3v17.25c0 .597.237 1.169.659 1.591.422.422.994.659 1.591.659h18M4.75 15h10.5M4.75 18h6",
                    stroke: "#fff",
                    strokeWidth: 1.5,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                }),
                k.createElement("path", {
                    d: "M14.5 5.25h-9c-.414 0-.75.336-.75.75v4.5c0 .414.336.75.75.75h9c.414 0 .75-.336.75-.75V6c0-.414-.336-.75-.75-.75z",
                    stroke: "#fff",
                    strokeWidth: 1.5,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                })
            ),
        Dw = (e) =>
            k.createElement(
                "svg",
                {
                    width: 24,
                    height: 18,
                    viewBox: "0 0 24 18",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                },
                k.createElement("path", {
                    d: "M21.75 1.5H2.25c-.828 0-1.5.672-1.5 1.5v12c0 .828.672 1.5 1.5 1.5h19.5c.828 0 1.5-.672 1.5-1.5V3c0-.828-.672-1.5-1.5-1.5zM15.687 6.975L19.5 10.5M8.313 6.975L4.5 10.5",
                    stroke: "#fff",
                    strokeWidth: 1.5,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                }),
                k.createElement("path", {
                    d: "M22.88 2.014l-9.513 6.56C12.965 8.851 12.488 9 12 9s-.965-.149-1.367-.426L1.12 2.014",
                    stroke: "#fff",
                    strokeWidth: 1.5,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                })
            ),
        Mw = (e) =>
            k.createElement(
                "svg",
                {
                    width: 26,
                    height: 26,
                    viewBox: "0 0 26 26",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                },
                k.createElement("path", {
                    d: "M17.903 12.016c-.332-1.665-1.491-3.032-3.031-3.654M11.037 8.4C9.252 9.163 8 10.935 8 13c0 .432.055.85.158 1.25M10.44 17.296c.748.447 1.624.704 2.56.704 1.71 0 3.22-.858 4.12-2.167M15.171 21.22c3.643-.96 6.329-4.276 6.329-8.22 0-1.084-.203-2.121-.573-3.075M18.611 6.615C17.114 5.3 15.151 4.5 13 4.5c-2.149 0-4.112.797-5.608 2.113M5.112 9.826c-.395.98-.612 2.052-.612 3.174 0 4.015 2.783 7.38 6.526 8.27",
                    stroke: "#fff",
                    strokeWidth: 1.5,
                    strokeLinecap: "round",
                }),
                k.createElement("path", {
                    d: "M8.924 24.29c1.273.46 2.645.71 4.076.71 5.52 0 10.17-3.727 11.57-8.803M6.712 2.777C3.285 4.89 1 8.678 1 13c0 3.545 1.537 6.731 3.982 8.928M24.849 11.089C23.933 5.369 18.977 1 13 1c-.69 0-1.367.058-2.025.17",
                    stroke: "#fff",
                    strokeWidth: 1.5,
                    strokeLinecap: "round",
                })
            ),
        Mc = `
    /* Colors
    /* ----------------------------------------------------- */
    :root {
        --black: #000;
        --blackrgb: 0,0,0;
        --grey0: #1d1d1d;
        --grey1: #333;
        --grey1rgb: 33, 33, 33;
        --grey2: #3d3d3d;
        --grey3: #474747;
        --grey4: #515151;
        --grey5: #686868;
        --grey6: #7f7f7f;
        --grey7: #979797;
        --grey8: #aeaeae;
        --grey9: #c5c5c5;
        --grey10: #dcdcdc;
        --grey11: #e1e1e1;
        --grey12: #eaeaea;
        --grey13: #f9f9f9;
        --grey13rgb: 249,249,249;
        --grey14: #fbfbfb;
        --white: #fff;
        --whitergb: 255,255,255;
        --red: #f02525;
        --darkerRed: #C50202;
        --yellow: #FFDC15;
        --green: #7FC724;
    }

    /* Globals
    /* ----------------------------------------------------- */
    html {
        font-size: 62.5%;
        height: 100%;
    }

    body {
        margin: 0px;
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
        font-size: 1.6rem;
        height: 100%;
        line-height: 1.6em;
        font-weight: 400;
        font-style: normal;
        color: var(--grey2);
        box-sizing: border-box;
        overflow: hidden;
    }

    button,
    button span {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
    }

    *, ::after, ::before {
        box-sizing: border-box;
    }

    h1, h2, h3, h4, h5, h6, p {
        line-height: 1.15em;
        padding: 0;
        margin: 0;
    }

    h1 {
        font-size: 35px;
        font-weight: 700;
        letter-spacing: -0.022em;
    }

    h2 {
        font-size: 32px;
        font-weight: 700;
        letter-spacing: -0.021em;
    }

    h3 {
        font-size: 24px;
        font-weight: 700;
        letter-spacing: -0.019em;
    }

    h4 {
        font-size: 19px;
        font-weight: 700;
        letter-spacing: -0.02em;
    }

    h5 {
        font-size: 15px;
        font-weight: 700;
        letter-spacing: -0.02em;
    }

    p {
        font-size: 15px;
        line-height: 1.5em;
        margin-bottom: 24px;
    }

    strong {
        font-weight: 600;
    }

    a,
    .gh-portal-link {
        cursor: pointer;
    }

    p a {
        font-weight: 500;
        color: var(--brandcolor);
        text-decoration: none;
    }

    svg {
        box-sizing: content-box;
    }

    input,
    textarea {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
        font-size: 1.5rem;
    }

    textarea {
        padding: 10px;
        line-height: 1.5em;
    }

    .gh-longform {
        padding: 56px 6vmin 6vmin;
    }

    .gh-longform p {
        color: var(--grey3);
        margin-bottom: 1.2em;
    }

    .gh-longform p:last-of-type {
        margin-bottom: 0.2em;
    }

    .gh-longform h3 {
        font-size: 27px;
        margin-top: 0px;
        margin-bottom: 0.25em;
    }

    .gh-longform h4 {
        font-size: 17.5px;
        margin-top: 1.85em;
        margin-bottom: 0.4em;
    }

    .gh-longform h5 {
        margin-top: 0.8em;
        margin-bottom: 0.2em;
    }

    .gh-longform a {
        color: var(--brandcolor);
        font-weight: 500;
    }

    .gh-longform strong {
        color: var(--grey1);
    }

    .gh-longform .ul {
        text-decoration: underline;
    }

    .gh-longform .gh-portal-btn {
        width: calc(100% + 4vmin);
        margin-top: 4rem;
        margin-right: -4vmin;
    }

    .gh-longform .gh-portal-btn-text {
        color: var(--brandcolor);
        cursor: pointer;
        background: none;
        transition: color linear 100ms;
        font-size: 1.45rem;
        text-decoration: underline;
    }

    @media (max-width: 1440px) {
        h1 {
            font-size: 32px;
            letter-spacing: -0.022em;
        }

        h2 {
            font-size: 28px;
            letter-spacing: -0.021em;
        }

        h3 {
            font-size: 26px;
            letter-spacing: -0.02em;
        }
    }

    @media (max-width: 480px) {
        h1 {
            font-size: 30px;
            letter-spacing: -0.021em;
        }

        h2 {
            font-size: 26px;
            letter-spacing: -0.02em;
        }

        h3 {
            font-size: 24px;
            letter-spacing: -0.019em;
        }

        .gh-longform {
            padding: 10vmin 28px;
        }

        .gh-desktop-only {
            display: none;
        }
    }

    @media (min-width: 481px) {
        .gh-mobile-only {
            display: none;
        }
    }
`,
        Rw =
            Mc +
            `
    .gh-portal-triggerbtn-wrapper {
        display: inline-flex;
        align-items: flex-start;
        justify-content: flex-end;
        height: 100%;
        opacity: 1;
        transition: transform 0.16s linear 0s; opacity 0.08s linear 0s;
        user-select: none;
        line-height: 1;
        padding: 10px 28px 0 17px;
    }
    
    .gh-portal-triggerbtn-wrapper span {
        margin-bottom: 1px;
    }
    
    .gh-portal-triggerbtn-container {
        position: relative;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        background: var(--brandcolor);
        height: 60px;
        min-width: 60px;
        box-shadow: rgba(0, 0, 0, 0.24) 0px 8px 16px -2px;
        border-radius: 999px;
        transition: opacity 0.3s ease;
    }

    .gh-portal-triggerbtn-container:before {
        position: absolute;
        content: "";
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        border-radius: 999px;
        background: rgba(var(--whitergb), 0);
        transition: background 0.3s ease;
    }

    .gh-portal-triggerbtn-container:hover:before {
        background: rgba(var(--whitergb), 0.08);
    }

    .gh-portal-triggerbtn-container.halo:before {
        top: -4px;
        right: -4px;
        bottom: -4px;
        left: -4px;
        border: 4px solid rgba(var(--whitergb), 0.15);
    }

    .gh-portal-triggerbtn-container.with-label {
        padding: 0 12px 0 16px;
    }

    .gh-portal-triggerbtn-label {
        padding: 8px;
        color: var(--white);
        display: block;
        white-space: nowrap;
        max-width: 380px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .gh-portal-avatar {
        margin-bottom: 0px !important;
        width: 60px;
        height: 60px;
    }
` +
            Rh,
        yt = (e) => {
            if (!e) return "";
            const t = new Date(e),
                n = { year: "numeric", month: "short", day: "numeric" };
            return t.toLocaleDateString("en-GB", n);
        };
    function Rc() {
        const [e] = window.location.hash.substr(1).split("?");
        e &&
            /^\/portal\/?(?:\/(\w+(?:\/\w+)*))?\/?$/.test(e) &&
            window.history.pushState(
                "",
                document.title,
                window.location.pathname + window.location.search
            );
    }
    function Lw({ page: e }) {
        const t = { signin: "#/portal/signin", signup: "#/portal/signup" };
        return Object.keys(t).includes(e) ? t[e] : t.default;
    }
    function Lh({ page: e, siteUrl: t }) {
        const n =
                t ||
                `${window.location.protocol}//${window.location.host}${window.location.pathname}`,
            a = Lw({ page: e });
        return `${n}${a}`;
    }
    function ta() {
        return !(navigator && navigator.cookieEnabled);
    }
    function Yw({ event: e }) {
        var r, i, o, s;
        const n = (
            ((s =
                (o =
                    (i =
                        (r = e == null ? void 0 : e.exception) == null
                            ? void 0
                            : r.values) == null
                        ? void 0
                        : i[0]) == null
                    ? void 0
                    : o.stacktrace) == null
                ? void 0
                : s.frames) || []
        )
            .map((l) => l.filename)
            .filter((l) => !!l);
        return (n[n.length - 1] || "").includes("@tryghost/portal");
    }
    function ze({ member: e = {} }) {
        if (it({ member: e })) {
            const n = (e.subscriptions || []).find((a) =>
                ["active", "trialing", "unpaid", "past_due"].includes(a.status)
            );
            return (
                !(n != null && n.price) &&
                    n != null &&
                    n.plan &&
                    (n.price = n.plan),
                n
            );
        }
        return null;
    }
    function Vt({ member: e = {} }) {
        if (!e) return !1;
        const t = ze({ member: e });
        if (t) {
            const { price: n } = t;
            return n && n.amount === 0;
        } else if (!t && e.paid) return !0;
        return !1;
    }
    function it({ member: e = {} }) {
        return e && e.paid;
    }
    function Uw({ product: e }) {
        return e != null && e.monthlyPrice ? e.monthlyPrice.currency : null;
    }
    function vr({ member: e }) {
        var t, n, a;
        return (
            ((a =
                (n =
                    (t = e == null ? void 0 : e.subscriptions) == null
                        ? void 0
                        : t[0]) == null
                    ? void 0
                    : n.tier) == null
                ? void 0
                : a.expiry_at) !== void 0
        );
    }
    function Lc({ member: e }) {
        var n;
        const t = ze({ member: e });
        return (n = t == null ? void 0 : t.tier) != null && n.expiry_at
            ? yt(t.tier.expiry_at)
            : "";
    }
    function Bw({ site: e, member: t }) {
        const n = mn({ member: t }),
            a = n == null ? void 0 : n.currency,
            r = bo({ site: e });
        return n != null && n.id
            ? r.filter((i) => $o(Uw({ product: i }), a))
            : r;
    }
    function Fw({ prices: e, currency: t }) {
        return e.filter((n) => $o(n.currency || "", t || ""));
    }
    function Yc({ subscription: e }) {
        var t, n;
        return e && e.price
            ? {
                  ...e.price,
                  stripe_price_id: e.price.id,
                  id: e.price.price_id,
                  price: e.price.amount / 100,
                  name: e.price.nickname,
                  tierId: (t = e.tier) == null ? void 0 : t.id,
                  cadence:
                      ((n = e.price) == null ? void 0 : n.interval) === "month"
                          ? "month"
                          : "year",
                  currency: e.price.currency.toLowerCase(),
                  currency_symbol: pe(e.price.currency),
              }
            : null;
    }
    function mn({ member: e }) {
        const t = ze({ member: e });
        return Yc({ subscription: t });
    }
    function Ow({ member: e, site: t }) {
        const n = ze({ member: e }),
            a = Yc({ subscription: n });
        return yo({ site: t }).find(
            (i) => i.id === (a == null ? void 0 : a.product.product_id)
        );
    }
    function Hw({ priceId: e, site: t, member: n }) {
        const a = mn({ member: n }),
            { tierId: r, cadence: i } = hn({ site: t, priceId: e });
        return (
            (a == null ? void 0 : a.tierId) === r &&
            (a == null ? void 0 : a.cadence) === i
        );
    }
    function Vw({ member: e, subscriptionId: t }) {
        return it({ member: e })
            ? (e.subscriptions || []).find((a) => a.id === t)
            : null;
    }
    function Yh({ member: e }) {
        var n;
        const t = ze({ member: e });
        return (
            ((n = t == null ? void 0 : t.tier) == null ? void 0 : n.name) || ""
        );
    }
    function wr({ plans: e, site: t = {} }) {
        return (
            (e = e || Co({ site: t })),
            !e || e.length === 0 || (e.length === 1 && e[0].type === "free")
        );
    }
    function Ww(e, t) {
        const a = bo({ site: e }).find((r) => r.type === "paid");
        return t === "monthly"
            ? { cadence: "month", tierId: a.id }
            : t === "yearly"
            ? { cadence: "year", tierId: a.id }
            : { priceId: t };
    }
    function qw({ site: e = {}, priceId: t }) {
        const n = Eo({ site: e });
        if (t === "free")
            return !n || n.length === 0 || n.find((a) => a.type === "free");
        if (n && n.length > 0 && t === "monthly") {
            const a = n.find((i) => i.name === "Monthly"),
                r = n.find((i) => i.interval === "month");
            return a || r;
        } else if (n && n.length > 0 && t === "yearly") {
            const a = n.find((i) => i.name === "Yearly"),
                r = n.find((i) => i.interval === "year");
            return a || r;
        } else if (n && n.length > 0 && t) return n.find((a) => a.id === t);
        return null;
    }
    function ot({ site: e = {}, pageQuery: t = "" }) {
        return (
            Co({ site: e, pageQuery: t }).length === 0 ||
            (e && e.members_signup_access === "invite")
        );
    }
    function Uh({ site: e }) {
        return (e == null ? void 0 : e.recommendations_enabled) === !0;
    }
    function pn({ site: e }) {
        return (
            (e == null ? void 0 : e.members_signup_access) === "all" ||
            (e == null ? void 0 : e.members_signup_access) === "invite"
        );
    }
    function Uc({ site: e }) {
        return (
            (e == null ? void 0 : e.members_signup_access) === "all" &&
            ((e == null ? void 0 : e.is_stripe_configured) || wr({ site: e }))
        );
    }
    function Bh() {
        return window.location.hostname.replace(/^www\./, "");
    }
    function go({ site: e }) {
        const { portal_products: t } = e || {};
        return !!t;
    }
    function Fh({ site: e }) {
        return (
            (e == null ? void 0 : e.comments_enabled) &&
            (e == null ? void 0 : e.comments_enabled) !== "off"
        );
    }
    function Gw({ site: e }) {
        var t, n, a, r, i, o;
        try {
            if (!e) return null;
            if (
                (e.tiers && (e.products = e.tiers),
                (e.products =
                    (t = e.products) == null
                        ? void 0
                        : t.map((s) => ({
                              ...s,
                              monthlyPrice: s.monthly_price,
                              yearlyPrice: s.yearly_price,
                          }))),
                (e.is_stripe_configured = !!e.paid_members_enabled),
                (e.members_signup_access = "all"),
                e.members_enabled || (e.members_signup_access = "none"),
                e.members_invite_only && (e.members_signup_access = "invite"),
                (e.allow_self_signup = !1),
                e.members_signup_access !== "all" && (e.allow_self_signup = !1),
                e.paid_members_enabled && (e.allow_self_signup = !0),
                (n = e.portal_plans) != null &&
                    n.includes("free") &&
                    (e.allow_self_signup = !0),
                (r = (a = e.products) == null ? void 0 : a[0]) != null &&
                    r.visibility)
            ) {
                e.portal_products = e.products
                    .filter((l) => l.visibility !== "none" && l.type === "paid")
                    .map((l) => l.id);
                const s = e.products.find((l) => l.type === "free");
                s &&
                    ((e.portal_plans =
                        (i = e.portal_plans) == null
                            ? void 0
                            : i.filter((l) => l !== "free")),
                    (s == null ? void 0 : s.visibility) === "public" &&
                        ((o = e.portal_plans) == null || o.push("free")));
            }
            return e;
        } catch (s) {
            console.warn("[Portal] Failed to read site data:", s);
        }
    }
    function bo({ site: e }) {
        const {
            portal_products: t,
            products: n = [],
            portal_plans: a = [],
        } = e || {};
        return !a.includes("monthly") && !a.includes("yearly")
            ? []
            : n
                  .filter((r) => !!r)
                  .filter((r) =>
                      e.is_stripe_configured ? !0 : r.type !== "paid"
                  )
                  .filter((r) => !!(r.monthlyPrice && r.yearlyPrice))
                  .filter(
                      (r) =>
                          Object.keys(r.monthlyPrice).length > 0 &&
                          Object.keys(r.yearlyPrice).length > 0
                  )
                  .filter((r) => (t && n.length > 1 ? t.includes(r.id) : !0))
                  .sort((r, i) => {
                      var o, s;
                      return (
                          ((o = r == null ? void 0 : r.monthlyPrice) == null
                              ? void 0
                              : o.amount) -
                          ((s = i == null ? void 0 : i.monthlyPrice) == null
                              ? void 0
                              : s.amount)
                      );
                  })
                  .map(
                      (r) => (
                          (r.monthlyPrice = {
                              ...r.monthlyPrice,
                              currency_symbol: pe(r.monthlyPrice.currency),
                          }),
                          (r.yearlyPrice = {
                              ...r.yearlyPrice,
                              currency_symbol: pe(r.yearlyPrice.currency),
                          }),
                          r
                      )
                  );
    }
    function na({ site: e }) {
        const { products: t = [] } = e || {};
        return t.find((n) => n.type === "free");
    }
    function yo({ site: e }) {
        const { products: t = [], portal_plans: n = [] } = e || {};
        return !n.includes("monthly") && !n.includes("yearly")
            ? []
            : t
                  .filter((a) => !!a)
                  .filter((a) => !!(a.monthlyPrice && a.yearlyPrice))
                  .filter(
                      (a) =>
                          Object.keys(a.monthlyPrice).length > 0 &&
                          Object.keys(a.yearlyPrice).length > 0
                  )
                  .sort((a, r) => {
                      var i, o;
                      return (
                          ((i = a == null ? void 0 : a.monthlyPrice) == null
                              ? void 0
                              : i.amount) -
                          ((o = r == null ? void 0 : r.monthlyPrice) == null
                              ? void 0
                              : o.amount)
                      );
                  })
                  .map(
                      (a) => (
                          (a.monthlyPrice = {
                              ...a.monthlyPrice,
                              currency_symbol: pe(a.monthlyPrice.currency),
                          }),
                          (a.yearlyPrice = {
                              ...a.yearlyPrice,
                              currency_symbol: pe(a.yearlyPrice.currency),
                          }),
                          a
                      )
                  );
    }
    function ko({ site: e, pageQuery: t }) {
        const n = bo({ site: e });
        return t === "free"
            ? []
            : (wo({ site: e }) && n.unshift({ id: "free" }), n);
    }
    function vo({ site: e, pageQuery: t }) {
        return ko({ site: e, pageQuery: t }).some(
            (a) => !!(a != null && a.trial_days)
        );
    }
    function Oh({ site: e }) {
        const t = na({ site: e });
        return (t == null ? void 0 : t.benefits) || [];
    }
    function Hh({ site: e }) {
        return So({ site: e }) ? "Free membership" : "Free";
    }
    function Vh({ site: e }) {
        const t = na({ site: e });
        return t == null ? void 0 : t.description;
    }
    function Kw({ site: e }) {
        var n;
        const t = na({ site: e });
        return !!(
            (t != null && t.description) ||
            ((n = t == null ? void 0 : t.benefits) != null && n.length)
        );
    }
    function aa({ site: e, productId: t }) {
        return yo({ site: e }).find((a) => a.id === t);
    }
    function Jw({ site: e = null, products: t = null }) {
        return !e && !t
            ? []
            : (t || bo({ site: e })).reduce(
                  (r, i) => (
                      i.monthlyPrice &&
                          i.yearlyPrice &&
                          (r.push(i.monthlyPrice), r.push(i.yearlyPrice)),
                      r
                  ),
                  []
              );
    }
    function wo({ site: e }) {
        const { allow_self_signup: t, portal_plans: n } = e || {};
        return t && n.includes("free");
    }
    function ra({ site: e }) {
        const { newsletters: t = [] } = e || {};
        return t == null || t.sort((n, a) => n.sort_order - a.sort_order), t;
    }
    function xo({ site: e }) {
        const { newsletters: t } = e || {};
        return (t == null ? void 0 : t.length) > 1;
    }
    function Wh({ member: e }) {
        var t;
        return (t = e == null ? void 0 : e.email_suppression) == null
            ? void 0
            : t.suppressed;
    }
    function So({ site: e }) {
        return ko({ site: e }).length === 1 && wo({ site: e });
    }
    function Bc({ sub: e } = {}) {
        return !!(
            e != null &&
            e.trial_end_at &&
            !qh(new Date(e == null ? void 0 : e.trial_end_at))
        );
    }
    function qh(e) {
        const t = new Date();
        return t.setHours(0, 0, 0, 0), e < t;
    }
    function Gh({ site: e, priceId: t }) {
        return t === "free"
            ? na({ site: e })
            : yo({ site: e }).find((a) => {
                  var r, i;
                  return (
                      ((r = a == null ? void 0 : a.monthlyPrice) == null
                          ? void 0
                          : r.id) === t ||
                      ((i = a == null ? void 0 : a.yearlyPrice) == null
                          ? void 0
                          : i.id) === t
                  );
              });
    }
    function hn({ site: e, priceId: t }) {
        var i;
        if (t === "free") return na({ site: e });
        const a = yo({ site: e }).find((o) => {
            var s, l;
            return (
                ((s = o == null ? void 0 : o.monthlyPrice) == null
                    ? void 0
                    : s.id) === t ||
                ((l = o == null ? void 0 : o.yearlyPrice) == null
                    ? void 0
                    : l.id) === t
            );
        });
        let r = "month";
        return (
            ((i = a == null ? void 0 : a.yearlyPrice) == null
                ? void 0
                : i.id) === t && (r = "year"),
            { tierId: a == null ? void 0 : a.id, cadence: r }
        );
    }
    function Eo({ site: e, products: t = null }) {
        const { portal_plans: n = [], is_stripe_configured: a } = e || {};
        return a
            ? Jw({ site: e, products: t })
                  .filter((i) => !!(i && i.id))
                  .map((i) => ({
                      ...i,
                      price_id: i.id,
                      price: i.amount / 100,
                      name: i.nickname,
                      currency_symbol: pe(i.currency),
                  }))
                  .filter((i) => i.amount !== 0 && i.type === "recurring")
                  .filter((i) =>
                      i.interval === "month"
                          ? n.includes("monthly")
                          : i.interval === "year"
                          ? n.includes("yearly")
                          : !1
                  )
                  .sort((i, o) => i.amount - o.amount)
                  .sort((i, o) =>
                      !i.currency || !o.currency
                          ? 0
                          : i.currency.localeCompare(o.currency, void 0, {
                                ignorePunctuation: !0,
                            })
                  )
            : [];
    }
    function Qw({ site: e }) {
        const t = Eo({ site: e });
        let n = { currency: "usd", currency_symbol: "$" };
        return (
            (t == null ? void 0 : t.length) > 0 &&
                ((n.currency = t[0].currency),
                (n.currency_symbol = t[0].currency_symbol)),
            n
        );
    }
    function Co({ site: e = {}, pageQuery: t = "" } = {}) {
        const { allow_self_signup: n, portal_plans: a } = e || {},
            r = [];
        if (n && a.includes("free")) {
            const o = Qw({ site: e });
            r.push({
                id: "free",
                type: "free",
                price: 0,
                amount: 0,
                name: Hh({ site: e }),
                ...o,
            });
        }
        return (
            (t === "free" && wo({ site: e })) ||
                Eo({ site: e }).forEach((s) => {
                    r.push(s);
                }),
            r
        );
    }
    const Xw = ({ member: e }) => (e ? e.email : ""),
        Fc = ({ member: e }) => (e ? e.email_suppression : ""),
        Zw = ({ site: e }) => e && e.firstpromoter_account,
        ex = ({ member: e }) => (e ? e.name : ""),
        xr = ({ site: e }) => {
            var n;
            const { members_support_address: t } = e || {};
            if ((t == null ? void 0 : t.indexOf("@")) < 0) {
                const a = Oc({ site: e }),
                    r =
                        (a == null
                            ? void 0
                            : a.replace(/^(www)\.(?=[^/]*\..{2,5})/, "")) || "";
                return `${t}@${r}`;
            }
            if (
                ((n = t == null ? void 0 : t.split("@")) == null
                    ? void 0
                    : n.length) > 1
            ) {
                const [a, r] = t.split("@"),
                    i =
                        (r == null
                            ? void 0
                            : r.replace(/^(www)\.(?=[^/]*\..{2,5})/, "")) || "";
                return `${a}@${i}`;
            }
            return t || "";
        },
        tx = ({ site: e }) => {
            const t = ra({ site: e }),
                n = t == null ? void 0 : t[0];
            if (n) return n.sender_email || `noreply@${Oc({ site: e })}`;
        },
        Oc = ({ site: e }) => {
            try {
                return new URL(e.url).origin
                    .replace(/^http(s?):\/\//, "")
                    .replace(/\/$/, "");
            } catch {
                return e.url.replace(/^http(s?):\/\//, "").replace(/\/$/, "");
            }
        },
        pe = (e) =>
            Intl.NumberFormat("en", { currency: e, style: "currency" })
                .format(0)
                .replace(/[\d\s.]/g, ""),
        Hc = (e) => (isNaN(e) ? 0 : e / 100),
        nx = (e = {}) => {
            const t = pe(e.currency),
                n = Hc(e.amount);
            return `${t}${n}/${e.interval}`;
        },
        ia = (e) => (e == null ? "" : e.toLocaleString()),
        K = ({
            type: e,
            status: t,
            autoHide: n,
            duration: a = 2600,
            closeable: r,
            state: i,
            message: o,
            meta: s = {},
        }) => {
            let l = 0;
            return (
                i &&
                    i.popupNotification &&
                    (l = (i.popupNotification.count || 0) + 1),
                {
                    type: e,
                    status: t,
                    autoHide: n,
                    closeable: r,
                    duration: a,
                    meta: s,
                    message: o,
                    count: l,
                }
            );
        };
    function $o(e, t) {
        return (
            (e == null ? void 0 : e.toLowerCase()) ===
            (t == null ? void 0 : t.toLowerCase())
        );
    }
    function Kh({ site: e, pageQuery: t }) {
        var r, i;
        const n = /^(?:(\S+?))?\/monthly$/,
            a = /^(?:(\S+?))?\/yearly$/;
        if (n.test(t || "")) {
            const [, o] = t.match(n),
                s = aa({ site: e, productId: o });
            return (r = s == null ? void 0 : s.monthlyPrice) == null
                ? void 0
                : r.id;
        } else if (a.test(t || "")) {
            const [, o] = t.match(a),
                s = aa({ site: e, productId: o });
            return (i = s == null ? void 0 : s.yearlyPrice) == null
                ? void 0
                : i.id;
        }
        return null;
    }
    const ax = ({ offer: e, price: t, useFormatted: n = !1 }) => {
            const a = t.amount;
            let r;
            return (
                e.type === "fixed" && $o(e.currency, t.currency)
                    ? ((r = (a - e.amount) / 100), (r = r > 0 ? r : 0))
                    : e.type === "percent"
                    ? (r = (a - (a * e.amount) / 100) / 100)
                    : (r = a / 100),
                n
                    ? Intl.NumberFormat("en", {
                          currency: t == null ? void 0 : t.currency,
                          style: "currency",
                      }).format(r)
                    : r
            );
        },
        rx = ({ site: e, offer: t }) =>
            (t == null ? void 0 : t.status) !== "active"
                ? !1
                : !!aa({ site: e, productId: t.tier.id });
    function ix({ tier: e, priceId: t }) {
        return e != null && e.monthly_price
            ? {
                  id: `price-${t}`,
                  active: !0,
                  type: "recurring",
                  nickname: "Monthly",
                  currency: e.currency,
                  amount: e.monthly_price,
                  interval: "month",
              }
            : null;
    }
    function ox({ tier: e, priceId: t }) {
        return e != null && e.yearly_price
            ? {
                  id: `price-${t}`,
                  active: !0,
                  type: "recurring",
                  nickname: "Yearly",
                  currency: e.currency,
                  amount: e.yearly_price,
                  interval: "year",
              }
            : null;
    }
    function sx({ tier: e }) {
        var t;
        return (t = e == null ? void 0 : e.benefits) == null
            ? void 0
            : t.map((n) => ({ name: n }));
    }
    const lx = ({ tiers: e }) => {
        let t = 0;
        return e.map((n) => {
            let a = ix({ tier: n, priceId: t });
            t += 1;
            let r = ox({ tier: n, priceId: t });
            t += 1;
            let i = sx({ tier: n });
            return { ...n, benefits: i, monthly_price: a, yearly_price: r };
        });
    };
    function Sr() {
        const e = "ghost-history";
        try {
            const t = localStorage.getItem(e);
            if (t) {
                const n = JSON.parse(t);
                if (Array.isArray(n)) return n;
            }
        } catch (t) {
            console.warn("[Portal] Failed to load member URL history:", t);
        }
    }
    function cx({ member: e }) {
        if (!(e != null && e.created_at)) return !1;
        const t = new Date(),
            n = new Date(e.created_at),
            a = t.getTime() - n.getTime();
        return Math.round(a / (1e3 * 60 * 60)) < 24;
    }
    const ux = function () {
            return dx() || Jh();
        },
        dx = function () {
            const [e] = window.location.hash.substr(1).split("?");
            return e === "/portal/preview";
        },
        Jh = function () {
            const [e] = window.location.hash.substr(1).split("?");
            return e === "/portal/preview/offer";
        },
        mx = {
            preview: ux,
            offerPreview: Jh,
            dev: function ({ customSiteUrl: e = "" } = {}) {
                return !1;
            },
            test: function () {
                return !1;
            },
        },
        V = (e = [], t = {}) =>
            e.some((n) => {
                const a = mx[n];
                return !!(a && a(t));
            }),
        Qh = {
            "icon-1": Iw,
            "icon-2": zw,
            "icon-3": Aw,
            "icon-4": Dw,
            "icon-5": Mw,
        },
        Xh = ({ hasText: e }) => ({
            frame: {
                zIndex: "3999998",
                position: "fixed",
                bottom: "0",
                right: "0",
                width: "500px",
                maxWidth: "500px",
                height: "98px",
                animation:
                    "250ms ease 0s 1 normal none running animation-bhegco",
                transition: "opacity 0.3s ease 0s",
                overflow: "hidden",
                ...{
                    ...(e ? {} : { width: "105px" }),
                    ...(V(["preview"]) ? { opacity: 1 } : {}),
                },
            },
            userIcon: { width: "34px", height: "34px", color: "#fff" },
            buttonIcon: { width: "24px", height: "24px", color: "#fff" },
            closeIcon: { width: "20px", height: "20px", color: "#fff" },
        });
    class Zh extends R.Component {
        constructor(t) {
            super(t),
                (this.state = {}),
                (this.container = R.createRef()),
                (this.height = null),
                (this.width = null);
        }
        updateHeight(t) {
            this.props.updateHeight && this.props.updateHeight(t);
        }
        updateWidth(t) {
            this.props.updateWidth && this.props.updateWidth(t);
        }
        componentDidMount() {
            this.container &&
                ((this.height =
                    this.container.current &&
                    this.container.current.offsetHeight),
                (this.width =
                    this.container.current &&
                    this.container.current.offsetWidth),
                this.updateHeight(this.height),
                this.updateWidth(this.width));
        }
        componentDidUpdate() {
            if (this.container) {
                const t =
                    this.container.current &&
                    this.container.current.offsetHeight;
                let n =
                    this.container.current &&
                    this.container.current.offsetWidth;
                t !== this.height &&
                    ((this.height = t), this.updateHeight(this.height)),
                    n !== this.width &&
                        ((this.width = n), this.updateWidth(this.width));
            }
        }
        renderTriggerIcon() {
            const { portal_button_icon: t = "", portal_button_style: n = "" } =
                    this.context.site || {},
                a = Xh({ brandColor: this.context.brandColor }),
                r = this.context.member && this.context.member.avatar_image;
            if (!n.includes("icon") && !this.context.member) return null;
            if (r) return c.jsx(Dc, { gravatar: r });
            if (this.context.member) return c.jsx(Ac, { style: a.userIcon });
            if (Object.keys(Qh).includes(t)) {
                const i = Qh[t];
                return c.jsx(i, { style: a.buttonIcon });
            } else return t ? c.jsx("img", { style: { width: "26px", height: "26px" }, src: t, alt: "" }) : (this.hasText() && ((a.userIcon.width = "26px"), (a.userIcon.height = "26px")), c.jsx(Ac, { style: a.userIcon }));
        }
        hasText() {
            const { portal_button_signup_text: t, portal_button_style: n } =
                this.context.site;
            return (
                ["icon-and-text", "text-only"].includes(n) &&
                !this.context.member &&
                t
            );
        }
        renderText() {
            const { portal_button_signup_text: t } = this.context.site;
            return this.hasText()
                ? c.jsxs("span", {
                      className: "gh-portal-triggerbtn-label",
                      children: [" ", t, " "],
                  })
                : null;
        }
        onToggle() {
            const { showPopup: t, member: n, site: a } = this.context;
            if (t) {
                this.context.onAction("closePopup");
                return;
            }
            if (n) {
                this.context.onAction("openPopup", { page: "accountHome" });
                return;
            }
            if (pn({ site: a })) {
                const r = ot({ site: a }) ? "signin" : "signup";
                this.context.onAction("openPopup", { page: r });
                return;
            }
        }
        render() {
            const t = this.hasText(),
                { member: n } = this.context,
                a = n ? "halo" : "";
            return t
                ? c.jsx("div", {
                      className: "gh-portal-triggerbtn-wrapper",
                      ref: this.container,
                      children: c.jsxs("div", {
                          className:
                              "gh-portal-triggerbtn-container with-label",
                          onClick: (r) => this.onToggle(r),
                          "data-testid": "portal-trigger-button",
                          children: [
                              this.renderTriggerIcon(),
                              t ? this.renderText() : "",
                          ],
                      }),
                  })
                : c.jsx("div", {
                      className: "gh-portal-triggerbtn-wrapper",
                      children: c.jsx("div", {
                          className: "gh-portal-triggerbtn-container " + a,
                          onClick: (r) => this.onToggle(r),
                          "data-testid": "portal-trigger-button",
                          children: this.renderTriggerIcon(),
                      }),
                  });
        }
    }
    J(Zh, "contextType", _);
    class ef extends R.Component {
        constructor(t) {
            super(t), (this.state = { width: null });
        }
        onWidthChange(t) {
            this.setState({ width: t });
        }
        hasText() {
            const { portal_button_signup_text: t, portal_button_style: n } =
                this.context.site;
            return (
                ["icon-and-text", "text-only"].includes(n) &&
                !this.context.member &&
                t
            );
        }
        renderFrameStyles() {
            const t =
                `
            :root {
                --brandcolor: ${this.context.brandColor}
            }
        ` + Rw;
            return c.jsx("style", { dangerouslySetInnerHTML: { __html: t } });
        }
        render() {
            const t = this.context.site,
                { portal_button: n } = t,
                { showPopup: a } = this.context;
            if (!n || !pn({ site: t }) || V(["offerPreview"])) return null;
            const r = this.hasText(),
                o = {
                    ...Xh({ brandColor: this.context.brandColor, hasText: r })
                        .frame,
                };
            if (this.state.width) {
                const s = this.state.width + 2;
                o.width = `${s}px`;
            }
            return c.jsx(zc, {
                dataTestId: "portal-trigger-frame",
                className: "gh-portal-triggerbtn-iframe",
                style: o,
                title: "portal-trigger",
                head: this.renderFrameStyles(),
                children: c.jsx(Zh, {
                    isPopupOpen: a,
                    updateWidth: (s) => this.onWidthChange(s),
                }),
            });
        }
    }
    J(ef, "contextType", _);
    const px =
            Mc +
            `
    .gh-portal-notification-wrapper {
        position: relative;
        overflow: hidden;
        height: 100%;
        width: 100%;
    }

    .gh-portal-notification {
        position: absolute;
        display: flex;
        align-items: center;
        top: 12px;
        right: 12px;
        width: 100%;
        padding: 14px 44px 18px 20px;
        max-width: 380px;
        min-height: 66px;
        font-size: 1.3rem;
        letter-spacing: 0.2px;
        background: rgba(var(--grey1rgb),0.95);
        backdrop-filter: blur(8px);
        color: var(--white);
        border-radius: 7px;
        box-shadow: 0 3.2px 3.6px rgba(var(--black), 0.024), 0 8.8px 10px -5px rgba(var(--black), 0.08);
        animation: notification-slidein 0.55s cubic-bezier(0.215, 0.610, 0.355, 1.000);
    }

    .gh-portal-notification.slideout {
        animation: notification-slideout 0.4s cubic-bezier(0.550, 0.055, 0.675, 0.190);
    }

    .gh-portal-notification.hide {
        display: none;
    }

    .gh-portal-notification p {
        flex-grow: 1;
        font-size: 1.4rem;
        line-height: 1.5em;
        text-align: left;
        margin: 0;
        padding: 0 0 0 40px;
        color: var(--grey13);
    }

    .gh-portal-notification p strong {
        color: var(--white);
    }

    .gh-portal-notification a {
        color: var(--white);
        text-decoration: underline;
        transition: all 0.2s ease-in-out;
        outline: none;
    }

    .gh-portal-notification a:hover {
        opacity: 0.8;
    }

    .gh-portal-notification-icon {
        position: absolute;
        top: calc(50% - 14px);
        left: 17px;
        width: 28px;
        height: 28px;
    }

    .gh-portal-notification-icon.success {
        color: var(--green);
    }

    .gh-portal-notification-icon.error {
        color: var(--red);
    }

    .gh-portal-notification-closeicon {
        position: absolute;
        top: 5px;
        bottom: 0;
        right: 5px;
        color: var(--white);
        cursor: pointer;
        width: 12px;
        height: 12px;
        padding: 10px;
        transition: all 0.2s ease-in-out forwards;
        opacity: 0.8;
    }

    .gh-portal-notification-closeicon:hover {
        opacity: 1.0;
    }    

    @keyframes notification-slidein {
        0% { transform: translateX(380px); }
        60% { transform: translateX(-6px); }
        100% { transform: translateX(0); }
    }

    @keyframes notification-slideout {
        0% { transform: translateX(0); }
        30% { transform: translateX(-10px); }
        100% { transform: translateX(380px); }
    }

    @keyframes notification-slidein-mobile {
        0% { transform: translateY(-150px); }
        50% { transform: translateY(6px); }
        100% { transform: translateY(0); }
    }

    @keyframes notification-slideout-mobile {
        0% { transform: translateY(0); }
        35% { transform: translateY(6px); }
        100% { transform: translateY(-150px); }
    }

    @media (max-width: 414px) {
        .gh-portal-notification {
            left: 12px;
            max-width: calc(100% - 24px);
            animation-name: notification-slidein-mobile;
        }

        .gh-portal-notification.slideout {
            animation-duration: 0.55s;
            animation-name: notification-slideout-mobile;
        }
    }
`,
        Vc = (e) =>
            k.createElement(
                "svg",
                {
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    ...e,
                },
                k.createElement(
                    "defs",
                    null,
                    k.createElement(
                        "style",
                        null,
                        ".a{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.2px !important;}"
                    )
                ),
                k.createElement("path", {
                    className: "a",
                    d: "M.75 23.249l22.5-22.5M23.25 23.249L.75.749",
                })
            ),
        tf = (e) =>
            k.createElement(
                "svg",
                {
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    ...e,
                },
                k.createElement(
                    "defs",
                    null,
                    k.createElement(
                        "style",
                        null,
                        ".checkmark-icon-fill{fill:currentColor;}"
                    )
                ),
                k.createElement("path", {
                    className: "checkmark-icon-fill",
                    d: "M12,0A12,12,0,1,0,24,12,12.014,12.014,0,0,0,12,0Zm6.927,8.2-6.845,9.289a1.011,1.011,0,0,1-1.43.188L5.764,13.769a1,1,0,1,1,1.25-1.562l4.076,3.261,6.227-8.451A1,1,0,1,1,18.927,8.2Z",
                })
            ),
        Wc = (e) =>
            k.createElement(
                "svg",
                {
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    ...e,
                },
                k.createElement(
                    "defs",
                    null,
                    k.createElement(
                        "style",
                        null,
                        ".warning-icon-fill{fill:currentColor;}"
                    )
                ),
                k.createElement("path", {
                    className: "warning-icon-fill",
                    d: "M23.25,23.235a.75.75,0,0,0,.661-1.105l-11.25-21a.782.782,0,0,0-1.322,0l-11.25,21A.75.75,0,0,0,.75,23.235ZM12,20.485a1.5,1.5,0,1,1,1.5-1.5A1.5,1.5,0,0,1,12,20.485Zm0-12.25a1,1,0,0,1,1,1V14.7a1,1,0,0,1-2,0V9.235A1,1,0,0,1,12,8.235Z",
                })
            ),
        hx = ({ action: e, status: t }) => {
            if (t && ["true", "false"].includes(t)) {
                const n = JSON.parse(t);
                return {
                    type: e,
                    status: n ? "success" : "error",
                    duration: 3e3,
                    autoHide: !!n,
                };
            }
            return {};
        },
        fx = ({ status: e, billingOnly: t }) => {
            if (!t && ["success"].includes(e))
                return {
                    type: "stripe:checkout",
                    status: ["success"].includes(e) ? "success" : "warning",
                    duration: 3e3,
                    autoHide: !0,
                };
            if (
                t &&
                ["billing-update-success", "billing-update-cancel"].includes(e)
            )
                return {
                    type: "stripe:billing-update",
                    status:
                        e === "billing-update-success" ? "success" : "warning",
                    duration: 3e3,
                    autoHide: !0,
                    closeable: !0,
                };
        },
        qc = (e = []) => {
            const t = window.location.search || "",
                n = new URLSearchParams(t);
            e.forEach((r) => {
                n.delete(r);
            });
            const a = n.toString() ? `?${n}` : "";
            window.history.replaceState(
                {},
                "",
                `${window.location.pathname}${a}`
            );
        };
    function nf({ billingOnly: e = !1 } = {}) {
        const t = window.location.search;
        if (!t) return null;
        const n = new URLSearchParams(t),
            a = n.get("action"),
            r = n.get("success"),
            i = n.get("stripe");
        let o = null;
        return i
            ? fx({ status: i, billingOnly: e })
            : a && r && !e
            ? hx({ qsParams: n, action: a, status: r })
            : o;
    }
    const gx = () => ({
            frame: {
                zIndex: "4000000",
                position: "fixed",
                top: "0",
                right: "0",
                maxWidth: "415px",
                width: "100%",
                height: "120px",
                animation:
                    "250ms ease 0s 1 normal none running animation-bhegco",
                transition: "opacity 0.3s ease 0s",
                overflow: "hidden",
            },
        }),
        bx = ({ type: e, status: t, context: n }) => {
            const a = n.t,
                r = Lh({ page: "signin", siteUrl: n.site.url }),
                i = Lh({ page: "signup", siteUrl: n.site.url });
            if (e === "signin" && t === "success" && n.member) {
                const o = n.member.firstname || "";
                return c.jsxs("p", {
                    children: [
                        o
                            ? a("Welcome back, {{name}}!", { name: o })
                            : a("Welcome back!"),
                        c.jsx("br", {}),
                        a("You've successfully signed in."),
                    ],
                });
            } else {
                if (e === "signin" && t === "error")
                    return c.jsxs("p", {
                        children: [
                            a("Could not sign in. Login link expired."),
                            " ",
                            c.jsx("a", {
                                href: r,
                                target: "_parent",
                                children: a("Click here to retry"),
                            }),
                        ],
                    });
                if (e === "signup" && t === "success")
                    return c.jsxs("p", {
                        children: [
                            a("You've successfully subscribed to"),
                            " ",
                            c.jsx("br", {}),
                            c.jsx("strong", { children: n.site.title }),
                        ],
                    });
                if (e === "signup-paid" && t === "success")
                    return c.jsxs("p", {
                        children: [
                            a("You've successfully subscribed to"),
                            " ",
                            c.jsx("br", {}),
                            c.jsx("strong", { children: n.site.title }),
                        ],
                    });
                if (e === "updateEmail" && t === "success")
                    return c.jsx("p", {
                        children: a("Success! Your email is updated."),
                    });
                if (e === "updateEmail" && t === "error")
                    return c.jsx("p", {
                        children: a("Could not update email! Invalid link."),
                    });
                if (e === "signup" && t === "error")
                    return c.jsxs("p", {
                        children: [
                            a("Signup error: Invalid link"),
                            c.jsx("br", {}),
                            c.jsx("a", {
                                href: i,
                                target: "_parent",
                                children: a("Click here to retry"),
                            }),
                        ],
                    });
                if (e === "signup-paid" && t === "error")
                    return c.jsxs("p", {
                        children: [
                            a("Signup error: Invalid link"),
                            c.jsx("br", {}),
                            c.jsx("a", {
                                href: i,
                                target: "_parent",
                                children: a("Click here to retry"),
                            }),
                        ],
                    });
                if (e === "stripe:checkout" && t === "success")
                    return n.member
                        ? c.jsx("p", {
                              children: a(
                                  "Success! Your account is fully activated, you now have access to all content."
                              ),
                          })
                        : c.jsx("p", {
                              children: a(
                                  "Success! Check your email for magic link to sign-in."
                              ),
                          });
                if (e === "stripe:checkout" && t === "warning")
                    return n.member
                        ? c.jsx("p", {
                              children: a("Plan upgrade was cancelled."),
                          })
                        : c.jsx("p", {
                              children: a("Plan checkout was cancelled."),
                          });
            }
            return c.jsx("p", {
                children: a(t === "success" ? "Success" : "Error"),
            });
        };
    class af extends R.Component {
        constructor() {
            super(), (this.state = { className: "" });
        }
        componentWillUnmount() {
            clearTimeout(this.timeoutId);
        }
        onNotificationClose() {
            this.props.onHideNotification();
        }
        componentDidUpdate() {
            const { showPopup: t } = this.context;
            !this.state.className &&
                t &&
                this.setState({ className: "slideout" });
        }
        componentDidMount() {
            const { autoHide: t, duration: n = 2400 } = this.props,
                { showPopup: a } = this.context;
            a
                ? this.setState({ className: "slideout" })
                : t &&
                  (this.timeoutId = setTimeout(() => {
                      this.setState({ className: "slideout" });
                  }, n));
        }
        onAnimationEnd(t) {
            (t.animationName === "notification-slideout" ||
                t.animationName === "notification-slideout-mobile") &&
                this.props.onHideNotification(t);
        }
        render() {
            const { type: t, status: n } = this.props,
                { className: a = "" } = this.state,
                r = n ? `  ${n}` : " neutral",
                i = a ? ` ${a}` : "";
            return c.jsx("div", {
                className: "gh-portal-notification-wrapper",
                children: c.jsxs("div", {
                    className: `gh-portal-notification${r}${i}`,
                    onAnimationEnd: (o) => this.onAnimationEnd(o),
                    children: [
                        n === "error"
                            ? c.jsx(Wc, {
                                  className:
                                      "gh-portal-notification-icon error",
                                  alt: "",
                              })
                            : c.jsx(tf, {
                                  className:
                                      "gh-portal-notification-icon success",
                                  alt: "",
                              }),
                        c.jsx(bx, {
                            type: t,
                            status: n,
                            context: this.context,
                        }),
                        c.jsx(Vc, {
                            className: "gh-portal-notification-closeicon",
                            alt: "Close",
                            onClick: (o) => this.onNotificationClose(o),
                        }),
                    ],
                }),
            });
        }
    }
    J(af, "contextType", _);
    class rf extends R.Component {
        constructor() {
            super();
            const { type: t, status: n, autoHide: a, duration: r } = nf() || {};
            this.state = {
                active: !0,
                type: t,
                status: n,
                autoHide: a,
                duration: r,
                className: "",
            };
        }
        componentDidMount() {
            const { showPopup: t } = this.context;
            t && this.setState({ active: !1 });
        }
        onHideNotification() {
            const t = this.state.type,
                n = [];
            ["signin", "signup"].includes(t)
                ? n.push("action", "success")
                : ["stripe:checkout"].includes(t) && n.push("stripe"),
                qc(n),
                this.context.onAction("refreshMemberData"),
                this.setState({ active: !1 });
        }
        renderFrameStyles() {
            const t =
                `
            :root {
                --brandcolor: ${this.context.brandColor}
            }
        ` + px;
            return c.jsx("style", { dangerouslySetInnerHTML: { __html: t } });
        }
        render() {
            const n = { ...gx({ brandColor: this.context.brandColor }).frame };
            if (!this.state.active) return null;
            const { type: a, status: r, autoHide: i, duration: o } = this.state;
            return a && r
                ? c.jsx(zc, {
                      style: n,
                      title: "portal-notification",
                      head: this.renderFrameStyles(),
                      className: "gh-portal-notification-iframe",
                      children: c.jsx(af, {
                          type: a,
                          status: r,
                          autoHide: i,
                          duration: o,
                          onHideNotification: (s) => this.onHideNotification(s),
                      }),
                  })
                : null;
        }
    }
    J(rf, "contextType", _);
    const oa = (e) =>
            k.createElement(
                "svg",
                {
                    id: "loader-1",
                    xmlns: "http://www.w3.org/2000/svg",
                    xmlnsXlink: "http://www.w3.org/1999/xlink",
                    x: "0px",
                    y: "0px",
                    width: "40px",
                    height: "40px",
                    viewBox: "0 0 40 40",
                    enableBackground: "new 0 0 40 40",
                    xmlSpace: "preserve",
                    ...e,
                },
                k.createElement("path", {
                    opacity: 0.2,
                    fill: "#000",
                    d: "M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946 s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634 c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z",
                }),
                k.createElement(
                    "path",
                    {
                        fill: "#000",
                        d: "M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0 C22.32,8.481,24.301,9.057,26.013,10.047z",
                    },
                    k.createElement("animateTransform", {
                        attributeType: "xml",
                        attributeName: "transform",
                        type: "rotate",
                        from: "0 20 20",
                        to: "360 20 20",
                        dur: "0.5s",
                        repeatCount: "indefinite",
                    })
                )
            ),
        yx = `
    .gh-portal-btn-main {
        box-shadow: none;
        position: relative;
        border: none;
    }

    .gh-portal-btn-main:hover,
    .gh-portal-btn-main:focus {
        box-shadow: none;
        border: none;
    }

    .gh-portal-btn-primary:hover,
    .gh-portal-btn-primary:focus {
        opacity: 0.92 !important;
    }

    .gh-portal-btn-primary:disabled:hover::before {
        display: none;
    }

    .gh-portal-btn-destructive:not(:disabled):hover {
        color: var(--red);
        border-color: var(--red);
    }

    .gh-portal-btn-text {
        padding: 0;
        font-weight: 500;
        height: unset;
        border: none;
        box-shadow: none;
    }

    .gh-portal-loadingicon {
        position: absolute;
        left: 50%;
        display: inline-block;
        margin-left: -19px;
        height: 31px;
    }

    .gh-portal-loadingicon path,
    .gh-portal-loadingicon rect {
        fill: var(--white);
    }

    .gh-portal-loadingicon.dark path,
    .gh-portal-loadingicon.dark rect {
        fill: var(--grey0);
    }
`,
        kx = ({ brandColor: e, disabled: t, style: n = {}, isPrimary: a }) => {
            let r = e || "#3eb0ef",
                i = "1.0",
                o = "auto";
            return (
                t && ((i = "0.5"), (o = "none")),
                {
                    button: {
                        ...(a ? { color: "#fff" } : {}),
                        ...(a ? { backgroundColor: r } : {}),
                        opacity: i,
                        pointerEvents: o,
                        ...(n || {}),
                    },
                }
            );
        };
    function te({
        label: e,
        onClick: t,
        disabled: n = !1,
        retry: a = !1,
        brandColor: r,
        isRunning: i,
        isPrimary: o = !0,
        isDestructive: s = !1,
        classes: l = "",
        style: u = {},
        tabindex: m = void 0,
        dataTestId: p,
    }) {
        let d = kx({
                disabled: n,
                retry: a,
                brandColor: r,
                style: u,
                isPrimary: o,
            }),
            b = "gh-portal-btn";
        o && (b += " gh-portal-btn-main gh-portal-btn-primary"),
            s && (b += " gh-portal-btn-destructive"),
            l && (b += " " + l),
            ta() && (n = !0);
        const y = o ? "gh-portal-loadingicon" : "gh-portal-loadingicon dark";
        return c.jsx("button", {
            className: b,
            style: d.button,
            onClick: (v) => t(v),
            disabled: n,
            type: "submit",
            tabIndex: m,
            "data-test-button": p,
            children: i ? c.jsx(oa, { className: y }) : e,
        });
    }
    const vx = (e) =>
            k.createElement(
                "svg",
                {
                    id: "Regular",
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    ...e,
                },
                k.createElement(
                    "defs",
                    null,
                    k.createElement(
                        "style",
                        null,
                        ".cls-1{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px;fill-rule:evenodd;}"
                    )
                ),
                k.createElement("path", {
                    className: "cls-1",
                    d: "M16.25,23.25,5.53,12.53a.749.749,0,0,1,0-1.06L16.25.75",
                })
            ),
        wx = `
    .gh-portal-btn-back,
    .gh-portal-btn-back:hover {
        box-shadow: none;
        position: relative;
        height: unset;
        min-width: unset;
        position: fixed;
        top: 29px;
        left: 20px;
        background: none;
        padding: 8px;
        margin: 0;
        box-shadow: none;
        color: var(--grey3);
        border: none;
        z-index: 10000;
    }

    @media (max-width: 480px) {
        .gh-portal-btn-back,
        .gh-portal-btn-back:hover {
            left: 16px;
        }
    }

    .gh-portal-btn-back:hover {
        color: var(--grey1);
        transform: translateX(-4px);
    }

    .gh-portal-btn-back svg {
        width: 17px;
        height: 17px;
        margin-top: 1px;
        margin-right: 2px;
    }
`;
    function sa({ label: e = null, hidden: t = !1, onClick: n }) {
        const { t: a } = k.useContext(_);
        return t
            ? null
            : (e === null && (e = a("Back")),
              c.jsxs("button", {
                  className: "gh-portal-btn gh-portal-btn-back",
                  onClick: (r) => n(r),
                  children: [c.jsx(vx, {}), " ", e],
              }));
    }
    const xx = `
    .gh-portal-for-switch label,
    .gh-portal-for-switch .container {
        position: relative;
        display: inline-block;
        width: 44px !important;
        height: 26px !important;
        cursor: pointer;
    }

    .gh-portal-for-switch label p,
    .gh-portal-for-switch .container p {
        overflow: auto;
        color: var(--grey0);
        font-weight: normal;
    }

    .gh-portal-for-switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }

    .gh-portal-for-switch .input-toggle-component {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: var(--grey12);
        transition: .3s;
        width: 44px !important;
        height: 26px !important;
        border-radius: 999px;
        transition: background 0.15s ease-in-out, border-color 0.15s ease-in-out;
        cursor: pointer;
    }

    .gh-portal-for-switch label:hover input:not(:checked) + .input-toggle-component,
    .gh-portal-for-switch .container:hover input:not(:checked) + .input-toggle-component {
        border-color: var(--grey9);
    }

    .gh-portal-for-switch .input-toggle-component:before {
        position: absolute;
        content: "";
        top: 3px !important;
        left: 3px !important;
        height: 20px !important;
        width: 20px !important;
        background-color: var(--white);
        transition: .3s;
        border-radius: 999px;
    }

    .gh-portal-for-switch input:checked + .input-toggle-component {
        background: var(--brandcolor);
        border-color: transparent;
    }

    .gh-portal-for-switch input:checked + .input-toggle-component:before {
        transform: translateX(18px);
        box-shadow: none;
    }

    .gh-portal-for-switch .container {
        width: 38px !important;
        height: 22px !important;
    }
`;
    function jo({
        id: e,
        label: t = "",
        onToggle: n,
        checked: a = !1,
        dataTestId: r = "switch-input",
    }) {
        const { action: i } = k.useContext(_),
            [o, s] = k.useState(a),
            l = [
                "updateNewsletter:failed",
                "updateNewsletter:success",
            ].includes(i);
        return (
            k.useEffect(() => {
                s(a);
            }, [a, l]),
            c.jsx("div", {
                className: "gh-portal-for-switch",
                "data-test-switch": r,
                children: c.jsxs("label", {
                    className: "switch",
                    htmlFor: e,
                    children: [
                        c.jsx("input", {
                            type: "checkbox",
                            checked: o,
                            id: e,
                            onChange: () => {},
                            "aria-label": t,
                        }),
                        c.jsx("span", {
                            className: "input-toggle-component",
                            onClick: (u) => {
                                s(!o), n(u, !o);
                            },
                            "data-testid": r,
                        }),
                    ],
                }),
            })
        );
    }
    const Sx = `.gh-portal-account-header{display:flex;flex-direction:column;align-items:center;margin:0 0 32px}.gh-portal-account-header .gh-portal-avatar{margin:6px 0 8px!important}.gh-portal-account-data{margin-bottom:40px}footer.gh-portal-account-footer{display:flex}.gh-portal-account-footer.paid{margin-top:12px}.gh-portal-account-footermenu{display:flex;align-items:center;list-style:none;padding:0;margin:0}.gh-portal-account-footerright{display:flex;flex-grow:1;align-items:center;justify-content:flex-end}.gh-portal-account-footermenu li{margin-right:16px}.gh-portal-account-footermenu li:last-of-type{margin-right:0}.gh-portal-freeaccount-newsletter{display:flex;align-items:center;justify-content:space-between;margin-top:24px}.gh-portal-freeaccount-newsletter .label{display:flex;flex-direction:column;flex-grow:1}.gh-portal-free-ctatext{margin-top:-12px}.gh-portal-cancelcontinue-container{margin:24px 0 32px}.gh-portal-list-detail .gh-portal-email-notice{display:flex;align-items:center;gap:5px;margin-top:6px;color:var(--red);font-weight:500;font-size:1.25rem;letter-spacing:.2px}.gh-portal-email-notice-icon{width:20px;height:20px}.gh-portal-billing-button-loader{width:32px;height:32px;margin-right:-3px;opacity:.6}.gh-portal-product-icon{width:52px;margin-right:12px;border-radius:2px}.gh-portal-account-discountcontainer{position:relative;display:flex;align-items:center}.gh-portal-account-old-price{text-decoration:line-through;color:var(--grey9)!important}.gh-portal-account-tagicon{width:16px;height:16px;color:var(--brandcolor);margin-right:5px;z-index:999}@media (max-width: 390px){.gh-portal-account-footer{padding:0!important}}@media (max-width: 340px){.gh-portal-account-footer{padding:0!important;flex-wrap:wrap;gap:12px}.gh-portal-account-footer .gh-portal-account-footerright{justify-content:flex-start}}
`;
    let ne =
        ((lu = class extends R.Component {
            constructor() {
                super(...arguments);
                J(this, "closePopup", () => {
                    this.context.onAction("closePopup");
                });
            }
            render() {
                const { onClick: n } = this.props;
                return c.jsx("div", {
                    className: "gh-portal-closeicon-container",
                    "data-test-button": "close-popup",
                    children: c.jsx(Vc, {
                        className: "gh-portal-closeicon",
                        alt: "Close",
                        onClick: n || this.closePopup,
                    }),
                });
            }
        }),
        J(lu, "contextType", _),
        lu);
    const of = (e) =>
        k.createElement(
            "svg",
            {
                width: 15,
                height: 14,
                viewBox: "0 0 15 14",
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg",
                ...e,
            },
            k.createElement("path", {
                d: "M1 6.89286L6.10714 12L13.9643 1",
                stroke: "#222222",
                strokeWidth: 2,
            })
        );
    function Ex(e, t) {
        if (isNaN(e) || isNaN(t)) return 0;
        const n = e ? 100 - Math.floor(((t / 12) * 100) / e) : 0;
        return n >= 1 && n < 100 ? n : 0;
    }
    var sf = { exports: {} },
        Cx = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",
        $x = Cx,
        jx = $x;
    function lf() {}
    function cf() {}
    cf.resetWarningCache = lf;
    var Px = function () {
        function e(a, r, i, o, s, l) {
            if (l !== jx) {
                var u = new Error(
                    "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
                );
                throw ((u.name = "Invariant Violation"), u);
            }
        }
        e.isRequired = e;
        function t() {
            return e;
        }
        var n = {
            array: e,
            bigint: e,
            bool: e,
            func: e,
            number: e,
            object: e,
            string: e,
            symbol: e,
            any: e,
            arrayOf: t,
            element: e,
            elementType: e,
            instanceOf: t,
            node: e,
            objectOf: t,
            oneOf: t,
            oneOfType: t,
            shape: t,
            exact: t,
            checkPropTypes: cf,
            resetWarningCache: lf,
        };
        return (n.PropTypes = n), n;
    };
    sf.exports = Px();
    var _x = sf.exports;
    const Gc = Pe(_x);
    function uf(e, t) {
        if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
    }
    function Er(e) {
        "@babel/helpers - typeof";
        return (
            (Er =
                typeof Symbol == "function" &&
                typeof Symbol.iterator == "symbol"
                    ? function (t) {
                          return typeof t;
                      }
                    : function (t) {
                          return t &&
                              typeof Symbol == "function" &&
                              t.constructor === Symbol &&
                              t !== Symbol.prototype
                              ? "symbol"
                              : typeof t;
                      }),
            Er(e)
        );
    }
    function Nx(e, t) {
        if (Er(e) !== "object" || e === null) return e;
        var n = e[Symbol.toPrimitive];
        if (n !== void 0) {
            var a = n.call(e, t || "default");
            if (Er(a) !== "object") return a;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return (t === "string" ? String : Number)(e);
    }
    function Tx(e) {
        var t = Nx(e, "string");
        return Er(t) === "symbol" ? t : String(t);
    }
    function df(e, t) {
        for (var n = 0; n < t.length; n++) {
            var a = t[n];
            (a.enumerable = a.enumerable || !1),
                (a.configurable = !0),
                "value" in a && (a.writable = !0),
                Object.defineProperty(e, Tx(a.key), a);
        }
    }
    function mf(e, t, n) {
        return (
            t && df(e.prototype, t),
            n && df(e, n),
            Object.defineProperty(e, "prototype", { writable: !1 }),
            e
        );
    }
    function Ix(e, t) {
        if (e == null) return {};
        var n = {},
            a = Object.keys(e),
            r,
            i;
        for (i = 0; i < a.length; i++)
            (r = a[i]), !(t.indexOf(r) >= 0) && (n[r] = e[r]);
        return n;
    }
    function zx(e, t) {
        if (e == null) return {};
        var n = Ix(e, t),
            a,
            r;
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (r = 0; r < i.length; r++)
                (a = i[r]),
                    !(t.indexOf(a) >= 0) &&
                        Object.prototype.propertyIsEnumerable.call(e, a) &&
                        (n[a] = e[a]);
        }
        return n;
    }
    var Po = "TOKEN_PLACEHOLDER",
        Cr = "TOKEN_OPEN_TAG",
        _o = "TOKEN_CLOSE_TAG",
        No = "TOKEN_SELF_TAG",
        To = "TOKEN_TEXT",
        pf = "NODE_FRAGMENT",
        hf = "NODE_TAG_ELEMENT",
        ff = "NODE_VOID_ELEMENT",
        gf = "NODE_PLACEHOLDER",
        bf = "NODE_TEXT",
        Ax = ["type", "children"],
        xe = (function () {
            function e(t) {
                var n = t.type,
                    a = t.children,
                    r = zx(t, Ax);
                uf(this, e), (this.type = n), (this.children = a || []);
                for (var i in r) this[i] = r[i];
                r.token && (this.string = r.token.string);
            }
            return (
                mf(e, [
                    {
                        key: "appendChild",
                        value: function (n) {
                            this.children.push(n);
                        },
                    },
                    {
                        key: "isLeaf",
                        get: function () {
                            return this.children.length === 0;
                        },
                    },
                ]),
                e
            );
        })();
    (xe.createTagNode = function (e, t) {
        return new xe({ type: hf, children: t, name: e.name, token: e });
    }),
        (xe.createFragmentNode = function (e) {
            return new xe({ type: pf, children: e });
        }),
        (xe.createVoidNode = function (e) {
            return new xe({ type: ff, name: e.name, token: e });
        }),
        (xe.createTextNode = function (e) {
            return new xe({ type: bf, text: e.string, token: e });
        }),
        (xe.createPlaceholderNode = function (e) {
            return new xe({ type: gf, name: e.name, token: e });
        });
    var Dx = [
            { type: Po, regex: /{\s*(\w+)\s*}/g },
            { type: Cr, regex: /<(\w+)>/g },
            { type: _o, regex: /<\/(\w+)>/g },
            { type: No, regex: /<(\w+)\s*\/>/g },
        ],
        Be = [
            { type: Po, regex: /{{\s*(\w+)\s*}}/g },
            { type: Cr, regex: /<(\w+)>/g },
            { type: _o, regex: /<\/(\w+)>/g },
            { type: No, regex: /<(\w+)\s*\/>/g },
        ];
    function Mx(e, t) {
        var n = (typeof Symbol < "u" && e[Symbol.iterator]) || e["@@iterator"];
        if (!n) {
            if (
                Array.isArray(e) ||
                (n = Rx(e)) ||
                (t && e && typeof e.length == "number")
            ) {
                n && (e = n);
                var a = 0,
                    r = function () {};
                return {
                    s: r,
                    n: function () {
                        return a >= e.length
                            ? { done: !0 }
                            : { done: !1, value: e[a++] };
                    },
                    e: function (u) {
                        throw u;
                    },
                    f: r,
                };
            }
            throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }
        var i = !0,
            o = !1,
            s;
        return {
            s: function () {
                n = n.call(e);
            },
            n: function () {
                var u = n.next();
                return (i = u.done), u;
            },
            e: function (u) {
                (o = !0), (s = u);
            },
            f: function () {
                try {
                    !i && n.return != null && n.return();
                } finally {
                    if (o) throw s;
                }
            },
        };
    }
    function Rx(e, t) {
        if (e) {
            if (typeof e == "string") return yf(e, t);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            if (
                (n === "Object" && e.constructor && (n = e.constructor.name),
                n === "Map" || n === "Set")
            )
                return Array.from(e);
            if (
                n === "Arguments" ||
                /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
            )
                return yf(e, t);
        }
    }
    function yf(e, t) {
        (t == null || t > e.length) && (t = e.length);
        for (var n = 0, a = new Array(t); n < t; n++) a[n] = e[n];
        return a;
    }
    function Lx(e, t) {
        var n = [],
            a = Mx(t),
            r;
        try {
            for (a.s(); !(r = a.n()).done; )
                for (
                    var i = r.value, o = i.type, s = i.regex, l;
                    (l = s.exec(e)) !== null;

                )
                    n.push({
                        type: o,
                        string: l[0],
                        name: l[1],
                        start: l.index,
                        end: l.index + l[0].length,
                    });
        } catch (b) {
            a.e(b);
        } finally {
            a.f();
        }
        n.sort(function (b, y) {
            return b.start - y.start;
        });
        var u = [],
            m = 0;
        n.forEach(function (b) {
            if (b.start === m) {
                m = b.end;
                return;
            }
            var y = b.start,
                v = e.substring(m, y);
            u.push({ type: To, string: v, text: v, start: m, end: y }),
                (m = b.end);
        });
        var p = e.substring(m);
        p !== "" && u.push({ type: To, string: p, start: m, end: e.length });
        var d = [].concat(u, n).sort(function (b, y) {
            return b.start - y.start;
        });
        return d;
    }
    function Yx(e, t) {
        t || (t = Dx);
        var n = Lx(e, t),
            a = new Ux(n);
        return a.parse();
    }
    var $r = "Syntax error. Please check if each open tag is closed correctly",
        kf = { type: "EPSILON" },
        Ux = (function () {
            function e(t) {
                uf(this, e), (this.tokens = [].concat(t)), (this.tags = []);
            }
            return (
                mf(e, [
                    {
                        key: "parse",
                        value: function () {
                            var n = this.document();
                            if (!this.predict(kf.type)) throw new Error($r);
                            return n;
                        },
                    },
                    {
                        key: "document",
                        value: function () {
                            var n = this.elementOrData();
                            return xe.createFragmentNode(n);
                        },
                    },
                    {
                        key: "element",
                        value: function () {
                            var n = this.openTag(),
                                a = this.elementOrData();
                            return this.endTag(), xe.createTagNode(n, a);
                        },
                    },
                    {
                        key: "openTag",
                        value: function () {
                            if (!this.predict(Cr)) throw new Error($r);
                            return this.pushTag(this.lookahead), this.match(Cr);
                        },
                    },
                    {
                        key: "elementOrData",
                        value: function () {
                            var n = [];
                            if (
                                (this.predict(Cr) &&
                                    (n.push(this.element()),
                                    (n = n.concat(this.elementOrData()))),
                                this.predict(No, To, Po))
                            ) {
                                var a = this.match(this.lookahead.type),
                                    r;
                                switch (a.type) {
                                    case No:
                                        r = xe.createVoidNode(a);
                                        break;
                                    case To:
                                        r = xe.createTextNode(a);
                                        break;
                                    case Po:
                                        r = xe.createPlaceholderNode(a);
                                        break;
                                }
                                n.push(r), (n = n.concat(this.elementOrData()));
                            }
                            return n;
                        },
                    },
                    {
                        key: "endTag",
                        value: function () {
                            if (!this.predict(_o)) throw new Error($r);
                            var n = this.tags.pop();
                            if (n.name !== this.lookahead.name)
                                throw new Error($r);
                            this.match(_o);
                        },
                    },
                    {
                        key: "lookahead",
                        get: function () {
                            return this.tokens.length === 0
                                ? kf
                                : this.tokens[0];
                        },
                    },
                    {
                        key: "predict",
                        value: function () {
                            for (
                                var n = arguments.length,
                                    a = new Array(n),
                                    r = 0;
                                r < n;
                                r++
                            )
                                a[r] = arguments[r];
                            return a.includes(this.lookahead.type);
                        },
                    },
                    {
                        key: "match",
                        value: function (n) {
                            if (!this.predict(n)) throw new Error($r);
                            var a = this.tokens.shift();
                            return a;
                        },
                    },
                    {
                        key: "pushTag",
                        value: function (n) {
                            this.tags.push(n);
                        },
                    },
                ]),
                e
            );
        })(),
        Bx = function e(t, n, a) {
            var r = t.children.map(function (l, u) {
                return R.createElement(R.Fragment, { key: a + u }, e(l, n, a));
            });
            switch (t.type) {
                case bf:
                    return t.text;
                case pf:
                    return R.createElement(R.Fragment, null, r);
                case ff: {
                    var i = n[t.name];
                    return typeof i == "function"
                        ? i()
                        : i || R.createElement(t.name, null);
                }
                case hf: {
                    var o = n[t.name];
                    if (o === void 0) return R.createElement(t.name, null, r);
                    if (typeof o == "function") return o(r);
                    if (R.isValidElement(o)) {
                        if (R.Children.count(o.props.children) !== 0)
                            throw new Error(
                                "when passing an element as value, the element should not contains children"
                            );
                        return R.cloneElement(o, { children: r });
                    }
                    throw new Error(
                        'Invalid mapping value for "'.concat(
                            t.name,
                            '". Only element or render function are accepted'
                        )
                    );
                }
                case gf: {
                    var s = n[t.name];
                    return s === void 0
                        ? (console.warn(
                              'missing "'.concat(t.name, '" in mapping')
                          ),
                          t.string)
                        : typeof s == "function"
                        ? s()
                        : s;
                }
                default:
                    return;
            }
        };
    function Ae(e) {
        var t = e.string,
            n = e.syntax,
            a = e.mapping,
            r = a === void 0 ? {} : a,
            i = e.graceful,
            o = i === void 0 ? !0 : i;
        try {
            var s = Yx(t, n);
            return Bx(s, r, t);
        } catch (l) {
            if (o) return console.error(l), t;
            throw l;
        }
    }
    Ae.propTypes = {
        string: Gc.string.isRequired,
        mapping: Gc.object,
        graceful: Gc.bool,
    };
    const Fx = () => `
        .gh-portal-products {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .gh-portal-products-pricetoggle {
            position: relative;
            display: flex;
            background: #F3F3F3;
            width: 100%;
            border-radius: 999px;
            padding: 4px;
            height: 44px;
            margin: 0 0 40px;
        }

        .gh-portal-products-pricetoggle:before {
            position: absolute;
            content: "";
            display: block;
            width: 50%;
            top: 4px;
            bottom: 4px;
            right: 4px;
            background: var(--white);
            box-shadow: 0px 1px 3px rgba(var(--blackrgb), 0.08);
            border-radius: 999px;
            transition: all 0.15s ease-in-out;
        }

        .gh-portal-products-pricetoggle.left:before {
            transform: translateX(calc(-100% + 8px));
        }

        .gh-portal-products-pricetoggle .gh-portal-btn {
            border: 0;
            height: 100% !important;
            width: 50%;
            border-radius: 999px;
            color: var(--grey7);
            background: transparent;
            font-size: 1.5rem;
        }

        .gh-portal-products-pricetoggle .gh-portal-btn.active {
            border: 0;
            height: 100%;
            width: 50%;
            color: var(--grey0);
        }

        .gh-portal-priceoption-label {
            font-size: 1.4rem;
            font-weight: 400;
            letter-spacing: 0.3px;
            margin: 0 6px;
            min-width: 180px;
        }

        .gh-portal-priceoption-label.monthly {
            text-align: right;
        }

        .gh-portal-priceoption-label.inactive {
            color: var(--grey8);
        }

        .gh-portal-products-grid {
            display: flex;
            flex-wrap: wrap;
            align-items: stretch;
            justify-content: center;
            gap: 40px;
            margin: 0 auto;
            padding: 0;
            width: 100%;
        }

        .gh-portal-product-card {
            flex: 1;
            max-width: 420px;
            min-width: 320px;
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: stretch;
            background: var(--white);
            padding: 32px;
            border-radius: 7px;
            border: 1px solid var(--grey11);
            min-height: 200px;
            transition: border-color 0.25s ease-in-out;
        }

        .gh-portal-product-card.top {
            border-bottom: none;
            border-radius: 7px 7px 0 0;
            padding-bottom: 0;
        }

        .gh-portal-product-card.bottom {
            border-top: none;
            border-radius: 0 0 7px 7px;
            padding-top: 0;
        }

        .gh-portal-product-card:not(.disabled):hover {
            border-color: var(--grey9);
        }

        .gh-portal-product-card.checked::before {
            position: absolute;
            display: block;
            top: -2px;
            right: -2px;
            bottom: -2px;
            left: -2px;
            content: "";
            z-index: 999;
            border: 0px solid var(--brandcolor);
            pointer-events: none;
            border-radius: 7px;
        }

        .gh-portal-product-card-header {
            width: 100%;
            min-height: 56px;
        }

        .gh-portal-product-card-name-trial {
            display: flex;
            align-items: center;
        }

        .gh-portal-product-card-name-trial .gh-portal-discount-label {
            margin-top: -4px;
        }

        .gh-portal-product-card-details {
            flex: 1;
            display: flex;
            flex-direction: column;
            width: 100%;
        }

        .gh-portal-product-name {
            font-size: 1.8rem;
            font-weight: 600;
            line-height: 1.3em;
            letter-spacing: 0px;
            margin-top: -4px;
            word-break: break-word;
            width: 100%;
            color: var(--brandcolor);
        }

        .gh-portal-discount-label-trial {
            color: var(--brandcolor);
            font-weight: 600;
            font-size: 1.3rem;
            line-height: 1;
            margin-top: 4px;
        }

        .gh-portal-discount-label {
            position: relative;
            font-size: 1.25rem;
            line-height: 1em;
            font-weight: 600;
            letter-spacing: 0.3px;
            color: var(--grey0);
            padding: 6px 9px;
            text-align: center;
            white-space: nowrap;
            border-radius: 999px;
            margin-right: -4px;
            max-height: 24.5px;
        }

        .gh-portal-discount-label:before {
            position: absolute;
            content: "";
            display: block;
            background: var(--brandcolor);
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            border-radius: 999px;
            opacity: 0.2;
        }

        .gh-portal-product-card-price-trial {
            display: flex;
            flex-direction: row;
            align-items: flex-end;
            justify-content: space-between;
            flex-wrap: wrap;
            row-gap: 10px;
            column-gap: 4px;
            width: 100%;
        }

        .gh-portal-product-card-pricecontainer {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            width: 100%;
            margin-top: 16px;
        }

        .gh-portal-product-price {
            display: flex;
            justify-content: center;
            color: var(--grey0);
        }

        .gh-portal-product-price .currency-sign {
            align-self: flex-start;
            font-size: 2.7rem;
            font-weight: 700;
            line-height: 1.135em;
        }

        .gh-portal-product-price .currency-sign.long {
            margin-right: 5px;
        }

        .gh-portal-product-price .amount {
            font-size: 3.5rem;
            font-weight: 700;
            line-height: 1em;
            letter-spacing: -1.3px;
            color: var(--grey0);
        }

        .gh-portal-product-price .amount.trial-duration {
            letter-spacing: -0.022em;
        }

        .gh-portal-product-price .billing-period {
            align-self: flex-end;
            font-size: 1.5rem;
            line-height: 1.6em;
            color: var(--grey5);
            letter-spacing: 0.3px;
            margin-left: 5px;
        }

        .gh-portal-product-alternative-price {
            font-size: 1.3rem;
            line-height: 1.6em;
            color: var(--grey8);
            letter-spacing: 0.3px;
            display: none;
        }

        .after-trial-amount {
            display: block;
            font-size: 1.5rem;
            color: var(--grey5);
            margin-top: 6px;
            margin-bottom: 6px;
            line-height: 1;
        }

        .gh-portal-product-card-detaildata {
            flex: 1;
        }

        .gh-portal-product-description {
            font-size: 1.55rem;
            font-weight: 600;
            line-height: 1.4em;
            width: 100%;
            margin-top: 16px;
        }

        .gh-portal-product-benefits {
            font-size: 1.5rem;
            line-height: 1.4em;
            width: 100%;
            margin-top: 16px;
        }

        .gh-portal-product-benefit {
            display: flex;
            align-items: flex-start;
            margin-bottom: 10px;
        }

        .gh-portal-benefit-checkmark {
            width: 14px;
            height: 14px;
            min-width: 14px;
            margin: 3px 10px 0 0;
            overflow: visible;
        }

        .gh-portal-benefit-checkmark polyline,
        .gh-portal-benefit-checkmark g {
            stroke-width: 3px;
        }

        .gh-portal-products-grid.change-plan {
            padding: 0;
        }

        .gh-portal-btn-product {
            position: sticky;
            bottom: 0;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            width: 100%;
            justify-self: flex-end;
            padding: 40px 0 32px;
            margin-bottom: -32px;
            /*background: rgb(255,255,255);
            background: linear-gradient(0deg, rgba(255,255,255,1) 75%, rgba(255,255,255,0) 100%);*/
            background: transparent;
        }

        .gh-portal-btn-product::before {
            position: absolute;
            content: "";
            display: block;
            top: -16px;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(0deg, rgba(var(--whitergb),1) 60%, rgba(var(--whitergb),0) 100%);
            z-index: 800;
        }

        .gh-portal-btn-product .gh-portal-btn {
            background: var(--brandcolor);
            color: var(--white);
            border: none;
            width: 100%;
            z-index: 900;
        }

        .gh-portal-btn-product .gh-portal-btn:hover {
            opacity: 0.9;
        }

        .gh-portal-btn-product .gh-portal-btn {
            background: var(--brandcolor);
            color: var(--white);
            border: none;
            width: 100%;
            z-index: 900;
        }

        .gh-portal-btn-product .gh-portal-error-message {
            z-index: 900;
            color: var(--red);
            font-size: 1.4rem;
            min-height: 40px;
            padding-bottom: 13px;
            margin-bottom: -40px;
        }

        .gh-portal-current-plan {
            display: flex;
            align-items: center;
            justify-content: center;
            text-align: center;
            white-space: nowrap;
            width: 100%;
            height: 44px;
            border-radius: 5px;
            color: var(--grey5);
            font-size: 1.4rem;
            font-weight: 500;
            line-height: 1em;
            letter-spacing: 0.2px;
            font-weight: 500;
            background: var(--grey14);
            z-index: 900;
        }

        .gh-portal-product-card.only-free {
            margin: 0 0 16px;
            min-height: unset;
        }

        .gh-portal-product-card.only-free .gh-portal-product-card-header {
            min-height: unset;
        }

        @media (max-width: 670px) {
            .gh-portal-products-grid {
                grid-template-columns: unset;
                grid-gap: 20px;
                width: 100%;
                max-width: 440px;
            }

            .gh-portal-priceoption-label {
                font-size: 1.25rem;
            }

            .gh-portal-products-priceswitch .gh-portal-discount-label {
                display: none;
            }

            .gh-portal-products-priceswitch {
                padding-top: 18px;
            }

            .gh-portal-product-card {
                min-height: unset;
            }

            .gh-portal-singleproduct-benefits .gh-portal-product-description {
                text-align: center;
            }

            .gh-portal-product-benefit:last-of-type {
                margin-bottom: 0;
            }
        }

        @media (max-width: 480px) {
            .gh-portal-product-price .amount {
                font-size: 3.4rem;
            }

            .gh-portal-product-card {
                min-width: unset;
            }

            .gh-portal-btn-product {
                position: static;
            }

            .gh-portal-btn-product::before {
                display: none;
            }
        }

        @media (max-width: 370px) {
            .gh-portal-product-price .currency-sign {
                font-size: 1.8rem;
            }

            .gh-portal-product-price .amount {
                font-size: 2.8rem;
            }
        }


        /* Upgrade and change plan*/
        .gh-portal-upgrade-product {
            margin-top: -70px;
            padding-top: 60px;
        }

        .gh-portal-upgrade-product .gh-portal-products-grid {
            grid-template-columns: unset;
            grid-gap: 20px;
            width: 100%;
        }

        .gh-portal-upgrade-product .gh-portal-product-card .gh-portal-plan-current {
            display: inline-block;
            position: relative;
            padding: 2px 8px;
            font-size: 1.2rem;
            letter-spacing: 0.3px;
            text-transform: uppercase;
            margin-bottom: 4px;
        }

        .gh-portal-upgrade-product .gh-portal-product-card .gh-portal-plan-current::before {
            position: absolute;
            content: "";
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            border-radius: 999px;
            background: var(--brandcolor);
            opacity: 0.15;
        }

        @media (max-width: 880px) {
            .gh-portal-products-grid {
                flex-direction: column;
                margin: 0 auto;
                max-width: 420px;
            }

            .gh-portal-product-card-header {
                min-height: unset;
            }
        }
    `,
        la = R.createContext({
            selectedInterval: "month",
            selectedProduct: "free",
            selectedPlan: null,
            setSelectedProduct: null,
        });
    function Ox({ product: e }) {
        return !e.benefits || !e.benefits.length
            ? null
            : e.benefits.map((t, n) => {
                  const a = (t == null ? void 0 : t.id) || `benefit-${n}`;
                  return c.jsxs(
                      "div",
                      {
                          className: "gh-portal-product-benefit",
                          children: [
                              c.jsx(of, {
                                  className: "gh-portal-benefit-checkmark",
                                  alt: "",
                              }),
                              c.jsx("div", {
                                  className: "gh-portal-benefit-title",
                                  children: t.name,
                              }),
                          ],
                      },
                      a
                  );
              });
    }
    function Kc({ product: e, hide: t = !1 }) {
        if (!e.benefits || !e.benefits.length || t) return null;
        let n = "gh-portal-product-benefits";
        return c.jsx("div", {
            className: n,
            children: c.jsx(Ox, { product: e }),
        });
    }
    function vf({ price: e }) {
        const { site: t } = k.useContext(_),
            { portal_plans: n } = t;
        return !n.includes("monthly") || !n.includes("yearly")
            ? c.jsx("div", { className: "gh-portal-product-alternative-price" })
            : c.jsx("div", {
                  className: "gh-portal-product-alternative-price",
                  children: nx(e),
              });
    }
    function Hx({ trialDays: e, discount: t, selectedInterval: n }) {
        const { site: a, t: r } = k.useContext(_);
        return vo({ site: a })
            ? e
                ? c.jsx("span", {
                      className: "gh-portal-discount-label",
                      children: r("{{trialDays}} days free", { trialDays: e }),
                  })
                : null
            : n === "year"
            ? c.jsx("span", {
                  className: "gh-portal-discount-label",
                  children: r("{{discount}}% discount", { discount: t }),
              })
            : null;
    }
    function wf({ product: e }) {
        const { selectedInterval: t } = k.useContext(la),
            { site: n } = k.useContext(_),
            a = e.monthlyPrice,
            r = e.yearlyPrice,
            i = e.trial_days,
            o = t === "month" ? a : r,
            s = t === "month" ? r : a;
        if (!a || !r) return null;
        const l = Ex(e.monthlyPrice.amount, e.yearlyPrice.amount),
            u = pe(o.currency);
        return vo({ site: n })
            ? c.jsx(c.Fragment, {
                  children: c.jsxs("div", {
                      className: "gh-portal-product-card-pricecontainer",
                      children: [
                          c.jsxs("div", {
                              className: "gh-portal-product-card-price-trial",
                              children: [
                                  c.jsxs("div", {
                                      className: "gh-portal-product-price",
                                      children: [
                                          c.jsx("span", {
                                              className:
                                                  "currency-sign" +
                                                  (u.length > 1 ? " long" : ""),
                                              children: u,
                                          }),
                                          c.jsx("span", {
                                              className: "amount",
                                              "data-testid": "product-amount",
                                              children: ia(Hc(o.amount)),
                                          }),
                                          c.jsxs("span", {
                                              className: "billing-period",
                                              children: ["/", o.interval],
                                          }),
                                      ],
                                  }),
                                  c.jsx(Hx, {
                                      trialDays: i,
                                      discount: l,
                                      selectedInterval: t,
                                  }),
                              ],
                          }),
                          t === "year"
                              ? c.jsx(xf, { discount: l, trialDays: i })
                              : "",
                          c.jsx(vf, { price: s }),
                      ],
                  }),
              })
            : c.jsxs("div", {
                  className: "gh-portal-product-card-pricecontainer",
                  children: [
                      c.jsxs("div", {
                          className: "gh-portal-product-card-price-trial",
                          children: [
                              c.jsxs("div", {
                                  className: "gh-portal-product-price",
                                  children: [
                                      c.jsx("span", {
                                          className:
                                              "currency-sign" +
                                              (u.length > 1 ? " long" : ""),
                                          children: u,
                                      }),
                                      c.jsx("span", {
                                          className: "amount",
                                          "data-testid": "product-amount",
                                          children: ia(Hc(o.amount)),
                                      }),
                                      c.jsxs("span", {
                                          className: "billing-period",
                                          children: ["/", o.interval],
                                      }),
                                  ],
                              }),
                              t === "year" ? c.jsx(xf, { discount: l }) : "",
                          ],
                      }),
                      c.jsx(vf, { price: s }),
                  ],
              });
    }
    function Vx({ products: e, handleChooseSignup: t, error: n }) {
        const { site: a, action: r, t: i } = k.useContext(_),
            { selectedProduct: o, setSelectedProduct: s } = k.useContext(la);
        let l =
            o === "free"
                ? "gh-portal-product-card free checked"
                : "gh-portal-product-card free";
        const u = na({ site: a });
        let m = Vh({ site: a }),
            p = r === "signup:running";
        ta() && (p = !0);
        let d = "$";
        e && e[1] ? (d = pe(e[1].monthlyPrice.currency)) : (d = "$");
        const b = So({ site: a }),
            y = Oh({ site: a });
        if (b) {
            if (!m && !y.length) return null;
            l += " only-free";
        }
        return (
            !m && !y.length && (m = "Free preview"),
            c.jsx(c.Fragment, {
                children: c.jsxs("div", {
                    className: l,
                    onClick: (v) => {
                        v.stopPropagation(), s("free");
                    },
                    "data-test-tier": "free",
                    children: [
                        c.jsxs("div", {
                            className: "gh-portal-product-card-header",
                            children: [
                                c.jsx("h4", {
                                    className: "gh-portal-product-name",
                                    children: Hh({ site: a }),
                                }),
                                b
                                    ? ""
                                    : c.jsx("div", {
                                          className:
                                              "gh-portal-product-card-pricecontainer free-trial-disabled",
                                          children: c.jsxs("div", {
                                              className:
                                                  "gh-portal-product-price",
                                              children: [
                                                  c.jsx("span", {
                                                      className:
                                                          "currency-sign" +
                                                          (d.length > 1
                                                              ? " long"
                                                              : ""),
                                                      children: d,
                                                  }),
                                                  c.jsx("span", {
                                                      className: "amount",
                                                      "data-testid":
                                                          "product-amount",
                                                      children: "0",
                                                  }),
                                              ],
                                          }),
                                      }),
                            ],
                        }),
                        c.jsxs("div", {
                            className: "gh-portal-product-card-details",
                            children: [
                                c.jsxs("div", {
                                    className:
                                        "gh-portal-product-card-detaildata",
                                    children: [
                                        m
                                            ? c.jsx("div", {
                                                  className:
                                                      "gh-portal-product-description",
                                                  "data-testid":
                                                      "product-description",
                                                  children: m,
                                              })
                                            : "",
                                        c.jsx(Kc, { product: u }),
                                    ],
                                }),
                                b
                                    ? ""
                                    : c.jsxs("div", {
                                          className: "gh-portal-btn-product",
                                          children: [
                                              c.jsx("button", {
                                                  "data-test-button":
                                                      "select-tier",
                                                  className: "gh-portal-btn",
                                                  disabled: p,
                                                  onClick: (v) => {
                                                      t(v, "free");
                                                  },
                                                  children:
                                                      o === "free" && p
                                                          ? c.jsx(oa, {
                                                                className:
                                                                    "gh-portal-loadingicon",
                                                            })
                                                          : i("Choose"),
                                              }),
                                              n &&
                                                  c.jsx("div", {
                                                      className:
                                                          "gh-portal-error-message",
                                                      children: n,
                                                  }),
                                          ],
                                      }),
                            ],
                        }),
                    ],
                }),
            })
        );
    }
    function Wx({
        selectedProduct: e,
        product: t,
        disabled: n,
        noOfProducts: a,
        trialDays: r,
    }) {
        const { t: i } = k.useContext(_);
        return e === t.id && n
            ? c.jsx(oa, { className: "gh-portal-loadingicon" })
            : r > 0
            ? c.jsx(Ae, {
                  syntax: Be,
                  string: i("Start {{amount}}-day free trial"),
                  mapping: { amount: r },
              })
            : a > 1
            ? i("Choose")
            : i("Continue");
    }
    function qx({
        product: e,
        products: t,
        selectedInterval: n,
        handleChooseSignup: a,
        error: r,
    }) {
        var b;
        const { selectedProduct: i, setSelectedProduct: o } = k.useContext(la),
            { action: s } = k.useContext(_),
            l = e.trial_days,
            u =
                i === e.id
                    ? "gh-portal-product-card checked"
                    : "gh-portal-product-card",
            m =
                (b = t == null ? void 0 : t.filter((y) => y.type === "paid")) ==
                null
                    ? void 0
                    : b.length;
        let p = !!["signup:running", "checkoutPlan:running"].includes(s);
        ta() && (p = !0);
        let d = e.description;
        return (
            (!e.benefits || !e.benefits.length) && !d && (d = "Full access"),
            c.jsx(c.Fragment, {
                children: c.jsxs(
                    "div",
                    {
                        className: u,
                        onClick: (y) => {
                            y.stopPropagation(), o(e.id);
                        },
                        "data-test-tier": "paid",
                        children: [
                            c.jsxs("div", {
                                className: "gh-portal-product-card-header",
                                children: [
                                    c.jsx("h4", {
                                        className: "gh-portal-product-name",
                                        children: e.name,
                                    }),
                                    c.jsx(wf, { product: e }),
                                ],
                            }),
                            c.jsxs("div", {
                                className: "gh-portal-product-card-details",
                                children: [
                                    c.jsxs("div", {
                                        className:
                                            "gh-portal-product-card-detaildata",
                                        children: [
                                            c.jsx("div", {
                                                className:
                                                    "gh-portal-product-description",
                                                "data-testid":
                                                    "product-description",
                                                children: d,
                                            }),
                                            c.jsx(Kc, { product: e }),
                                        ],
                                    }),
                                    c.jsxs("div", {
                                        className: "gh-portal-btn-product",
                                        children: [
                                            c.jsx("button", {
                                                "data-test-button":
                                                    "select-tier",
                                                disabled: p,
                                                className: "gh-portal-btn",
                                                onClick: (y) => {
                                                    const v = Jc({
                                                        products: t,
                                                        selectedInterval: n,
                                                        selectedProduct: e.id,
                                                    });
                                                    a(y, v.id);
                                                },
                                                children: c.jsx(Wx, {
                                                    selectedProduct: i,
                                                    product: e,
                                                    disabled: p,
                                                    noOfProducts: m,
                                                    trialDays: l,
                                                }),
                                            }),
                                            r &&
                                                c.jsx("div", {
                                                    className:
                                                        "gh-portal-error-message",
                                                    children: r,
                                                }),
                                        ],
                                    }),
                                ],
                            }),
                        ],
                    },
                    e.id
                ),
            })
        );
    }
    function Gx({ product: e, products: t, selectedInterval: n, errors: a }) {
        const r = Jc({
            products: t,
            selectedInterval: n,
            selectedProduct: e.id,
        });
        return r && r.id && a && a[r.id] ? a[r.id] : null;
    }
    function Kx({
        products: e,
        selectedInterval: t,
        handleChooseSignup: n,
        errors: a,
    }) {
        return e.map((r) => {
            const i = Gx({
                product: r,
                products: e,
                selectedInterval: t,
                errors: a,
            });
            return r.id === "free"
                ? c.jsx(
                      Vx,
                      { products: e, handleChooseSignup: n, error: i },
                      r.id
                  )
                : c.jsx(
                      qx,
                      {
                          products: e,
                          product: r,
                          selectedInterval: t,
                          handleChooseSignup: n,
                          error: i,
                      },
                      r.id
                  );
        });
    }
    function xf({ discount: e }) {
        const { site: t, t: n } = k.useContext(_),
            { portal_plans: a } = t;
        return e === 0 || !a.includes("monthly")
            ? null
            : vo({ site: t })
            ? c.jsx(c.Fragment, {
                  children: c.jsx("span", {
                      className: "gh-portal-discount-label-trial",
                      children: n("{{discount}}% discount", { discount: e }),
                  }),
              })
            : c.jsx(c.Fragment, {
                  children: c.jsx("span", {
                      className: "gh-portal-discount-label",
                      children: n("{{discount}}% discount", { discount: e }),
                  }),
              });
    }
    function Sf({ selectedInterval: e, setSelectedInterval: t }) {
        const { site: n, t: a } = k.useContext(_),
            { portal_plans: r } = n;
        return !r.includes("monthly") || !r.includes("yearly")
            ? null
            : c.jsx("div", {
                  className: "gh-portal-logged-out-form-container",
                  children: c.jsxs("div", {
                      className:
                          "gh-portal-products-pricetoggle" +
                          (e === "month" ? " left" : ""),
                      children: [
                          c.jsx("button", {
                              "data-test-button": "switch-monthly",
                              className:
                                  "gh-portal-btn" +
                                  (e === "month" ? " active" : ""),
                              onClick: () => {
                                  t("month");
                              },
                              children: a("Monthly"),
                          }),
                          c.jsx("button", {
                              "data-test-button": "switch-yearly",
                              className:
                                  "gh-portal-btn" +
                                  (e === "year" ? " active" : ""),
                              onClick: () => {
                                  t("year");
                              },
                              children: a("Yearly"),
                          }),
                      ],
                  }),
              });
    }
    function Jc({ products: e, selectedProduct: t, selectedInterval: n }) {
        let a = null;
        if (t === "free") a = { id: "free" };
        else {
            let r = e.find((i) => i.id === t);
            r || (r = e.find((i) => i.type === "paid")),
                (a =
                    n === "month"
                        ? r == null
                            ? void 0
                            : r.monthlyPrice
                        : r == null
                        ? void 0
                        : r.yearlyPrice);
        }
        return a;
    }
    function Io({ portalPlans: e, selectedInterval: t = "year" }) {
        if (t === "month" && e.includes("monthly")) return "month";
        if (t === "year" && e.includes("yearly")) return "year";
        if (e.includes("monthly")) return "month";
        if (e.includes("yearly")) return "year";
    }
    function Ef({
        onPlanSelect: e,
        products: t,
        type: n = null,
        handleChooseSignup: a,
        errors: r,
    }) {
        var w, E;
        const { site: i, member: o, t: s } = k.useContext(_),
            { portal_plans: l } = i,
            u = Io({ portalPlans: l }),
            m = t.length > 0 ? t[0].id : "free",
            [p, d] = k.useState(u),
            [b, y] = k.useState(m),
            v = Jc({ products: t, selectedInterval: p, selectedProduct: b }),
            g = Io({ portalPlans: l, selectedInterval: p }),
            h = Vt({ member: o });
        if (
            (k.useEffect(() => {
                y(m);
            }, [m]),
            k.useEffect(() => {
                e(null, v.id);
            }, [v.id, e]),
            !l.includes("monthly") && !l.includes("yearly"))
        )
            return null;
        if (t.length === 0)
            if (h) {
                const S = xr({ site: i });
                return c.jsx("p", {
                    style: { textAlign: "center" },
                    children: s(
                        "Please contact {{supportAddress}} to adjust your complimentary subscription.",
                        { supportAddress: S }
                    ),
                });
            } else return null;
        let f = "gh-portal-products";
        n === "upgrade" && (f += " gh-portal-upgrade-product");
        let x =
            ((w = t.find((S) => S.id === b)) == null ? void 0 : w.id) ||
            ((E = t.find((S) => S.type === "paid")) == null ? void 0 : E.id);
        return c.jsx(la.Provider, {
            value: {
                selectedInterval: g,
                selectedProduct: x,
                setSelectedProduct: y,
            },
            children: c.jsxs("section", {
                className: f,
                children: [
                    So({ site: i })
                        ? ""
                        : c.jsx(Sf, {
                              products: t,
                              selectedInterval: g,
                              setSelectedInterval: d,
                          }),
                    c.jsx("div", {
                        className: "gh-portal-products-grid",
                        children: c.jsx(Kx, {
                            products: t,
                            selectedInterval: g,
                            handleChooseSignup: a,
                            errors: r,
                        }),
                    }),
                ],
            }),
        });
    }
    function Jx({
        onPlanSelect: e,
        selectedPlan: t,
        products: n,
        type: a = null,
    }) {
        var h;
        const { site: r, member: i } = k.useContext(_),
            { portal_plans: o } = r,
            s = mn({ member: i }),
            l = Gh({ site: r, priceId: s.id }),
            u = Io({ portalPlans: o, selectedInterval: s.interval }),
            m =
                (l == null ? void 0 : l.id) ||
                ((h = n == null ? void 0 : n[0]) == null ? void 0 : h.id),
            [p, d] = k.useState(u),
            [b, y] = k.useState(m),
            v = Io({ portalPlans: o, selectedInterval: p });
        if (
            (k.useEffect(() => {
                y(m);
            }, [m]),
            (!o.includes("monthly") && !o.includes("yearly")) || n.length === 0)
        )
            return null;
        let g = "gh-portal-products";
        return (
            a === "upgrade" && (g += " gh-portal-upgrade-product"),
            a === "changePlan" &&
                (g += " gh-portal-upgrade-product gh-portal-change-plan"),
            c.jsx(la.Provider, {
                value: {
                    selectedInterval: v,
                    selectedProduct: b,
                    selectedPlan: t,
                    setSelectedProduct: y,
                },
                children: c.jsxs("section", {
                    className: g,
                    children: [
                        c.jsx(Sf, {
                            selectedInterval: v,
                            setSelectedInterval: d,
                        }),
                        c.jsx("div", {
                            className: "gh-portal-products-grid",
                            children: c.jsx(Zx, {
                                products: n,
                                onPlanSelect: e,
                            }),
                        }),
                    ],
                }),
            })
        );
    }
    function Qx({ product: e }) {
        return e != null && e.description
            ? c.jsx("div", {
                  className: "gh-portal-product-description",
                  "data-testid": "product-description",
                  children: e.description,
              })
            : null;
    }
    function Xx({ product: e, onPlanSelect: t }) {
        const { member: n, site: a, t: r } = k.useContext(_),
            {
                selectedProduct: i,
                setSelectedProduct: o,
                selectedInterval: s,
            } = k.useContext(la),
            l =
                i === e.id
                    ? "gh-portal-product-card checked"
                    : "gh-portal-product-card",
            u = e.monthlyPrice,
            m = e.yearlyPrice,
            p = mn({ member: n }),
            d = s === "month" ? u : m,
            b = Hw({ member: n, site: a, priceId: d.id });
        return c.jsxs(
            "div",
            {
                className: l + (b ? " disabled" : ""),
                onClick: (y) => {
                    y.stopPropagation(), o(e.id);
                },
                "data-test-tier": "paid",
                children: [
                    c.jsxs("div", {
                        className: "gh-portal-product-card-header",
                        children: [
                            c.jsx("h4", {
                                className: "gh-portal-product-name",
                                children: e.name,
                            }),
                            c.jsx(wf, { product: e }),
                        ],
                    }),
                    c.jsxs("div", {
                        className: "gh-portal-product-card-details",
                        children: [
                            c.jsxs("div", {
                                className: "gh-portal-product-card-detaildata",
                                children: [
                                    e.description
                                        ? c.jsx(Qx, {
                                              product: e,
                                              selectedPrice: d,
                                              activePrice: p,
                                          })
                                        : "",
                                    c.jsx(Kc, { product: e }),
                                ],
                            }),
                            b
                                ? c.jsx("div", {
                                      className: "gh-portal-btn-product",
                                      children: c.jsx("span", {
                                          className: "gh-portal-current-plan",
                                          children: c.jsx("span", {
                                              children: r("Current plan"),
                                          }),
                                      }),
                                  })
                                : c.jsx("div", {
                                      className: "gh-portal-btn-product",
                                      children: c.jsx("button", {
                                          "data-test-button": "select-tier",
                                          className: "gh-portal-btn",
                                          onClick: () => {
                                              t(
                                                  null,
                                                  d == null ? void 0 : d.id
                                              );
                                          },
                                          children: r("Choose"),
                                      }),
                                  }),
                        ],
                    }),
                ],
            },
            e.id
        );
    }
    function Zx({ products: e, onPlanSelect: t }) {
        return e.map((n) =>
            !n || n.id === "free"
                ? null
                : c.jsx(Xx, { product: n, onPlanSelect: t }, n.id)
        );
    }
    function e0({
        products: e,
        selectedPlan: t,
        onPlanSelect: n,
        onPlanCheckout: a,
        changePlan: r = !1,
    }) {
        return (
            ta() && (n = () => {}),
            r
                ? c.jsx("section", {
                      className: "gh-portal-plans",
                      children: c.jsx("div", {
                          children: c.jsx(Jx, {
                              type: "changePlan",
                              products: e,
                              selectedPlan: t,
                              onPlanSelect: n,
                          }),
                      }),
                  })
                : c.jsx("section", {
                      className: "gh-portal-plans",
                      children: c.jsx("div", {
                          children: c.jsx(Ef, {
                              type: "upgrade",
                              products: e,
                              onPlanSelect: n,
                              handleChooseSignup: (...o) => {
                                  a(...o);
                              },
                          }),
                      }),
                  })
        );
    }
    const t0 = `
    .account-plan.full-size .gh-portal-main-title {
        font-size: 3.2rem;
        margin-top: 44px;
    }

    .gh-portal-accountplans-main {
        margin-top: 24px;
        margin-bottom: 0;
    }

    .gh-portal-expire-container {
        margin: 32px 0 0;
    }

    .gh-portal-cancellation-form p {
        margin-bottom: 12px;
    }

    .gh-portal-cancellation-form .gh-portal-input-section {
        margin-bottom: 20px;
    }

    .gh-portal-cancellation-form .gh-portal-input {
        resize: none;
        width: 100%;
        height: 62px;
        padding: 6px 12px;
    }
`;
    function n0({ confirmationType: e, t }) {
        if (e === "changePlan") return t("Confirm subscription");
        if (e === "cancel") return t("Cancel subscription");
        if (e === "subscribe") return t("Subscribe");
    }
    const a0 = ({ showConfirmation: e, confirmationType: t }) => {
            const { member: n, t: a } = k.useContext(_);
            let r = it({ member: n }) ? "Change plan" : "Choose a plan";
            return (
                e && (r = n0({ confirmationType: t, t: a })),
                c.jsx("header", {
                    className: "gh-portal-detail-header",
                    children: c.jsx("h3", {
                        className: "gh-portal-main-title",
                        children: r,
                    }),
                })
            );
        },
        r0 = ({
            member: e,
            onCancelSubscription: t,
            action: n,
            brandColor: a,
        }) => {
            const { site: r, t: i } = k.useContext(_);
            if (!e.paid) return null;
            const o = ze({ member: e });
            if (!o || o.cancel_at_period_end) return null;
            const s = i("Cancel subscription"),
                l = ["cancelSubscription:running"].includes(n),
                u = !!l,
                m = !!o.cancel_at_period_end,
                p = !o.cancelAtPeriodEnd;
            return c.jsx("div", {
                className: "gh-portal-expire-container",
                children: c.jsx(te, {
                    dataTestId: "cancel-subscription",
                    onClick: () => {
                        t({ subscriptionId: o.id, cancelAtPeriodEnd: !0 });
                    },
                    isRunning: l,
                    disabled: u,
                    isPrimary: m,
                    isDestructive: p,
                    classes: go({ site: r })
                        ? "gh-portal-btn-text mt2 mb4"
                        : "",
                    brandColor: a,
                    label: s,
                    style: { width: "100%" },
                }),
            });
        },
        i0 = ({ plan: e, type: t, onConfirm: n }) => {
            const {
                    site: a,
                    action: r,
                    member: i,
                    brandColor: o,
                    t: s,
                } = k.useContext(_),
                [l, u] = k.useState(""),
                m = ze({ member: i }),
                p = [
                    "updateSubscription:running",
                    "checkoutPlan:running",
                    "cancelSubscription:running",
                ].includes(r),
                d = s("Confirm"),
                b = yt(m.current_period_end),
                y = mn({ member: i });
            let v = s("Starting {{startDate}}", { startDate: b });
            y.id !== e.id && (v = s("Starting today"));
            const g = ia(e.price),
                h = `${e.currency_symbol}${g}/${e.interval} – ${v}`,
                f = Gh({ site: a, priceId: e == null ? void 0 : e.id }),
                x = go({ site: a })
                    ? f == null
                        ? void 0
                        : f.name
                    : s("Price");
            return t === "changePlan"
                ? c.jsxs("div", {
                      className: "gh-portal-logged-out-form-container",
                      children: [
                          c.jsxs("div", {
                              className: "gh-portal-list mb6",
                              children: [
                                  c.jsx("section", {
                                      children: c.jsxs("div", {
                                          className: "gh-portal-list-detail",
                                          children: [
                                              c.jsx("h3", {
                                                  children: s("Account"),
                                              }),
                                              c.jsx("p", { children: i.email }),
                                          ],
                                      }),
                                  }),
                                  c.jsx("section", {
                                      children: c.jsxs("div", {
                                          className: "gh-portal-list-detail",
                                          children: [
                                              c.jsx("h3", { children: x }),
                                              c.jsx("p", { children: h }),
                                          ],
                                      }),
                                  }),
                              ],
                          }),
                          c.jsx(te, {
                              dataTestId: "confirm-action",
                              onClick: (w) => n(w, e),
                              isRunning: p,
                              isPrimary: !0,
                              brandColor: o,
                              label: d,
                              style: { width: "100%", height: "40px" },
                          }),
                      ],
                  })
                : c.jsxs("div", {
                      className:
                          "gh-portal-logged-out-form-container gh-portal-cancellation-form",
                      children: [
                          c.jsx("p", {
                              children: c.jsx(Ae, {
                                  syntax: Be,
                                  string: s(
                                      "If you cancel your subscription now, you will continue to have access until {{periodEnd}}."
                                  ),
                                  mapping: {
                                      periodEnd: c.jsx("strong", {
                                          children: yt(m.current_period_end),
                                      }),
                                  },
                              }),
                          }),
                          c.jsxs("section", {
                              className: "gh-portal-input-section",
                              children: [
                                  c.jsx("div", {
                                      className:
                                          "gh-portal-input-labelcontainer",
                                      children: c.jsx("label", {
                                          className: "gh-portal-input-label",
                                          children: s("Cancellation reason"),
                                      }),
                                  }),
                                  c.jsx(
                                      "textarea",
                                      {
                                          "data-test-input":
                                              "cancellation-reason",
                                          className: "gh-portal-input",
                                          label: "Cancellation reason",
                                          type: "text",
                                          name: "cancellation_reason",
                                          placeholder: "",
                                          value: l,
                                          onChange: (w) => u(w.target.value),
                                          rows: "2",
                                          maxLength: "500",
                                      },
                                      "cancellation_reason"
                                  ),
                              ],
                          }),
                          c.jsx(te, {
                              dataTestId: "confirm-cancel-subscription",
                              onClick: (w) => n(w, l),
                              isRunning: p,
                              isPrimary: !0,
                              brandColor: o,
                              label: s("Confirm cancellation"),
                              style: { width: "100%", height: "40px" },
                          }),
                      ],
                  });
        },
        o0 = ({
            plans: e,
            selectedPlan: t,
            onPlanSelect: n,
            onCancelSubscription: a,
        }) => {
            const { member: r, action: i, brandColor: o } = k.useContext(_);
            return c.jsxs("section", {
                children: [
                    c.jsx("div", {
                        className:
                            "gh-portal-section gh-portal-accountplans-main",
                        children: c.jsx(Cf, {
                            showLabel: !1,
                            plans: e,
                            selectedPlan: t,
                            onPlanSelect: n,
                            changePlan: !0,
                        }),
                    }),
                    c.jsx(r0, {
                        member: r,
                        onCancelSubscription: a,
                        action: i,
                        brandColor: o,
                    }),
                ],
            });
        };
    function Cf({
        selectedPlan: e,
        onPlanSelect: t,
        onPlanCheckout: n,
        changePlan: a = !1,
    }) {
        const { site: r, member: i } = k.useContext(_),
            o = Bw({ site: r, member: i }),
            s = Vt({ member: i }),
            l = Ow({ member: i, site: r });
        return c.jsx(e0, {
            products: o.length > 0 || s ? o : [l],
            selectedPlan: e,
            changePlan: a,
            onPlanSelect: t,
            onPlanCheckout: n,
        });
    }
    const s0 = ({
            plans: e,
            selectedPlan: t,
            onPlanSelect: n,
            onPlanCheckout: a,
        }) => {
            let r = "";
            return (
                e.length === 1 && (r = "singleplan"),
                c.jsx("section", {
                    children: c.jsx("div", {
                        className: `gh-portal-section gh-portal-accountplans-main ${r}`,
                        children: c.jsx(Cf, {
                            showLabel: !1,
                            plans: e,
                            selectedPlan: t,
                            onPlanSelect: n,
                            onPlanCheckout: a,
                        }),
                    }),
                })
            );
        },
        l0 = ({
            plans: e,
            selectedPlan: t,
            confirmationPlan: n,
            confirmationType: a,
            showConfirmation: r = !1,
            onPlanSelect: i,
            onPlanCheckout: o,
            onConfirm: s,
            onCancelSubscription: l,
        }) => {
            const { member: u } = k.useContext(_),
                m = vr({ member: u }) && Vt({ member: u });
            return !it({ member: u }) || m
                ? c.jsx(s0, {
                      plans: e,
                      selectedPlan: t,
                      onPlanSelect: i,
                      onPlanCheckout: o,
                  })
                : r
                ? c.jsx(i0, { plan: n, type: a, onConfirm: s })
                : c.jsx(o0, {
                      plans: e,
                      selectedPlan: t,
                      onCancelSubscription: l,
                      onPlanSelect: i,
                  });
        };
    class $f extends R.Component {
        constructor(n, a) {
            super(n, a);
            J(this, "onPlanSelect", (n, a) => {
                n == null || n.preventDefault();
                const { member: r } = this.context,
                    i = vr({ member: r }) ? Vt({ member: r }) : !1;
                if (!it({ member: r }) || i)
                    this.timeoutId = setTimeout(() => {
                        this.setState(() => ({ selectedPlan: a }));
                    }, 5);
                else {
                    const o = this.prices.find((u) => u.id === a),
                        l = this.getActivePriceId({ member: r })
                            ? "changePlan"
                            : "subscribe";
                    a !== this.state.selectedPlan &&
                        this.setState({
                            confirmationPlan: o,
                            confirmationType: l,
                            showConfirmation: !0,
                        });
                }
            });
            this.state = this.getInitialState();
        }
        componentDidMount() {
            const { member: n } = this.context;
            n || this.context.onAction("switchPage", { page: "signin" });
        }
        componentWillUnmount() {
            clearTimeout(this.timeoutId);
        }
        getInitialState() {
            const { member: n, site: a } = this.context;
            this.prices = Eo({ site: a });
            let r = mn({ member: n });
            r &&
                (this.prices = Fw({
                    prices: this.prices,
                    currency: r.currency,
                }));
            let i = r ? this.prices.find((s) => s.id === r.id) : null;
            return (
                !it({ member: n }) &&
                    this.prices.length > 0 &&
                    (i = this.prices[0]),
                { selectedPlan: i ? i.id : null }
            );
        }
        handleSignout(n) {
            n.preventDefault(), this.context.onAction("signout");
        }
        onBack() {
            this.state.showConfirmation
                ? this.cancelConfirmPage()
                : this.context.onAction("back");
        }
        cancelConfirmPage() {
            this.setState({
                showConfirmation: !1,
                confirmationPlan: null,
                confirmationType: null,
            });
        }
        onPlanCheckout(n, a) {
            const { onAction: r, member: i } = this.context;
            let { confirmationPlan: o, selectedPlan: s } = this.state;
            a && (s = a);
            const l = vr({ member: i }) ? !Vt({ member: i }) : !0;
            if (it({ member: i }) && l) {
                const u = ze({ member: i }),
                    m = u ? u.id : "";
                m &&
                    r("updateSubscription", {
                        plan: o.name,
                        planId: o.id,
                        subscriptionId: m,
                        cancelAtPeriodEnd: !1,
                    });
            } else r("checkoutPlan", { plan: s });
        }
        onCancelSubscription({ subscriptionId: n }) {
            const { member: a } = this.context,
                r = Vw({ subscriptionId: n, member: a }),
                i = Yc({ subscription: r });
            this.setState({
                showConfirmation: !0,
                confirmationPlan: i,
                confirmationType: "cancel",
            });
        }
        onCancelSubscriptionConfirmation(n) {
            const { member: a } = this.context,
                r = ze({ member: a });
            if (!r) return null;
            this.context.onAction("cancelSubscription", {
                subscriptionId: r.id,
                cancelAtPeriodEnd: !0,
                cancellationReason: n,
            });
        }
        getActivePriceId({ member: n }) {
            const a = mn({ member: n });
            return a ? a.id : null;
        }
        onConfirm(n, a) {
            const { confirmationType: r } = this.state;
            if (r === "cancel") return this.onCancelSubscriptionConfirmation(a);
            if (["changePlan", "subscribe"].includes(r))
                return this.onPlanCheckout();
        }
        render() {
            const n = this.prices,
                {
                    selectedPlan: a,
                    showConfirmation: r,
                    confirmationPlan: i,
                    confirmationType: o,
                } = this.state,
                { lastPage: s } = this.context;
            return c.jsx(c.Fragment, {
                children: c.jsxs("div", {
                    className: "gh-portal-content",
                    children: [
                        c.jsx(sa, {
                            onClick: (l) => this.onBack(l),
                            hidden: !s && !r,
                        }),
                        c.jsx(ne, {}),
                        c.jsx(a0, {
                            onBack: (l) => this.onBack(l),
                            confirmationType: o,
                            showConfirmation: r,
                        }),
                        c.jsx(l0, {
                            plans: n,
                            selectedPlan: a,
                            showConfirmation: r,
                            confirmationPlan: i,
                            confirmationType: o,
                            onConfirm: (...l) => this.onConfirm(...l),
                            onCancelSubscription: (l) =>
                                this.onCancelSubscription(l),
                            onPlanSelect: this.onPlanSelect,
                            onPlanCheckout: (l, u) => this.onPlanCheckout(l, u),
                        }),
                    ],
                }),
            });
        }
    }
    J($f, "contextType", _);
    const c0 = `
    .gh-portal-input {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;

        display: block;
        box-sizing: border-box;
        font-size: 1.5rem;
        color: inherit;
        background: transparent;
        outline: none;
        border: 1px solid var(--grey11);
        border-radius: 6px;
        width: 100%;
        height: 44px;
        padding: 0 12px;
        margin-bottom: 18px;
        letter-spacing: 0.2px;
        transition: border-color 0.25s ease-in-out;
    }

    .gh-portal-input-labelcontainer {
        display: flex;
        justify-content: space-between;
        width: 100%;
    }

    .gh-portal-input-labelcontainer p {
        color: var(--red);
        font-size: 1.3rem;
        letter-spacing: 0.35px;
        line-height: 1.6em;
        margin-bottom: 0;
    }

    .gh-portal-input-label.hidden {
        display: none;
    }

    .gh-portal-input:focus {
        border-color: var(--grey8);
    }

    .gh-portal-input.error {
        border-color: var(--red);
    }

    .gh-portal-input::placeholder {
        color: var(--grey8);
    }

    .gh-portal-popup-container:not(.preview) .gh-portal-input:disabled {
        background: var(--grey13);
        color: var(--grey9);
        box-shadow: none;
    }

    .gh-portal-popup-container:not(.preview) .gh-portal-input:disabled::placeholder {
        color: var(--grey9);
    }
`;
    function u0({ message: e, style: t }) {
        return e ? c.jsx("p", { style: { ...(t || {}) }, children: e }) : null;
    }
    function d0({
        name: e,
        id: t,
        label: n,
        hideLabel: a,
        type: r,
        value: i,
        placeholder: o,
        disabled: s = !1,
        onChange: l = () => {},
        onBlur: u = () => {},
        onKeyDown: m = () => {},
        tabindex: p,
        maxlength: d,
        autoFocus: b,
        errorMessage: y,
    }) {
        const v = k.useRef(null);
        t = t || `input-${e}`;
        const g = a ? "gh-portal-input-label hidden" : "gh-portal-input-label",
            h = y ? "gh-portal-input error" : "gh-portal-input";
        ta() && (s = !0), V(["preview"]) && (s = !0);
        let f = "",
            x = "",
            w = "";
        switch (t) {
            case "input-email":
                (f = "off"), (x = "off"), (w = "off");
                break;
            case "input-name":
                (f = "off"), (x = "off");
                break;
        }
        return (
            k.useEffect(() => {
                b && v.current.focus();
            }, [b]),
            c.jsxs("section", {
                className: "gh-portal-input-section",
                children: [
                    c.jsxs("div", {
                        className: "gh-portal-input-labelcontainer",
                        children: [
                            c.jsxs("label", {
                                htmlFor: t,
                                className: g,
                                children: [" ", n, " "],
                            }),
                            c.jsx(u0, { message: y, name: e }),
                        ],
                    }),
                    c.jsx("input", {
                        "data-test-input": t,
                        ref: v,
                        id: t,
                        className: h,
                        type: r,
                        name: e,
                        value: i,
                        placeholder: o,
                        onChange: (E) => l(E, e),
                        onKeyDown: (E) => m(E, e),
                        onBlur: (E) => u(E, e),
                        disabled: s,
                        tabIndex: p,
                        maxLength: d,
                        autoComplete: f,
                        autoCorrect: x,
                        autoCapitalize: w,
                        "aria-label": n,
                    }),
                ],
            })
        );
    }
    class jf extends R.Component {
        render() {
            const { t } = this.context;
            return c.jsx(c.Fragment, {
                children: c.jsxs("button", {
                    className: "gh-portal-btn gh-portal-btn-site-title-back",
                    onClick: () => {
                        this.props.onBack
                            ? this.props.onBack()
                            : this.context.onAction("closePopup");
                    },
                    children: [
                        c.jsx("span", { children: "← " }),
                        " ",
                        t("Back"),
                    ],
                }),
            });
        }
    }
    J(jf, "contextType", _);
    const m0 = (e) =>
        k.createElement(
            "svg",
            { xmlns: "http://www.w3.org/2000/svg", viewBox: "0 0 16 16", ...e },
            k.createElement(
                "g",
                {
                    transform:
                        "matrix(0.6666666666666666,0,0,0.6666666666666666,0,0)",
                },
                k.createElement("path", {
                    d: "M19.5,9.5h-.75V6.75a6.75,6.75,0,0,0-13.5,0V9.5H4.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h15a2,2,0,0,0,2-2V11.5A2,2,0,0,0,19.5,9.5Zm-7.5,9a2,2,0,1,1,2-2A2,2,0,0,1,12,18.5ZM16.25,9a.5.5,0,0,1-.5.5H8.25a.5.5,0,0,1-.5-.5V6.75a4.25,4.25,0,0,1,8.5,0Z",
                    style: { fill: "#000000" },
                })
            )
        );
    function p0({
        newsletter: e,
        subscribedNewsletters: t,
        setSubscribedNewsletters: n,
        t: a,
    }) {
        const r = t.some((i) => i.id === (e == null ? void 0 : e.id));
        return e.paid
            ? c.jsxs("section", {
                  className: "gh-portal-list-toggle-wrapper",
                  "data-test-toggle-wrapper": !0,
                  children: [
                      c.jsxs("div", {
                          className: "gh-portal-list-detail gh-portal-list-big",
                          children: [
                              c.jsx("h3", { children: e.name }),
                              c.jsx("p", { children: e.description }),
                          ],
                      }),
                      c.jsx("div", {
                          className: "gh-portal-lock-icon-container",
                          children: c.jsx(m0, {
                              className: "gh-portal-lock-icon",
                              alt: "",
                              title: a(
                                  "Unlock access to all newsletters by becoming a paid subscriber."
                              ),
                          }),
                      }),
                  ],
              })
            : c.jsxs("section", {
                  className: "gh-portal-list-toggle-wrapper",
                  "data-test-toggle-wrapper": !0,
                  children: [
                      c.jsxs("div", {
                          className: "gh-portal-list-detail gh-portal-list-big",
                          children: [
                              c.jsx("h3", { children: e.name }),
                              c.jsx("p", { children: e.description }),
                          ],
                      }),
                      c.jsx("div", {
                          children: c.jsx(jo, {
                              id: e.id,
                              onToggle: (i, o) => {
                                  let s = [];
                                  o
                                      ? (s = t
                                            .filter((l) => l.id !== e.id)
                                            .concat(e))
                                      : (s = t.filter((l) => l.id !== e.id)),
                                      n(s);
                              },
                              checked: r,
                          }),
                      }),
                  ],
              });
    }
    function h0({ subscribedNewsletters: e, setSubscribedNewsletters: t }) {
        const { site: n, t: a } = k.useContext(_);
        return ra({ site: n }).map((i) =>
            c.jsx(
                p0,
                {
                    newsletter: i,
                    subscribedNewsletters: e,
                    setSubscribedNewsletters: t,
                    t: a,
                },
                i == null ? void 0 : i.id
            )
        );
    }
    function Qc({ pageData: e, onBack: t }) {
        const {
                brandColor: n,
                site: a,
                onAction: r,
                action: i,
                t: o,
            } = k.useContext(_),
            l = ra({ site: a }).filter((v) => v.subscribe_on_signup);
        let u = !1;
        i === "signup:running" && (u = !0);
        let m = o("Continue"),
            p = !1;
        i === "signup:failed" && ((m = o("Retry")), (p = !0));
        const d = i === "signup:running",
            [b, y] = k.useState(l);
        return c.jsxs("div", {
            className:
                "gh-portal-content with-footer gh-portal-newsletter-selection",
            children: [
                c.jsx("p", {
                    className: "gh-portal-text-center gh-portal-text-large",
                    children: o("Choose your newsletters"),
                }),
                c.jsx("div", {
                    className: "gh-portal-section",
                    children: c.jsx("div", {
                        className: "gh-portal-list",
                        children: c.jsx(h0, {
                            subscribedNewsletters: b,
                            setSubscribedNewsletters: y,
                        }),
                    }),
                }),
                c.jsx("footer", {
                    className: "gh-portal-action-footer",
                    children: c.jsxs("div", {
                        style: { width: "100%" },
                        children: [
                            c.jsx("div", {
                                style: { marginBottom: "20px" },
                                children: c.jsx(te, {
                                    isRunning: u,
                                    retry: p,
                                    disabled: d,
                                    onClick: () => {
                                        let v = b.map((w) => ({ id: w.id }));
                                        const {
                                            name: g,
                                            email: h,
                                            plan: f,
                                            offerId: x,
                                        } = e;
                                        r("signup", {
                                            name: g,
                                            email: h,
                                            plan: f,
                                            newsletters: v,
                                            offerId: x,
                                        });
                                    },
                                    brandColor: n,
                                    label: m,
                                    style: { width: "100%" },
                                }),
                            }),
                            wr({ site: a })
                                ? null
                                : c.jsx("div", {
                                      children: c.jsx("button", {
                                          className:
                                              "gh-portal-btn gh-portal-btn-link gh-portal-btn-different-plan",
                                          onClick: () => {
                                              t();
                                          },
                                          children: c.jsx("span", {
                                              children: o(
                                                  "Choose a different plan"
                                              ),
                                          }),
                                      }),
                                  }),
                        ],
                    }),
                }),
            ],
        });
    }
    const f0 = ({
        field: e,
        onChange: t,
        onBlur: n = () => {},
        onKeyDown: a = () => {},
    }) =>
        e
            ? c.jsx(c.Fragment, {
                  children: c.jsx(
                      d0,
                      {
                          label: e.label,
                          type: e.type,
                          name: e.name,
                          placeholder: e.placeholder,
                          disabled: e.disabled,
                          value: e.value,
                          onKeyDown: a,
                          onChange: (r) => t(r, e),
                          onBlur: (r) => n(r, e),
                          tabIndex: e.tabindex,
                          errorMessage: e.errorMessage,
                          autoFocus: e.autoFocus,
                      },
                      e.name
                  ),
              })
            : null;
    class zo extends k.Component {
        constructor(t) {
            super(t), (this.state = {});
        }
        render() {
            const {
                    fields: t,
                    onChange: n,
                    onBlur: a,
                    onKeyDown: r,
                } = this.props,
                i = t.map((o) =>
                    c.jsx(
                        f0,
                        { field: o, onChange: n, onBlur: a, onKeyDown: r },
                        o.name
                    )
                );
            return c.jsx(c.Fragment, { children: i });
        }
    }
    const g0 = (e) =>
            !!e &&
            /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(
                String(e).toLowerCase()
            ),
        b0 = ({ field: e }) => {
            if (e.required && !e.value)
                switch (e.name) {
                    case "name":
                        return "Enter your name";
                    case "email":
                        return "Enter your email address";
                    default:
                        return `Please enter ${e.name}`;
                }
            return e.type === "email" && !g0(e.value)
                ? "Invalid email address"
                : null;
        },
        Ao = ({ fields: e }) => {
            const t = {};
            return (
                e.forEach((n) => {
                    const a = n.name,
                        r = b0({ field: n });
                    t[a] = r;
                }),
                t
            );
        },
        Xc = (e) =>
            k.createElement(
                "svg",
                {
                    xmlns: "http://www.w3.org/2000/svg",
                    width: 24,
                    height: 24,
                    viewBox: "0 0 24 24",
                    ...e,
                },
                k.createElement(
                    "defs",
                    null,
                    k.createElement(
                        "style",
                        null,
                        ".inviteicon{fill: currentColor;}"
                    )
                ),
                k.createElement("path", {
                    className: "inviteicon",
                    d: "M23.991 11.464l-.036-.146-.028-.068-.011-.027-.115-.114-.018-.021-.008-.005h-.001l-3.774-2.596v-7.987c0-.276-.224-.5-.5-.5h-15c-.276 0-.5.224-.5.5v7.987l-3.774 2.595-.003.002-.006.004-.015.016-.118.118-.011.027-.028.068-.036.146-.009.037v10.5c0 1.103.897 2 2 2h20c1.103 0 2-.897 2-2v-10.5l-.009-.036zm-1.383.03l-2.608 1.738v-3.531l2.608 1.793zm-18.608 1.738l-2.608-1.739 2.608-1.792v3.531zm18 9.768h-20c-.551 0-1-.449-1-1v-9.566l5.223 3.482c.085.057.181.084.276.084.162 0 .32-.078.417-.223.153-.23.091-.54-.139-.693l-1.777-1.185v-12.899h14v12.899l-1.777 1.185c-.23.153-.292.463-.139.693.096.145.255.223.416.223.095 0 .191-.027.277-.084l5.223-3.482v9.566c0 .551-.449 1-1 1zM15.812 16.109c-.088-.07-.198-.109-.312-.109h-7c-.114 0-.224.039-.312.109l-5 4c-.215.173-.25.487-.078.703.173.215.487.251.703.078l4.862-3.89h6.649l4.863 3.891c.093.073.203.109.313.109.147 0 .292-.065.391-.188.172-.216.137-.53-.078-.703l-5.001-4zM11.706 12.779c.087.064.191.096.294.096s.207-.032.294-.096c.482-.35 4.706-3.497 4.706-6.101 0-1.868-1.387-2.984-2.728-2.984-.772 0-1.674.379-2.272 1.368-.598-.988-1.5-1.368-2.272-1.368-1.341-.001-2.728 1.116-2.728 2.984 0 2.604 4.224 5.751 4.706 6.101zm-1.978-8.086c.844 0 1.511.681 1.786 1.822.108.45.864.45.973 0 .274-1.141.942-1.822 1.786-1.822.85 0 1.728.742 1.728 1.984 0 1.646-2.658 4.037-4 5.072-1.342-1.035-4-3.426-4-5.072-.001-1.241.877-1.984 1.727-1.984z",
                })
            ),
        y0 = `
.gh-portal-back-sitetitle {
    position: absolute;
    top: 35px;
    left: 32px;
}

.gh-portal-back-sitetitle .gh-portal-btn {
    padding: 0;
    border: 0;
    font-size: 1.5rem;
    height: auto;
    line-height: 1em;
    color: var(--grey1);
}

.gh-portal-popup-wrapper:not(.full-size) .gh-portal-back-sitetitle,
.gh-portal-popup-wrapper.preview .gh-portal-back-sitetitle {
    display: none;
}

.gh-portal-signup-logo {
    position: relative;
    display: block;
    background-position: 50%;
    background-size: cover;
    border-radius: 2px;
    width: 60px;
    height: 60px;
    margin: 12px 0 10px;
}

.gh-portal-signup-header,
.gh-portal-signin-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0 32px;
    margin-bottom: 32px;
}

.gh-portal-popup-wrapper.full-size .gh-portal-signup-header {
    margin-top: 32px;
}

.gh-portal-signup-header .gh-portal-main-title,
.gh-portal-signin-header .gh-portal-main-title {
    margin-top: 12px;
}

.gh-portal-signup-logo + .gh-portal-main-title {
    margin: 4px 0 0;
}

.gh-portal-signup-header .gh-portal-main-subtitle {
    font-size: 1.5rem;
    text-align: center;
    line-height: 1.45em;
    margin: 4px 0 0;
    color: var(--grey3);
}

.gh-portal-logged-out-form-container {
    width: 100%;
    max-width: 420px;
    margin: 0 auto;
}

.signup .gh-portal-input-section:last-of-type {
    margin-bottom: 40px;
}

.gh-portal-signup-message {
    display: flex;
    justify-content: center;
    color: var(--grey4);
    font-size: 1.5rem;
    margin: 16px 0 0;
}

.gh-portal-signup-message,
.gh-portal-signup-message * {
    z-index: 9999;
}

.full-size .gh-portal-signup-message {
    margin: 24px 0 40px;
}

@media (max-width: 480px) {
    .preview .gh-portal-products + .gh-portal-signup-message {
        margin-bottom: 40px;
    }
}

.gh-portal-signup-message button {
    font-size: 1.4rem;
    font-weight: 600;
    margin-left: 4px !important;
}

.gh-portal-signup-message button span {
    display: inline-block;
    padding-bottom: 2px;
    margin-bottom: -2px;
}

.gh-portal-content.signup.invite-only {
    background: none;
}

footer.gh-portal-signup-footer,
footer.gh-portal-signin-footer {
    display: flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    padding-top: 24px;
    height: unset;
}

.gh-portal-content.signup,
.gh-portal-content.signin {
    max-height: unset !important;
    padding-bottom: 0;
}

.gh-portal-content.signin {
    padding-bottom: 4px;
}

.gh-portal-content.signup .gh-portal-section {
    margin-bottom: 0;
}

.gh-portal-content.signup.single-field {
    margin-bottom: 4px;
}

.gh-portal-content.signup.single-field .gh-portal-input,
.gh-portal-content.signin .gh-portal-input {
    margin-bottom: 8px;
}

.gh-portal-content.signup.single-field + .gh-portal-signup-footer,
footer.gh-portal-signin-footer {
    padding-top: 12px;
}

.gh-portal-content.signin .gh-portal-section {
    margin-bottom: 0;
}

footer.gh-portal-signup-footer.invite-only {
    height: unset;
}

footer.gh-portal-signup-footer.invite-only .gh-portal-signup-message {
    margin-top: 0;
}

.gh-portal-invite-only-notification, .gh-portal-members-disabled-notification {
    margin: 8px 32px 24px;
    padding: 0;
    text-align: center;
    color: var(--grey2);
}

.gh-portal-icon-invitation {
    width: 44px;
    height: 44px;
    margin: 12px 0 2px;
}

.gh-portal-popup-wrapper.full-size .gh-portal-popup-container.preview footer.gh-portal-signup-footer {
    padding-bottom: 32px;
}

.gh-portal-invite-only-notification + .gh-portal-signup-message {
    margin-bottom: 12px;
}

.gh-portal-free-trial-notification {
    max-width: 480px;
    text-align: center;
    margin: 24px auto;
    color: var(--grey4);
}

.gh-portal-signup-terms-wrapper {
    width: 100%;
    max-width: 420px;
    margin: -16px auto 36px;
}

.gh-portal-signup-terms-wrapper.free-only {
    margin: 0 auto;
}

.gh-portal-products + .gh-portal-signup-terms-wrapper.free-only {
    margin: 20px auto 0;
}

.gh-portal-signup-terms label {
    position: relative;
    display: flex;
    gap: 10px;
    cursor: pointer;
}

.gh-portal-signup-terms input {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    display: none;
}

.gh-portal-signup-terms .checkbox {
    position: relative;
    top: 1px;
    flex-shrink: 0;
    display: inline-block;
    float: left;
    width: 18px;
    height: 18px;
    margin: 1px 0 0;
    background: var(--white);
    border: 1px solid var(--grey10);
    border-radius: 4px;
    transition: background 0.15s ease-in-out, border-color 0.15s ease-in-out;
}

.gh-portal-signup-terms label:hover input:not(:checked) + .checkbox {
    border-color: var(--grey9);
}

.gh-portal-signup-terms .checkbox:before {
    content: "";
    position: absolute;
    top: 4px;
    left: 3px;
    width: 10px;
    height: 6px;
    border: 2px solid var(--white);
    border-top: none;
    border-right: none;
    opacity: 0;
    transition: opacity 0.15s ease-in-out;
    transform: rotate(-45deg);
}

.gh-portal-signup-terms input:checked + .checkbox {
    border-color: var(--black);
    background: var(--black);
}

.gh-portal-signup-terms input:checked + .checkbox:before {
    opacity: 1;
}

.gh-portal-signup-terms.gh-portal-error .checkbox,
.gh-portal-signup-terms.gh-portal-error label:hover input:not(:checked) + .checkbox {
    border: 1px solid var(--red);
    box-shadow: 0 0 0 3px rgb(240, 37, 37, .15);
}

.gh-portal-signup-terms.gh-portal-error input:checked + .checkbox {
    box-shadow: none;
}

.gh-portal-signup-terms-content {
    color: var(--grey4);
    font-size: 1.5rem;
    line-height: 1.5em;
}

.gh-portal-error .gh-portal-signup-terms-content {
    line-height: 1.5em;
}

.gh-portal-signup-terms-content a {
    color: var(--brandcolor);
    font-weight: 500;
    text-decoration: none;
}

@media (min-width: 480px) {

}

@media (max-width: 480px) {
    .gh-portal-signup-logo {
        width: 48px;
        height: 48px;
    }
}

@media (min-width: 480px) and (max-width: 820px) {
    .gh-portal-powered.outside {
        left: 50%;
        transform: translateX(-50%);
    }
}
`;
    class Pf extends R.Component {
        constructor(n) {
            super(n);
            J(this, "handleSelectPlan", (n, a) => {
                n && n.preventDefault(),
                    (this.timeoutId = setTimeout(() => {
                        this.setState(() => ({ plan: a }));
                    }, 5));
            });
            this.state = {
                name: "",
                email: "",
                plan: "free",
                showNewsletterSelection: !1,
                termsCheckboxChecked: !1,
            };
        }
        componentDidMount() {
            const { member: n } = this.context;
            n && this.context.onAction("switchPage", { page: "accountHome" }),
                this.handleSelectedPlan();
        }
        componentDidUpdate() {
            this.handleSelectedPlan();
        }
        handleSelectedPlan() {
            const { site: n, pageQuery: a } = this.context,
                r = Co({ site: n, pageQuery: a }),
                i = this.getSelectedPriceId(r, this.state.plan);
            i !== this.state.plan && this.setState({ plan: i });
        }
        componentWillUnmount() {
            clearTimeout(this.timeoutId);
        }
        getFormErrors(n) {
            const r =
                this.context.site.portal_signup_checkbox_required &&
                this.context.site.portal_signup_terms_html &&
                !n.termsCheckboxChecked;
            return {
                ...Ao({ fields: this.getInputFields({ state: n }) }),
                checkbox: r,
            };
        }
        doSignup() {
            this.setState(
                (n) => ({ errors: this.getFormErrors(n) }),
                () => {
                    const { site: n, onAction: a } = this.context,
                        { name: r, email: i, plan: o, errors: s } = this.state;
                    (s && Object.values(s).filter((u) => !!u).length > 0) ||
                        (xo({ site: n })
                            ? this.setState({
                                  showNewsletterSelection: !0,
                                  pageData: { name: r, email: i, plan: o },
                                  errors: {},
                              })
                            : (this.setState({ errors: {} }),
                              a("signup", { name: r, email: i, plan: o })));
                }
            );
        }
        handleSignup(n) {
            n.preventDefault(), this.doSignup();
        }
        handleChooseSignup(n, a) {
            n.preventDefault(),
                this.setState({ plan: a }, () => {
                    this.doSignup();
                });
        }
        handleInputChange(n, a) {
            const r = a.name,
                i = n.target.value;
            this.setState({ [r]: i });
        }
        onKeyDown(n) {
            n.keyCode === 13 && this.handleSignup(n);
        }
        getSelectedPriceId(n = [], a) {
            return !n || n.length === 0
                ? "free"
                : n.some((i) => i.id === a)
                ? a
                : n[0].id || "free";
        }
        getInputFields({ state: n, fieldNames: a }) {
            const {
                    site: { portal_name: r },
                    t: i,
                } = this.context,
                o = n.errors || {},
                s = [
                    {
                        type: "email",
                        value: n.email,
                        placeholder: "jamie@example.com",
                        label: i("Email"),
                        name: "email",
                        required: !0,
                        tabindex: 2,
                        errorMessage: o.email || "",
                    },
                ];
            return (
                r &&
                    s.unshift({
                        type: "text",
                        value: n.name,
                        placeholder: "Jamie Larson",
                        label: i("Name"),
                        name: "name",
                        required: !0,
                        tabindex: 1,
                        errorMessage: o.name || "",
                    }),
                (s[0].autoFocus = !0),
                a && a.length > 0 ? s.filter((l) => a.includes(l.name)) : s
            );
        }
        renderSignupTerms() {
            var u;
            const { site: n } = this.context;
            if (
                n.portal_signup_terms_html === null ||
                n.portal_signup_terms_html === ""
            )
                return null;
            const a = (m) => {
                    this.setState({ termsCheckboxChecked: m.target.checked });
                },
                r = c.jsx("div", {
                    className: "gh-portal-signup-terms-content",
                    dangerouslySetInnerHTML: {
                        __html: n.portal_signup_terms_html,
                    },
                }),
                i = n.portal_signup_checkbox_required
                    ? c.jsxs("label", {
                          children: [
                              c.jsx("input", {
                                  type: "checkbox",
                                  checked: !!this.state.termsCheckboxChecked,
                                  required: !0,
                                  onChange: a,
                              }),
                              c.jsx("span", { className: "checkbox" }),
                              r,
                          ],
                      })
                    : r,
                s = `gh-portal-signup-terms ${
                    (u = this.state.errors) != null && u.checkbox
                        ? "gh-portal-error"
                        : ""
                }`,
                l = (m) => {
                    m.target.tagName === "A" &&
                        (m.preventDefault(),
                        window.open(m.target.href, "_blank"));
                };
            return c.jsx("div", { className: s, onClick: l, children: i });
        }
        renderSubmitButton() {
            const {
                action: n,
                site: a,
                brandColor: r,
                pageQuery: i,
                t: o,
            } = this.context;
            if (ot({ site: a, pageQuery: i })) return null;
            let s = o("Continue");
            const l = i === "free";
            if (wr({ site: a }) || l) s = o("Sign up");
            else return null;
            let u = !1;
            n === "signup:running" && ((s = o("Sending...")), (u = !0));
            let m = !1;
            n === "signup:failed" && ((s = o("Retry")), (m = !0));
            const p = n === "signup:running";
            return c.jsx(te, {
                style: { width: "100%" },
                retry: m,
                onClick: (d) => this.handleSignup(d),
                disabled: p,
                brandColor: r,
                label: s,
                isRunning: u,
                tabIndex: "3",
            });
        }
        renderProducts() {
            const { site: n, pageQuery: a, t: r } = this.context,
                i = ko({ site: n, pageQuery: a }),
                o = this.state.errors || {},
                s = {};
            return (
                Object.keys(o).length > 0 &&
                    this.state.plan &&
                    (s[this.state.plan] = r("Please fill in required fields")),
                c.jsx(c.Fragment, {
                    children: c.jsx(Ef, {
                        handleChooseSignup: (...l) =>
                            this.handleChooseSignup(...l),
                        products: i,
                        onPlanSelect: this.handleSelectPlan,
                        errors: s,
                    }),
                })
            );
        }
        renderFreeTrialMessage() {
            const { site: n, t: a, pageQuery: r } = this.context;
            return vo({ site: n, pageQuery: r }) && !ot({ site: n })
                ? c.jsx("p", {
                      className: "gh-portal-free-trial-notification",
                      "data-testid": "free-trial-notification-text",
                      children: a(
                          "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then."
                      ),
                  })
                : null;
        }
        renderLoginMessage() {
            const { brandColor: n, onAction: a, t: r } = this.context;
            return c.jsxs("div", {
                children: [
                    this.renderFreeTrialMessage(),
                    c.jsxs("div", {
                        className: "gh-portal-signup-message",
                        children: [
                            c.jsx("div", { children: r("Already a member?") }),
                            c.jsx("button", {
                                "data-test-button": "signin-switch",
                                className: "gh-portal-btn gh-portal-btn-link",
                                style: { color: n },
                                onClick: () =>
                                    a("switchPage", { page: "signin" }),
                                children: c.jsx("span", {
                                    children: r("Sign in"),
                                }),
                            }),
                        ],
                    }),
                ],
            });
        }
        renderForm() {
            const n = this.getInputFields({ state: this.state }),
                { site: a, pageQuery: r, t: i } = this.context;
            if (this.state.showNewsletterSelection)
                return c.jsx(Qc, {
                    pageData: this.state.pageData,
                    onBack: () => {
                        this.setState({ showNewsletterSelection: !1 });
                    },
                });
            if (ot({ site: a, pageQuery: r }))
                return c.jsx("section", {
                    children: c.jsxs("div", {
                        className: "gh-portal-section",
                        children: [
                            c.jsx("p", {
                                className: "gh-portal-invite-only-notification",
                                "data-testid": "invite-only-notification-text",
                                children: i(
                                    "This site is invite-only, contact the owner for access."
                                ),
                            }),
                            this.renderLoginMessage(),
                        ],
                    }),
                });
            if (!Uc({ site: a }))
                return c.jsx("section", {
                    children: c.jsx("div", {
                        className: "gh-portal-section",
                        children: c.jsx("p", {
                            className:
                                "gh-portal-members-disabled-notification",
                            "data-testid": "members-disabled-notification-text",
                            children: i(
                                "Memberships unavailable, contact the owner for access."
                            ),
                        }),
                    }),
                });
            const o = Oh({ site: a }),
                s = Vh({ site: a }),
                l = r === "free",
                u = So({ site: a }) || l,
                m = !l && (o.length || s);
            return c.jsx("section", {
                className: "gh-portal-signup",
                children: c.jsxs("div", {
                    className: "gh-portal-section",
                    children: [
                        c.jsx("div", {
                            className: "gh-portal-logged-out-form-container",
                            children: c.jsx(zo, {
                                fields: n,
                                onChange: (p, d) =>
                                    this.handleInputChange(p, d),
                                onKeyDown: (p) => this.onKeyDown(p),
                            }),
                        }),
                        c.jsxs("div", {
                            children: [
                                u
                                    ? c.jsxs(c.Fragment, {
                                          children: [
                                              this.renderProducts(),
                                              c.jsx("div", {
                                                  className:
                                                      "gh-portal-signup-terms-wrapper free-only",
                                                  children:
                                                      this.renderSignupTerms(),
                                              }),
                                          ],
                                      })
                                    : c.jsxs(c.Fragment, {
                                          children: [
                                              c.jsx("div", {
                                                  className:
                                                      "gh-portal-signup-terms-wrapper",
                                                  children:
                                                      this.renderSignupTerms(),
                                              }),
                                              this.renderProducts(),
                                          ],
                                      }),
                                u
                                    ? c.jsx("div", {
                                          className:
                                              "gh-portal-btn-container" +
                                              (m ? " sticky m24" : ""),
                                          children: c.jsxs("div", {
                                              className:
                                                  "gh-portal-logged-out-form-container",
                                              children: [
                                                  this.renderSubmitButton(),
                                                  this.renderLoginMessage(),
                                              ],
                                          }),
                                      })
                                    : this.renderLoginMessage(),
                            ],
                        }),
                    ],
                }),
            });
        }
        renderSiteIcon() {
            const { site: n, pageQuery: a } = this.context,
                r = n.icon;
            return r
                ? c.jsx("img", {
                      className: "gh-portal-signup-logo",
                      src: r,
                      alt: n.title,
                  })
                : ot({ site: n, pageQuery: a })
                ? c.jsx(Xc, {
                      className: "gh-portal-icon gh-portal-icon-invitation",
                  })
                : Uc({ site: n })
                ? null
                : c.jsx(Xc, {
                      className: "gh-portal-icon gh-portal-icon-invitation",
                  });
        }
        renderFormHeader() {
            const { site: n } = this.context,
                a = n.title || "";
            return c.jsxs("header", {
                className: "gh-portal-signup-header",
                children: [
                    this.renderSiteIcon(),
                    c.jsx("h1", {
                        className: "gh-portal-main-title",
                        "data-testid": "site-title-text",
                        children: a,
                    }),
                ],
            });
        }
        getClassNames() {
            const { site: n, pageQuery: a } = this.context,
                r = Co({ site: n, pageQuery: a }),
                i = this.getInputFields({ state: this.state });
            let o = "",
                s = "";
            return (
                (r.length <= 1 || ot({ site: n })) &&
                    ((r.length === 1 && r[0].type === "free") ||
                    ot({ site: n, pageQuery: a })
                        ? ((o = Kw({ site: n }) ? "singleplan" : "noplan"),
                          i.length === 1 && (o = "single-field"),
                          ot({ site: n }) &&
                              ((s = "invite-only"), (o = "invite-only")))
                        : (o = "singleplan")),
                { sectionClass: o, footerClass: s }
            );
        }
        render() {
            let { sectionClass: n } = this.getClassNames();
            return c.jsxs(c.Fragment, {
                children: [
                    c.jsx("div", {
                        className: "gh-portal-back-sitetitle",
                        children: c.jsx(jf, {
                            onBack: () => {
                                this.state.showNewsletterSelection
                                    ? this.setState({
                                          showNewsletterSelection: !1,
                                      })
                                    : this.context.onAction("closePopup");
                            },
                        }),
                    }),
                    c.jsx(ne, {}),
                    c.jsxs("div", {
                        className: "gh-portal-content signup " + n,
                        children: [this.renderFormHeader(), this.renderForm()],
                    }),
                ],
            });
        }
    }
    J(Pf, "contextType", _);
    const k0 = (e) =>
            k.createElement(
                "svg",
                {
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    ...e,
                },
                k.createElement(
                    "defs",
                    null,
                    k.createElement(
                        "style",
                        null,
                        ".a{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1px;}"
                    )
                ),
                k.createElement("rect", {
                    className: "a",
                    x: 0.75,
                    y: 4.5,
                    width: 22.5,
                    height: 15,
                    rx: 1.5,
                    ry: 1.5,
                }),
                k.createElement("line", {
                    className: "a",
                    x1: 15.687,
                    y1: 9.975,
                    x2: 19.5,
                    y2: 13.5,
                }),
                k.createElement("line", {
                    className: "a",
                    x1: 8.313,
                    y1: 9.975,
                    x2: 4.5,
                    y2: 13.5,
                }),
                k.createElement("path", {
                    className: "a",
                    d: "M22.88,5.014l-9.513,6.56a2.406,2.406,0,0,1-2.734,0L1.12,5.014",
                })
            ),
        v0 = `
    .gh-portal-icon-envelope {
        width: 44px;
        margin: 12px 0 10px;
    }

    .gh-portal-inbox-notification {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .gh-portal-inbox-notification p {
        max-width: 420px;
        text-align: center;
        margin-bottom: 30px;
    }
`;
    class _f extends R.Component {
        renderFormHeader() {
            const { t } = this.context;
            let n = t("Now check your email!"),
                a = t(
                    "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder."
                );
            return (
                this.context.lastPage === "signup" &&
                    ((n = t("Now check your email!")),
                    (a = t(
                        "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!"
                    ))),
                c.jsxs("section", {
                    className: "gh-portal-inbox-notification",
                    children: [
                        c.jsxs("header", {
                            className: "gh-portal-header",
                            children: [
                                c.jsx(k0, {
                                    className:
                                        "gh-portal-icon gh-portal-icon-envelope",
                                }),
                                c.jsx("h2", {
                                    className: "gh-portal-main-title",
                                    children: n,
                                }),
                            ],
                        }),
                        c.jsx("p", { children: a }),
                    ],
                })
            );
        }
        renderLoginMessage() {
            const { t } = this.context;
            return c.jsx(c.Fragment, {
                children: c.jsx("div", {
                    style: {
                        color: "#1d1d1d",
                        fontWeight: "bold",
                        cursor: "pointer",
                    },
                    onClick: () =>
                        this.context.onAction("switchPage", { page: "signin" }),
                    children: t("Back to Log in"),
                }),
            });
        }
        handleClose() {
            this.context.onAction("closePopup");
        }
        renderCloseButton() {
            const { t } = this.context,
                n = t("Close");
            return c.jsx(te, {
                style: { width: "100%" },
                onClick: (a) => this.handleClose(a),
                brandColor: this.context.brandColor,
                label: n,
            });
        }
        render() {
            return c.jsxs("div", {
                className: "gh-portal-content",
                children: [
                    c.jsx(ne, {}),
                    this.renderFormHeader(),
                    this.renderCloseButton(),
                ],
            });
        }
    }
    J(_f, "contextType", _);
    const w0 = `
    .gh-portal-popupnotification {
        position: absolute;
        top: 8px;
        left: 8px;
        right: 8px;
        padding: 12px;
        background: var(--grey2);
        z-index: 11000;
        border-radius: 5px;
        font-size: 1.5rem;
        box-shadow: 0px 0.8151839971542358px 0.8151839971542358px 0px rgba(var(--blackrgb),0.01),
                    0px 2.2538793087005615px 2.2538793087005615px 0px rgba(var(--blackrgb),0.02),
                    0px 5.426473140716553px 5.426473140716553px 0px rgba(var(--blackrgb),0.03),
                    0px 18px 18px 0px rgba(var(--blackrgb),0.04);
        animation: popupnotification-slidein 0.3s ease-in-out;
    }

    .gh-portal-popupnotification.slideout {
        animation: popupnotification-slideout 0.48s ease-in;
    }

    .gh-portal-popupnotification p {
        color: var(--white);
        margin: 0;
        padding: 0 20px;
        font-size: 1.5rem;
        line-height: 1.5em;
        letter-spacing: 0.2px;
        text-align: center;
    }

    .gh-portal-popupnotification a {
        color: var(--white);
    }

    .gh-portal-popupnotification-icon {
        position: absolute;
        top: 12px;
        left: 12px;
        width: 20px;
        height: 20px;
    }

    .gh-portal-popupnotification-icon.success {
        color: var(--green);
    }

    .gh-portal-popupnotification-icon.error {
        color: var(--red);
    }

    .gh-portal-popupnotification .closeicon {
        position: absolute;
        top: 3px;
        bottom: 0;
        right: 3px;
        color: var(--white);
        cursor: pointer;
        width: 16px;
        height: 16px;
        padding: 12px;
        transition: all 0.15s ease-in-out forwards;
        opacity: 0.8;
    }

    .gh-portal-popupnotification .closeicon:hover {
        opacity: 1.0;
    }

    @keyframes popupnotification-slidein {
        0% {
            transform: translateY(-10px);
            opacity: 0;
        }
        60% { transform: translateY(2px); }
        100% {
            transform: translateY(0);
            opacity: 1.0;
        }
    }

    @keyframes popupnotification-slideout {
        0% {
            transform: translateY(0);
            opacity: 1.0;
        }
        40% { transform: translateY(2px); }
        100% {
            transform: translateY(-10px);
            opacity: 0;
        }
    }
`,
        x0 = ({ hide: e = !1, onClose: t }) =>
            e
                ? null
                : c.jsx(Vc, {
                      className: "closeicon",
                      alt: "Close",
                      onClick: t,
                  }),
        S0 = ({ message: e, site: t, t: n }) => {
            const r = `mailto:${xr({ site: t })}`;
            return e
                ? c.jsx("p", { children: e })
                : c.jsx("p", {
                      children: c.jsx(Ae, {
                          syntax: Be,
                          string: n(
                              "An unexpected error occured. Please try again or <a>contact support</a> if the error persists."
                          ),
                          mapping: {
                              a: c.jsx("a", {
                                  href: r,
                                  onClick: () => {
                                      r && window.open(r);
                                  },
                              }),
                          },
                      }),
                  });
        };
    class Nf extends R.Component {
        constructor() {
            super(), (this.state = { className: "" });
        }
        onAnimationEnd(t) {
            const { popupNotification: n } = this.context,
                { type: a } = n || {};
            t.animationName === "popupnotification-slideout" &&
                (a === "stripe:billing-update" && qc(["stripe"]),
                this.context.onAction("clearPopupNotification"));
        }
        closeNotification() {
            this.context.onAction("clearPopupNotification");
        }
        componentDidUpdate() {
            const { popupNotification: t } = this.context;
            t.count !== this.state.notificationCount &&
                (clearTimeout(this.timeoutId),
                this.handlePopupNotification({ popupNotification: t }));
        }
        handlePopupNotification({ popupNotification: t }) {
            if ((this.setState({ notificationCount: t.count }), t.autoHide)) {
                const { duration: n = 2600 } = t;
                this.timeoutId = setTimeout(() => {
                    this.setState((a) =>
                        a.className !== "slideout"
                            ? {
                                  className: "slideout",
                                  notificationCount: t.count,
                              }
                            : {}
                    );
                }, n);
            }
        }
        componentDidMount() {
            const { popupNotification: t } = this.context;
            this.handlePopupNotification({ popupNotification: t });
        }
        componentWillUnmount() {
            clearTimeout(this.timeoutId);
        }
        render() {
            const { popupNotification: t, site: n, t: a } = this.context,
                { className: r } = this.state,
                { type: i, status: o, closeable: s, message: l } = t,
                u = o ? ` ${o}` : "",
                m = r ? ` ${r}` : "";
            return c.jsxs("div", {
                className: `gh-portal-popupnotification${u}${m}`,
                onAnimationEnd: (p) => this.onAnimationEnd(p),
                children: [
                    o === "error"
                        ? c.jsx(Wc, {
                              className:
                                  "gh-portal-popupnotification-icon error",
                              alt: "",
                          })
                        : c.jsx(tf, {
                              className:
                                  "gh-portal-popupnotification-icon success",
                              alt: "",
                          }),
                    c.jsx(S0, {
                        type: i,
                        status: o,
                        message: l,
                        site: n,
                        t: a,
                    }),
                    c.jsx(x0, {
                        hide: !s,
                        onClose: (p) => this.closeNotification(p),
                    }),
                ],
            });
        }
    }
    J(Nf, "contextType", _);
    const E0 = () => `
.gh-portal-offer {
    padding-bottom: 0;
    overflow: unset;
    max-height: unset;
}

.gh-portal-offer-container {
    display: flex;
    flex-direction: column;
}

.gh-portal-plans-container.offer {
    justify-content: space-between;
    border-color: var(--grey12);
    border-top: none;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    padding: 12px 16px;
    font-size: 1.3rem;
}

.gh-portal-offer-bar {
    position: relative;
    padding: 26px 28px 28px;
    margin-bottom: 24px;
    /*border: 1px dashed var(--brandcolor);*/
    background-image: url("data:image/svg+xml,%3csvg width='100%25' height='99.9%25' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%25' height='100%25' fill='none' stroke='%23C3C3C3' stroke-width='3' stroke-dasharray='3%2c 9' stroke-dashoffset='0' stroke-linecap='square'/%3e%3c/svg%3e");
    border-radius: 6px;
}

.gh-portal-offer-title {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.gh-portal-offer-title h4 {
    font-size: 1.8rem;
    margin: 0 110px 0 0;
    width: 100%;
}

.gh-portal-offer-title h4.placeholder {
    opacity: 0.4;
}

.gh-portal-offer-bar .gh-portal-discount-label {
    position: absolute;
    top: 23px;
    right: 25px;
}

.gh-portal-offer-bar p {
    padding-bottom: 0;
    margin: 12px 0 0;
}

.gh-portal-offer-title h4 + p {
    margin: 12px 0 0;
}

.gh-portal-offer-details .gh-portal-plan-name,
.gh-portal-offer-details p {
    margin-right: 8px;
}

.gh-portal-offer .footnote {
    font-size: 1.35rem;
    color: var(--grey8);
    margin: 4px 0 0;
}

.offer .gh-portal-product-card {
    max-width: unset;
    min-height: 0;
}

.offer .gh-portal-product-card .gh-portal-product-card-pricecontainer:not(.offer-type-trial) {
    margin-top: 0px;
}

.offer .gh-portal-product-card-header {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
}

.gh-portal-offer-oldprice {
    display: flex;
    position: relative;
    font-size: 1.8rem;
    font-weight: 300;
    color: var(--grey8);
    line-height: 1;
    white-space: nowrap;
    margin: 16px 0 4px;
}

.gh-portal-offer-oldprice:after {
    position: absolute;
    display: block;
    content: "";
    left: 0;
    top: 50%;
    right: 0;
    height: 1px;
    background: var(--grey8);
}

.gh-portal-offer-details p {
    margin-bottom: 12px;
}

.offer .after-trial-amount {
    margin-bottom: 0;
}

.offer .trial-duration {
    margin-top: 16px;
}

.gh-portal-cancel {
    white-space: nowrap;
}

.gh-portal-offer .gh-portal-signup-terms-wrapper {
    margin: 8px auto 16px;
}

.gh-portal-offer .gh-portal-signup-terms.gh-portal-error {
    margin: 0;
}
    `;
    class Tf extends R.Component {
        constructor(t, n) {
            var a, r;
            super(t, n),
                (this.state = {
                    name:
                        ((a = n == null ? void 0 : n.member) == null
                            ? void 0
                            : a.name) || "",
                    email:
                        ((r = n == null ? void 0 : n.member) == null
                            ? void 0
                            : r.email) || "",
                    plan: "free",
                    showNewsletterSelection: !1,
                    termsCheckboxChecked: !1,
                });
        }
        getFormErrors(t) {
            const a =
                this.context.site.portal_signup_checkbox_required &&
                this.context.site.portal_signup_terms_html &&
                !t.termsCheckboxChecked;
            return {
                ...Ao({ fields: this.getInputFields({ state: t }) }),
                checkbox: a,
            };
        }
        getInputFields({ state: t, fieldNames: n }) {
            const { portal_name: a } = this.context.site,
                { member: r, t: i } = this.context,
                o = t.errors || {},
                s = [
                    {
                        type: "email",
                        value: (r == null ? void 0 : r.email) || t.email,
                        placeholder: "jamie@example.com",
                        label: i("Email"),
                        name: "email",
                        disabled: !!r,
                        required: !0,
                        tabindex: 2,
                        errorMessage: o.email || "",
                    },
                ];
            let l = !!a;
            return (
                r && !(r != null && r.name) && (l = !1),
                l &&
                    s.unshift({
                        type: "text",
                        value: (r == null ? void 0 : r.name) || t.name,
                        placeholder: "Jamie Larson",
                        label: i("Name"),
                        name: "name",
                        disabled: !!r,
                        required: !0,
                        tabindex: 1,
                        errorMessage: o.name || "",
                    }),
                (s[0].autoFocus = !0),
                n && n.length > 0 ? s.filter((u) => n.includes(u.name)) : s
            );
        }
        renderSignupTerms() {
            var l;
            const { site: t } = this.context;
            if (
                t.portal_signup_terms_html === null ||
                t.portal_signup_terms_html === ""
            )
                return null;
            const n = (u) => {
                    this.setState({ termsCheckboxChecked: u.target.checked });
                },
                a = c.jsx("div", {
                    className: "gh-portal-signup-terms-content",
                    dangerouslySetInnerHTML: {
                        __html: t.portal_signup_terms_html,
                    },
                }),
                r = t.portal_signup_checkbox_required
                    ? c.jsxs("label", {
                          children: [
                              c.jsx("input", {
                                  type: "checkbox",
                                  checked: !!this.state.termsCheckboxChecked,
                                  required: !0,
                                  onChange: n,
                              }),
                              c.jsx("span", { className: "checkbox" }),
                              a,
                          ],
                      })
                    : a,
                o = `gh-portal-signup-terms ${
                    (l = this.state.errors) != null && l.checkbox
                        ? "gh-portal-error"
                        : ""
                }`,
                s = (u) => {
                    u.target.tagName === "A" &&
                        (u.preventDefault(),
                        window.open(u.target.href, "_blank"));
                };
            return c.jsx("div", { className: o, onClick: s, children: r });
        }
        onKeyDown(t) {
            t.keyCode === 13 && this.handleSignup(t);
        }
        handleSignup(t) {
            t.preventDefault();
            const { pageData: n, site: a } = this.context;
            if (!n) return null;
            const r = aa({ site: a, productId: n.tier.id }),
                i = n.cadence === "month" ? r.monthlyPrice : r.yearlyPrice;
            this.setState(
                (o) => ({ errors: this.getFormErrors(o) }),
                () => {
                    const { onAction: o } = this.context,
                        { name: s, email: l, errors: u } = this.state;
                    if (
                        !(u && Object.values(u).filter((p) => !!p).length > 0)
                    ) {
                        const p = {
                            name: s,
                            email: l,
                            plan: i == null ? void 0 : i.id,
                            offerId: n == null ? void 0 : n.id,
                        };
                        xo({ site: a })
                            ? this.setState({
                                  showNewsletterSelection: !0,
                                  pageData: p,
                                  errors: {},
                              })
                            : (o("signup", p), this.setState({ errors: {} }));
                    }
                }
            );
        }
        handleInputChange(t, n) {
            const a = n.name,
                r = t.target.value;
            this.setState({ [a]: r });
        }
        renderSiteLogo() {
            const { site: t } = this.context,
                n = t.icon;
            return n
                ? c.jsx("img", {
                      className: "gh-portal-signup-logo",
                      src: n,
                      alt: t.title,
                  })
                : null;
        }
        renderFormHeader() {
            const { site: t } = this.context,
                n = t.title || "";
            return c.jsxs("header", {
                className: "gh-portal-signup-header",
                children: [
                    this.renderSiteLogo(),
                    c.jsx("h2", {
                        className: "gh-portal-main-title",
                        children: n,
                    }),
                ],
            });
        }
        renderForm() {
            const t = this.getInputFields({ state: this.state });
            return this.state.showNewsletterSelection
                ? c.jsx(Qc, {
                      pageData: this.state.pageData,
                      onBack: () => {
                          this.setState({ showNewsletterSelection: !1 });
                      },
                  })
                : c.jsx("section", {
                      children: c.jsx("div", {
                          className: "gh-portal-section",
                          children: c.jsx(zo, {
                              fields: t,
                              onChange: (n, a) => this.handleInputChange(n, a),
                              onKeyDown: (n) => this.onKeyDown(n),
                          }),
                      }),
                  });
        }
        renderSubmitButton() {
            const { action: t, brandColor: n, t: a } = this.context,
                { pageData: r } = this.context;
            let i = a("Continue");
            r.type === "trial" &&
                (i = a("Start {{amount}}-day free trial", {
                    amount: r.amount,
                }));
            let o = !1;
            t === "signup:running" && ((i = a("Sending...")), (o = !0));
            let s = !1;
            t === "signup:failed" && ((i = a("Retry")), (s = !0));
            const l = t === "signup:running";
            return c.jsx(te, {
                style: { width: "100%" },
                retry: s,
                onClick: (u) => this.handleSignup(u),
                disabled: l,
                brandColor: n,
                label: i,
                isRunning: o,
                tabindex: "3",
                classes: "sticky bottom",
            });
        }
        renderLoginMessage() {
            const { member: t } = this.context;
            if (t) return null;
            const { brandColor: n, onAction: a, t: r } = this.context;
            return c.jsxs("div", {
                className: "gh-portal-signup-message",
                children: [
                    c.jsx("div", { children: r("Already a member?") }),
                    c.jsx("button", {
                        className: "gh-portal-btn gh-portal-btn-link",
                        style: { color: n },
                        onClick: () => a("switchPage", { page: "signin" }),
                        children: c.jsx("span", { children: r("Sign in") }),
                    }),
                ],
            });
        }
        renderOfferTag() {
            const { pageData: t, t: n } = this.context;
            return t.amount <= 0
                ? c.jsx(c.Fragment, {})
                : t.type === "fixed"
                ? c.jsx("h5", {
                      className: "gh-portal-discount-label",
                      children: n("{{amount}} off", {
                          amount: `${pe(t.currency)}${t.amount / 100}`,
                      }),
                  })
                : t.type === "trial"
                ? c.jsx("h5", {
                      className: "gh-portal-discount-label",
                      children: n("{{amount}} days free", { amount: t.amount }),
                  })
                : c.jsx("h5", {
                      className: "gh-portal-discount-label",
                      children: n("{{amount}} off", { amount: t.amount + "%" }),
                  });
        }
        renderBenefits({ product: t }) {
            const n = t.benefits || [];
            if (!(n != null && n.length)) return;
            const a = n.map((r, i) =>
                c.jsxs(
                    "div",
                    {
                        className: "gh-portal-product-benefit",
                        children: [
                            c.jsx(of, {
                                className: "gh-portal-benefit-checkmark",
                            }),
                            c.jsx("div", {
                                className: "gh-portal-benefit-title",
                                children: r.name,
                            }),
                        ],
                    },
                    `${r.name}-${i}`
                )
            );
            return c.jsx("div", {
                className: "gh-portal-product-benefits",
                children: a,
            });
        }
        getOriginalPrice({ offer: t, product: n }) {
            const a = t.cadence === "month" ? n.monthlyPrice : n.yearlyPrice,
                r = this.renderRoundedPrice(a.amount / 100);
            return `${pe(a.currency)}${r}/${t.cadence}`;
        }
        getUpdatedPrice({ offer: t, product: n }) {
            const a = t.cadence === "month" ? n.monthlyPrice : n.yearlyPrice,
                r = a.amount;
            let i;
            return t.type === "fixed" && $o(t.currency, a.currency)
                ? ((i = (r - t.amount) / 100), i > 0 ? i : 0)
                : t.type === "percent"
                ? ((i = (r - (r * t.amount) / 100) / 100), i)
                : r / 100;
        }
        renderRoundedPrice(t) {
            if (t % 1 !== 0) {
                const n = Math.round(t * 100) / 100;
                return Number(n).toFixed(2);
            }
            return t;
        }
        getOffAmount({ offer: t }) {
            return t.type === "fixed"
                ? `${pe(t.currency)}${t.amount / 100}`
                : t.type === "percent"
                ? `${t.amount}%`
                : t.type === "trial"
                ? t.amount
                : "";
        }
        renderOfferMessage({ offer: t, product: n, t: a }) {
            const r = {
                    forever: a("{{amount}} off forever.", {
                        amount: this.getOffAmount({ offer: t }),
                    }),
                    firstPeriod: a("{{amount}} off for first {{period}}.", {
                        amount: this.getOffAmount({ offer: t }),
                        period: t.cadence,
                    }),
                    firstNMonths: a(
                        "{{amount}} off for first {{number}} months.",
                        {
                            amount: this.getOffAmount({ offer: t }),
                            number: t.duration_in_months || "",
                        }
                    ),
                },
                i = this.getOriginalPrice({ offer: t, product: n }),
                o = a("Renews at {{price}}.", {
                    price: i,
                    interpolation: { escapeValue: !1 },
                });
            let s = "",
                l = !1;
            const u = t.duration;
            return (
                u === "once"
                    ? ((s = r.firstPeriod), (l = !0))
                    : u === "forever"
                    ? (s = r.forever)
                    : u === "repeating" &&
                      ((t.duration_in_months || "") === 1
                          ? (s = r.firstPeriod)
                          : (s = r.firstNMonths),
                      (l = !0)),
                u === "trial"
                    ? c.jsxs("p", {
                          className: "footnote",
                          children: [
                              a(
                                  "Try free for {{amount}} days, then {{originalPrice}}.",
                                  {
                                      amount: t.amount,
                                      originalPrice: i,
                                      interpolation: { escapeValue: !1 },
                                  }
                              ),
                              " ",
                              c.jsx("span", {
                                  className: "gh-portal-cancel",
                                  children: a("Cancel anytime."),
                              }),
                          ],
                      })
                    : c.jsxs("p", {
                          className: "footnote",
                          children: [s, " ", l ? o : ""],
                      })
            );
        }
        renderProductLabel({ product: t, offer: n }) {
            const { site: a, t: r } = this.context;
            return go({ site: a })
                ? c.jsxs("h4", {
                      className: "gh-portal-plan-name",
                      children: [
                          t.name,
                          " - ",
                          n.cadence === "month" ? r("Monthly") : r("Yearly"),
                      ],
                  })
                : c.jsx("h4", {
                      className: "gh-portal-plan-name",
                      children:
                          n.cadence === "month" ? r("Monthly") : r("Yearly"),
                  });
        }
        renderUpdatedTierPrice({
            offer: t,
            currencyClass: n,
            updatedPrice: a,
            price: r,
        }) {
            return t.type === "trial"
                ? c.jsx("div", {
                      className:
                          "gh-portal-product-card-pricecontainer offer-type-trial",
                      children: c.jsxs("div", {
                          className: "gh-portal-product-price",
                          children: [
                              c.jsx("span", {
                                  className: "currency-sign " + n,
                                  children: pe(r.currency),
                              }),
                              c.jsx("span", {
                                  className: "amount",
                                  children: ia(this.renderRoundedPrice(a)),
                              }),
                          ],
                      }),
                  })
                : c.jsx("div", {
                      className: "gh-portal-product-card-pricecontainer",
                      children: c.jsxs("div", {
                          className: "gh-portal-product-price",
                          children: [
                              c.jsx("span", {
                                  className: "currency-sign " + n,
                                  children: pe(r.currency),
                              }),
                              c.jsx("span", {
                                  className: "amount",
                                  children: ia(this.renderRoundedPrice(a)),
                              }),
                          ],
                      }),
                  });
        }
        renderOldTierPrice({ offer: t, price: n }) {
            return t.type === "trial"
                ? null
                : c.jsxs("div", {
                      className: "gh-portal-offer-oldprice",
                      children: [pe(n.currency), " ", ia(n.amount / 100)],
                  });
        }
        renderProductCard({
            product: t,
            offer: n,
            currencyClass: a,
            updatedPrice: r,
            price: i,
            benefits: o,
        }) {
            const { t: s } = this.context;
            return this.state.showNewsletterSelection
                ? null
                : c.jsxs(c.Fragment, {
                      children: [
                          c.jsx("div", {
                              className: "gh-portal-product-card top",
                              children: c.jsxs("div", {
                                  className: "gh-portal-product-card-header",
                                  children: [
                                      c.jsxs("h4", {
                                          className: "gh-portal-product-name",
                                          children: [
                                              t.name,
                                              " - ",
                                              n.cadence === "month"
                                                  ? s("Monthly")
                                                  : s("Yearly"),
                                          ],
                                      }),
                                      this.renderOldTierPrice({
                                          offer: n,
                                          price: i,
                                      }),
                                      this.renderUpdatedTierPrice({
                                          offer: n,
                                          currencyClass: a,
                                          updatedPrice: r,
                                          price: i,
                                      }),
                                      this.renderOfferMessage({
                                          offer: n,
                                          product: t,
                                          price: i,
                                          t: s,
                                      }),
                                  ],
                              }),
                          }),
                          c.jsxs("div", {
                              children: [
                                  c.jsx("div", {
                                      className:
                                          "gh-portal-product-card bottom",
                                      children: c.jsxs("div", {
                                          className:
                                              "gh-portal-product-card-detaildata",
                                          children: [
                                              t.description
                                                  ? c.jsx("div", {
                                                        className:
                                                            "gh-portal-product-description",
                                                        children: t.description,
                                                    })
                                                  : "",
                                              o.length
                                                  ? this.renderBenefits({
                                                        product: t,
                                                    })
                                                  : "",
                                          ],
                                      }),
                                  }),
                                  c.jsxs("div", {
                                      className:
                                          "gh-portal-btn-container sticky m32",
                                      children: [
                                          c.jsx("div", {
                                              className:
                                                  "gh-portal-signup-terms-wrapper",
                                              children:
                                                  this.renderSignupTerms(),
                                          }),
                                          this.renderSubmitButton(),
                                      ],
                                  }),
                                  this.renderLoginMessage(),
                              ],
                          }),
                      ],
                  });
        }
        render() {
            const { pageData: t, site: n, t: a } = this.context;
            if (!t) return null;
            const r = aa({ site: n, productId: t.tier.id });
            if (!r) return null;
            const i = t.cadence === "month" ? r.monthlyPrice : r.yearlyPrice,
                o = this.getUpdatedPrice({ offer: t, product: r }),
                s = r.benefits || [],
                l = pe(i.currency).length > 1 ? "long" : "";
            return c.jsx(c.Fragment, {
                children: c.jsxs("div", {
                    className: "gh-portal-content gh-portal-offer",
                    children: [
                        c.jsx(ne, {}),
                        this.renderFormHeader(),
                        c.jsxs("div", {
                            className: "gh-portal-offer-bar",
                            children: [
                                c.jsxs("div", {
                                    className: "gh-portal-offer-title",
                                    children: [
                                        t.display_title
                                            ? c.jsx("h4", {
                                                  children: t.display_title,
                                              })
                                            : c.jsx("h4", {
                                                  className: "placeholder",
                                                  children: a("Black Friday"),
                                              }),
                                        this.renderOfferTag(),
                                    ],
                                }),
                                t.display_description
                                    ? c.jsx("p", {
                                          children: t.display_description,
                                      })
                                    : "",
                            ],
                        }),
                        this.renderForm(),
                        this.renderProductCard({
                            product: r,
                            offer: t,
                            currencyClass: l,
                            updatedPrice: o,
                            price: i,
                            benefits: s,
                        }),
                    ],
                }),
            });
        }
    }
    J(Tf, "contextType", _);
    const If = (e) =>
            k.createElement(
                "svg",
                {
                    width: 48,
                    height: 48,
                    viewBox: "0 0 48 48",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                },
                k.createElement(
                    "defs",
                    null,
                    k.createElement("style", null, "path{stroke:currentColor;}")
                ),
                k.createElement("path", {
                    d: "M9.20837 15.8011C9.83721 15.4781 10.4682 15.1573 11.1013 14.8386C22.77 8.94169 22.1989 10.0903 32.1897 10.0903C36.3605 10.0903 38.4812 12.8045 39.7132 16.7796V16.8053L42.7451 26.9244V26.9436C42.8892 27.4178 42.92 27.9192 42.835 28.4075C42.75 28.8958 42.5516 29.3572 42.2558 29.7549C41.9599 30.1525 41.5748 30.4751 41.1316 30.6967C40.6883 30.9184 40.1992 31.0329 39.7036 31.0311H31.9073C31.4217 31.0324 30.9426 31.144 30.5064 31.3574C30.0701 31.5708 29.688 31.8805 29.3888 32.2631C29.0915 32.6461 28.8867 33.0927 28.7904 33.568C28.6941 34.0433 28.7089 34.5344 28.8337 35.003L30.2358 40.2935C30.3448 40.7044 30.3548 41.1353 30.265 41.5508C30.1752 41.9662 29.9882 42.3545 29.7192 42.6837C29.4535 43.0094 29.1162 43.2693 28.7335 43.4432C28.3508 43.6172 27.9332 43.7004 27.5131 43.6864C27.093 43.6724 26.6818 43.5617 26.3115 43.3627C25.9412 43.1637 25.6219 42.882 25.3784 42.5394L17.6046 30.5883C17.3083 30.1754 16.9182 29.8388 16.4664 29.6062C16.0146 29.3736 15.514 29.2517 15.0058 29.2504H9.20837M6 32.4587H9.20833V10.0003H6",
                    stroke: "black",
                    strokeWidth: 3,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                })
            ),
        zf = (e) =>
            k.createElement(
                "svg",
                {
                    width: 48,
                    height: 48,
                    viewBox: "0 0 48 48",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                },
                k.createElement(
                    "defs",
                    null,
                    k.createElement("style", null, "path{stroke:currentColor;}")
                ),
                k.createElement("path", {
                    d: "M9.20837 33.8868C9.83721 34.2098 10.4682 34.5306 11.1013 34.8493C22.77 40.7462 22.1989 39.5976 32.1897 39.5976C36.3605 39.5976 38.4812 36.8834 39.7132 32.9083V32.8826L42.7451 22.7635V22.7443C42.8892 22.2701 42.92 21.7687 42.835 21.2804C42.75 20.7922 42.5516 20.3307 42.2558 19.9331C41.9599 19.5355 41.5748 19.2129 41.1316 18.9912C40.6883 18.7695 40.1992 18.655 39.7036 18.6568H31.9073C31.4217 18.6555 30.9426 18.5439 30.5064 18.3305C30.0701 18.1171 29.688 17.8074 29.3888 17.4248C29.0915 17.0418 28.8867 16.5952 28.7904 16.1199C28.6941 15.6446 28.7089 15.1535 28.8337 14.6849L30.2358 9.39439C30.3448 8.98352 30.3548 8.55265 30.265 8.13716C30.1752 7.72167 29.9882 7.33339 29.7192 7.00418C29.4535 6.67851 29.1162 6.41858 28.7335 6.24467C28.3508 6.07075 27.9332 5.98754 27.5131 6.00151C27.093 6.01548 26.6818 6.12626 26.3115 6.32522C25.9412 6.52418 25.6219 6.80594 25.3784 7.14856L17.6046 19.0996C17.3083 19.5125 16.9182 19.8491 16.4664 20.0817C16.0146 20.3143 15.514 20.4362 15.0058 20.4375H9.20837M6 17.2292H9.20833V39.6876H6",
                    stroke: "black",
                    strokeWidth: 3,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                })
            ),
        C0 = (e) =>
            k.createElement(
                "svg",
                {
                    width: 96,
                    height: 56,
                    viewBox: "0 0 96 56",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                },
                k.createElement("path", {
                    d: "M9.00004 34.973C9.66499 35.3085 10.3322 35.6418 11.0017 35.9729C23.3405 42.0995 22.7366 40.9062 33.3011 40.9062C37.7115 40.9062 39.954 38.0862 41.2567 33.9563V33.9296L44.4627 23.4164V23.3964C44.6151 22.9038 44.6477 22.3828 44.5578 21.8756C44.4679 21.3683 44.2581 20.8888 43.9453 20.4757C43.6324 20.0626 43.2253 19.7275 42.7565 19.4972C42.2878 19.2669 41.7706 19.1479 41.2466 19.1498H33.0026C32.489 19.1484 31.9825 19.0325 31.5211 18.8108C31.0598 18.5891 30.6558 18.2673 30.3394 17.8698C30.025 17.4718 29.8084 17.0078 29.7066 16.5141C29.6048 16.0203 29.6205 15.51 29.7525 15.0232L31.235 9.5266C31.3503 9.09972 31.3609 8.65208 31.2659 8.2204C31.171 7.78873 30.9732 7.38533 30.6888 7.0433C30.4078 6.70494 30.0511 6.43489 29.6465 6.2542C29.2418 6.07351 28.8002 5.98706 28.3559 6.00157C27.9117 6.01609 27.4769 6.13118 27.0854 6.33789C26.6938 6.5446 26.3562 6.83734 26.0987 7.19329L17.8784 19.6098C17.5652 20.0388 17.1527 20.3885 16.6749 20.6301C16.1971 20.8718 15.6678 20.9985 15.1304 20.9998H9.00004M9 17.6666L9 40.9997",
                    stroke: "black",
                    strokeWidth: 2.85,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                }),
                k.createElement("path", {
                    d: "M86.2148 20.027C85.5499 19.6915 84.8826 19.3582 84.2132 19.0271C71.8743 12.9005 72.4782 14.0938 61.9137 14.0938C57.5034 14.0938 55.2609 16.9138 53.9581 21.0437V21.0704L50.7521 31.5836V31.6036C50.5997 32.0962 50.5672 32.6172 50.657 33.1244C50.7469 33.6317 50.9567 34.1112 51.2695 34.5243C51.5824 34.9374 51.9896 35.2725 52.4583 35.5028C52.927 35.7331 53.4442 35.8521 53.9683 35.8502H62.2123C62.7258 35.8516 63.2324 35.9675 63.6937 36.1892C64.155 36.4109 64.5591 36.7327 64.8754 37.1302C65.1899 37.5282 65.4064 37.9922 65.5082 38.4859C65.61 38.9797 65.5943 39.49 65.4624 39.9768L63.9798 45.4734C63.8646 45.9003 63.854 46.3479 63.9489 46.7796C64.0439 47.2113 64.2416 47.6147 64.526 47.9567C64.807 48.2951 65.1637 48.5651 65.5684 48.7458C65.973 48.9265 66.4147 49.0129 66.8589 48.9984C67.3031 48.9839 67.7379 48.8688 68.1295 48.6621C68.521 48.4554 68.8587 48.1627 69.1162 47.8067L77.3364 35.3902C77.6497 34.9612 78.0622 34.6115 78.5399 34.3699C79.0177 34.1282 79.547 34.0015 80.0844 34.0002H86.2148M86.2148 37.3334V14.0003",
                    stroke: "black",
                    strokeWidth: 2.85,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                })
            );
    class kt extends Error {
        static async fromApiResponse(t) {
            if (t.status === 400 || t.status === 429)
                try {
                    const n = await t.json();
                    if (
                        n.errors &&
                        Array.isArray(n.errors) &&
                        n.errors.length > 0 &&
                        n.errors[0].message
                    )
                        return new kt(n.errors[0].message);
                } catch {
                    return !1;
                }
        }
        static getMessageFromError(t, n) {
            return t instanceof kt ? t.message : n;
        }
    }
    function ca({ siteUrl: e = window.location.origin, apiUrl: t, apiKey: n }) {
        const a = "members/api";
        function r({ type: l, resource: u }) {
            if (l === "members") return `${e.replace(/\/$/, "")}/${a}/${u}/`;
        }
        function i({ resource: l, params: u = "" }) {
            return t && n
                ? `${t.replace(/\/$/, "")}/${l}/?key=${n}&limit=all${u}`
                : "";
        }
        function o({
            url: l,
            method: u = "GET",
            headers: m = {},
            credentials: p = void 0,
            body: d = void 0,
        }) {
            return fetch(l, { method: u, headers: m, credentials: p, body: d });
        }
        const s = {};
        return (
            (s.site = {
                read() {
                    const l = r({ type: "members", resource: "site" });
                    return o({
                        url: l,
                        method: "GET",
                        headers: { "Content-Type": "application/json" },
                    }).then(function (u) {
                        if (u.ok) return u.json();
                        throw new Error("Failed to fetch site data");
                    });
                },
                newsletters() {
                    const l = i({ resource: "newsletters" });
                    return o({
                        url: l,
                        method: "GET",
                        headers: { "Content-Type": "application/json" },
                    }).then(function (u) {
                        if (u.ok) return u.json();
                        throw new Error("Failed to fetch site data");
                    });
                },
                tiers() {
                    const l = i({
                        resource: "tiers",
                        params: "&include=monthly_price,yearly_price,benefits",
                    });
                    return o({
                        url: l,
                        method: "GET",
                        headers: { "Content-Type": "application/json" },
                    }).then(function (u) {
                        if (u.ok) return u.json();
                        throw new Error("Failed to fetch site data");
                    });
                },
                settings() {
                    const l = i({ resource: "settings" });
                    return o({
                        url: l,
                        method: "GET",
                        headers: { "Content-Type": "application/json" },
                    }).then(function (u) {
                        if (u.ok) return u.json();
                        throw new Error("Failed to fetch site data");
                    });
                },
                offer({ offerId: l }) {
                    const u = i({ resource: `offers/${l}` });
                    return o({
                        url: u,
                        method: "GET",
                        headers: { "Content-Type": "application/json" },
                    }).then(function (m) {
                        if (m.ok) return m.json();
                        throw new Error("Failed to fetch offer data");
                    });
                },
                recommendations({ limit: l }) {
                    let u = i({ resource: "recommendations" });
                    return (
                        (u = u.replace("limit=all", `limit=${l}`)),
                        o({
                            url: u,
                            method: "GET",
                            headers: { "Content-Type": "application/json" },
                        }).then(function (m) {
                            if (m.ok) return m.json();
                            throw new Error("Failed to fetch recommendations");
                        })
                    );
                },
            }),
            (s.feedback = {
                async add({ uuid: l, postId: u, score: m }) {
                    let p = r({ type: "members", resource: "feedback" });
                    p = p + `?uuid=${l}`;
                    const b = await o({
                        url: p,
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        credentials: "same-origin",
                        body: JSON.stringify({
                            feedback: [{ post_id: u, score: m }],
                        }),
                    });
                    if (b.ok) return b.json();
                    throw (
                        (await kt.fromApiResponse(b)) ??
                        new Error("Failed to save feedback")
                    );
                },
            }),
            (s.recommendations = {
                trackClicked({ recommendationId: l }) {
                    let u = r({
                        type: "members",
                        resource: "recommendations/" + l + "/clicked",
                    });
                    navigator.sendBeacon(u);
                },
                trackSubscribed({ recommendationId: l }) {
                    let u = r({
                        type: "members",
                        resource: "recommendations/" + l + "/subscribed",
                    });
                    navigator.sendBeacon(u);
                },
            }),
            (s.member = {
                identity() {
                    const l = r({ type: "members", resource: "session" });
                    return o({ url: l, credentials: "same-origin" }).then(
                        function (u) {
                            return !u.ok || u.status === 204 ? null : u.text();
                        }
                    );
                },
                sessionData() {
                    const l = r({ type: "members", resource: "member" });
                    return o({ url: l, credentials: "same-origin" }).then(
                        function (u) {
                            return !u.ok || u.status === 204 ? null : u.json();
                        }
                    );
                },
                update({
                    name: l,
                    subscribed: u,
                    newsletters: m,
                    enableCommentNotifications: p,
                }) {
                    const d = r({ type: "members", resource: "member" }),
                        b = { name: l, subscribed: u, newsletters: m };
                    return (
                        p !== void 0 && (b.enable_comment_notifications = p),
                        o({
                            url: d,
                            method: "PUT",
                            headers: { "Content-Type": "application/json" },
                            credentials: "same-origin",
                            body: JSON.stringify(b),
                        }).then(function (y) {
                            return y.ok ? y.json() : null;
                        })
                    );
                },
                deleteSuppression() {
                    const l = r({
                        type: "members",
                        resource: "member/suppression",
                    });
                    return o({ url: l, method: "DELETE" }).then(function (u) {
                        if (!u.ok)
                            throw new Error(
                                "Your email has failed to resubscribe, please try again"
                            );
                        return !0;
                    });
                },
                async sendMagicLink({
                    email: l,
                    emailType: u,
                    labels: m,
                    name: p,
                    oldEmail: d,
                    newsletters: b,
                    redirect: y,
                    customUrlHistory: v,
                    autoRedirect: g = !0,
                }) {
                    const h = r({
                            type: "members",
                            resource: "send-magic-link",
                        }),
                        f = {
                            name: p,
                            email: l,
                            newsletters: b,
                            oldEmail: d,
                            emailType: u,
                            labels: m,
                            requestSrc: "portal",
                            redirect: y,
                            autoRedirect: g,
                        },
                        x = v ?? Sr();
                    x && (f.urlHistory = x);
                    const w = await o({
                        url: h,
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify(f),
                    });
                    if (w.ok) return "Success";
                    {
                        const E = await kt.fromApiResponse(w);
                        throw E || new Error("Failed to send magic link email");
                    }
                },
                signout() {
                    const l = r({ type: "members", resource: "session" });
                    return o({ url: l, method: "DELETE" }).then(function (u) {
                        if (u.ok) return window.location.replace(e), "Success";
                        throw new Error("Failed to signout");
                    });
                },
                async newsletters({ uuid: l }) {
                    let u = r({
                        type: "members",
                        resource: "member/newsletters",
                    });
                    return (
                        (u = u + `?uuid=${l}`),
                        o({ url: u, credentials: "same-origin" }).then(
                            function (m) {
                                return !m.ok || m.status === 204
                                    ? null
                                    : m.json();
                            }
                        )
                    );
                },
                async updateNewsletters({
                    uuid: l,
                    newsletters: u,
                    enableCommentNotifications: m,
                }) {
                    let p = r({
                        type: "members",
                        resource: "member/newsletters",
                    });
                    p = p + `?uuid=${l}`;
                    const d = { newsletters: u };
                    return (
                        m !== void 0 && (d.enable_comment_notifications = m),
                        o({
                            url: p,
                            method: "PUT",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify(d),
                        }).then(function (b) {
                            if (b.ok) return b.json();
                            throw new Error(
                                "Failed to update email preferences"
                            );
                        })
                    );
                },
                async updateEmailAddress({ email: l }) {
                    const u = await s.member.identity(),
                        m = r({ type: "members", resource: "member/email" });
                    return o({
                        url: m,
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ email: l, identity: u }),
                    }).then(function (d) {
                        if (d.ok) return "Success";
                        throw new Error(
                            "Failed to send email address verification email"
                        );
                    });
                },
                async checkoutPlan({
                    plan: l,
                    tierId: u,
                    cadence: m,
                    cancelUrl: p,
                    successUrl: d,
                    email: b,
                    name: y,
                    offerId: v,
                    newsletters: g,
                    metadata: h = {},
                } = {}) {
                    var $, T;
                    const f = new URL(e),
                        x = await s.member.identity(),
                        w = r({
                            type: "members",
                            resource: "create-stripe-checkout-session",
                        });
                    if (!p) {
                        const P = window.location.href.startsWith(f.href)
                            ? new URL(window.location.href)
                            : new URL(e);
                        P.searchParams.set("stripe", "cancel"), (p = P.href);
                    }
                    const E = {
                            name: y,
                            newsletters: JSON.stringify(g),
                            requestSrc: "portal",
                            fp_tid:
                                (T =
                                    ($ = window.FPROM || window.$FPROM) == null
                                        ? void 0
                                        : $.data) == null
                                    ? void 0
                                    : T.tid,
                            urlHistory: Sr(),
                            ...h,
                        },
                        S = {
                            priceId: v ? null : l,
                            offerId: v,
                            identity: x,
                            metadata: E,
                            successUrl: d,
                            cancelUrl: p,
                        };
                    return (
                        b && (S.customerEmail = b),
                        u &&
                            m &&
                            (delete S.priceId,
                            (S.tierId = v ? null : u),
                            (S.cadence = v ? null : m)),
                        o({
                            url: w,
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify(S),
                        })
                            .then(async function (P) {
                                var U, Oe;
                                if (!P.ok) {
                                    const le = await P.json(),
                                        W =
                                            ((Oe =
                                                (U =
                                                    le == null
                                                        ? void 0
                                                        : le.errors) == null
                                                    ? void 0
                                                    : U[0]) == null
                                                ? void 0
                                                : Oe.message) ||
                                            "Failed to signup, please try again.";
                                    throw new Error(W);
                                }
                                return P.json();
                            })
                            .then(function (P) {
                                return P.url
                                    ? window.location.assign(P.url)
                                    : window
                                          .Stripe(P.publicKey)
                                          .redirectToCheckout({
                                              sessionId: P.sessionId,
                                          })
                                          .then(function (Oe) {
                                              if (Oe.error)
                                                  throw new Error(
                                                      Oe.error.message
                                                  );
                                          });
                            })
                    );
                },
                async checkoutDonation({
                    successUrl: l,
                    cancelUrl: u,
                    metadata: m = {},
                } = {}) {
                    var h, f, x;
                    const p = await s.member.identity(),
                        d = r({
                            type: "members",
                            resource: "create-stripe-checkout-session",
                        }),
                        b = {
                            fp_tid:
                                (f =
                                    (h = window.FPROM || window.$FPROM) == null
                                        ? void 0
                                        : h.data) == null
                                    ? void 0
                                    : f.tid,
                            urlHistory: Sr(),
                            ...m,
                        },
                        v = await o({
                            url: d,
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({
                                identity: p,
                                metadata: b,
                                successUrl: l,
                                cancelUrl: u,
                                type: "donation",
                            }),
                        }),
                        g = await v.json();
                    if (!v.ok) {
                        const w =
                            (x = g == null ? void 0 : g.errors) == null
                                ? void 0
                                : x[0];
                        throw (
                            w ||
                            new Error(
                                "We're unable to process your payment right now. Please try again later."
                            )
                        );
                    }
                    return g;
                },
                async editBilling({
                    successUrl: l,
                    cancelUrl: u,
                    subscriptionId: m,
                } = {}) {
                    const p = new URL(e),
                        d = await s.member.identity(),
                        b = r({
                            type: "members",
                            resource: "create-stripe-update-session",
                        });
                    if (!l) {
                        const y = new URL(e);
                        y.searchParams.set("stripe", "billing-update-success"),
                            (l = y.href);
                    }
                    if (!u) {
                        const y = window.location.href.startsWith(p.href)
                            ? new URL(window.location.href)
                            : new URL(e);
                        y.searchParams.set("stripe", "billing-update-cancel"),
                            (u = y.href);
                    }
                    return o({
                        url: b,
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({
                            identity: d,
                            subscription_id: m,
                            successUrl: l,
                            cancelUrl: u,
                        }),
                    })
                        .then(function (y) {
                            if (!y.ok)
                                throw new Error(
                                    "Unable to create stripe checkout session"
                                );
                            return y.json();
                        })
                        .then(function (y) {
                            return window
                                .Stripe(y.publicKey)
                                .redirectToCheckout({ sessionId: y.sessionId });
                        })
                        .then(function (y) {
                            if (y.error) throw new Error(y.error.message);
                        })
                        .catch(function (y) {
                            throw y;
                        });
                },
                async updateSubscription({
                    subscriptionId: l,
                    tierId: u,
                    cadence: m,
                    planId: p,
                    smartCancel: d,
                    cancelAtPeriodEnd: b,
                    cancellationReason: y,
                }) {
                    const v = await s.member.identity(),
                        g =
                            r({ type: "members", resource: "subscriptions" }) +
                            l +
                            "/",
                        h = {
                            smart_cancel: d,
                            cancel_at_period_end: b,
                            cancellation_reason: y,
                            identity: v,
                            priceId: p,
                        };
                    return (
                        u &&
                            m &&
                            (delete h.priceId, (h.tierId = u), (h.cadence = m)),
                        o({
                            url: g,
                            method: "PUT",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify(h),
                        })
                    );
                },
            }),
            (s.init = async () => {
                let [l] = await Promise.all([s.member.sessionData()]),
                    u = {},
                    m = [],
                    p = [],
                    d = {};
                try {
                    ([{ settings: d }, { tiers: p }, { newsletters: m }] =
                        await Promise.all([
                            s.site.settings(),
                            s.site.tiers(),
                            s.site.newsletters(),
                        ])),
                        (u = { ...d, newsletters: m, tiers: lx({ tiers: p }) });
                } catch {}
                return (u = Gw({ site: u })), { site: u, member: l };
            }),
            s
        );
    }
    class Do extends R.Component {
        render() {
            return c.jsx("div", {
                style: {
                    display: "flex",
                    flexDirection: "column",
                    color: "#313131",
                },
                children: c.jsx("div", {
                    style: {
                        paddingLeft: "16px",
                        paddingRight: "16px",
                        paddingTop: "12px",
                        height: "50px",
                    },
                    children: c.jsx(oa, {
                        className: "gh-portal-loadingicon dark",
                    }),
                }),
            });
        }
    }
    const $0 = `
    .gh-portal-feedback {

    }

    .gh-portal-feedback .gh-feedback-icon {
        padding: 10px 0;
        text-align: center;
        color: var(--brandcolor);
        width: 48px;
        margin: 0 auto;
    }

    .gh-portal-feedback .gh-feedback-icon.gh-feedback-icon-error {
        color: #f50b23;
        width: 96px;
    }

    .gh-portal-feedback .gh-portal-text-center {
        padding: 16px 32px 12px;
    }

    .gh-portal-confirm-title {
        line-height: inherit;
        text-align: center;
        box-sizing: border-box;
        margin: 0;
        margin-bottom: .4rem;
        font-size: 24px;
        font-weight: 700;
        letter-spacing: -.018em;
    }

    .gh-portal-confirm-button {
        width: 100%;
        margin-top: 3.6rem;
    }

    .gh-feedback-buttons-group {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 16px;
        margin-top: 3.6rem;
    }

    .gh-feedback-button {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        font-size: 1.4rem;
        line-height: 1.2;
        font-weight: 700;
        border: none;
        border-radius: 22px;
        padding: 12px 8px;
        color: #505050;
        background: none;
        cursor: pointer;
    }

    .gh-feedback-button::before {
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
        border-radius: inherit;
        background: currentColor;
        opacity: 0.10;
    }

    .gh-feedback-button-selected {
        box-shadow: inset 0 0 0 2px currentColor;
    }

    .gh-feedback-button svg {
        width: 24px;
        height: 24px;
        color: inherit;
    }

    .gh-feedback-button svg path {
        stroke-width: 4px;
    }

    @media (max-width: 480px) {
        .gh-portal-popup-background {
            animation: none;
        }

        .gh-portal-popup-wrapper.feedback h1 {
            font-size: 2.5rem;
        }

        .gh-portal-popup-wrapper.feedback p {
            margin-bottom: 1.2rem;
        }

        .gh-portal-feedback .gh-portal-text-center {
            padding-left: 8px;
            padding-right: 8px;
        }

        .gh-portal-popup-wrapper.feedback {
            display: block;
            position: relative;
            width: 100%;
            background: none;
            padding-right: 0 !important;
            overflow: hidden;
            overflow-y: hidden !important;
            animation: none;
        }

        .gh-portal-popup-container.feedback {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            border-radius: 18px 18px 0 0;
            margin: 0 !important;
            animation: none;
            animation: mobile-tray-from-bottom 0.4s ease;
        }

        .gh-portal-popup-wrapper.feedback .gh-portal-closeicon-container {
            display: none;
        }

        .gh-feedback-buttons-group,
        .gh-portal-confirm-button {
            margin-top: 28px;
        }

        .gh-portal-powered.outside.feedback {
            display: none;
        }

        @keyframes mobile-tray-from-bottom {
            0% {
                opacity: 0;
                transform: translateY(300px);
            }
            20% {
                opacity: 1.0;
            }
            100% {
                transform: translateY(0);
            }
        }
    }
`;
    function j0({ error: e }) {
        const { onAction: t, t: n } = k.useContext(_);
        return c.jsxs("div", {
            className: "gh-portal-content gh-portal-feedback with-footer",
            children: [
                c.jsx(ne, {}),
                c.jsx("div", {
                    className: "gh-feedback-icon gh-feedback-icon-error",
                    children: c.jsx(C0, {}),
                }),
                c.jsx("h1", {
                    className: "gh-portal-main-title",
                    children: n("Sorry, that didn’t work."),
                }),
                c.jsx("div", {
                    children: c.jsx("p", {
                        className: "gh-portal-text-center",
                        children: e,
                    }),
                }),
                c.jsx(te, {
                    style: { width: "100%" },
                    retry: !1,
                    onClick: () => t("closePopup"),
                    disabled: !1,
                    brandColor: "#000000",
                    label: n("Close"),
                    isRunning: !1,
                    tabindex: "3",
                    classes: "sticky bottom",
                }),
            ],
        });
    }
    const P0 = ({ onConfirm: e, loading: t, initialScore: n }) => {
        const { onAction: a, brandColor: r, t: i } = k.useContext(_),
            [o, s] = k.useState(n),
            l = (b) => {
                b.stopPropagation();
            },
            u = () => {
                a("closePopup");
            },
            m = async (b) => {
                b.stopPropagation(), await e(o);
            },
            p = (b) => {
                const y = "gh-feedback-button";
                return b === o ? `${y} gh-feedback-button-selected` : y;
            },
            d = (b) => (b === o ? { color: r } : {});
        return c.jsxs("div", {
            className: "gh-portal-confirm-dialog",
            onMouseDown: l,
            children: [
                c.jsx("h1", {
                    className: "gh-portal-confirm-title",
                    children: i("Give feedback on this post"),
                }),
                c.jsxs("div", {
                    className: "gh-feedback-buttons-group",
                    children: [
                        c.jsxs("button", {
                            className: p(1),
                            style: d(1),
                            onClick: () => s(1),
                            children: [c.jsx(zf, {}), i("More like this")],
                        }),
                        c.jsxs("button", {
                            className: p(0),
                            style: d(0),
                            onClick: () => s(0),
                            children: [c.jsx(If, {}), i("Less like this")],
                        }),
                    ],
                }),
                c.jsx(te, {
                    classes: "gh-portal-confirm-button",
                    retry: !1,
                    onClick: m,
                    disabled: !1,
                    brandColor: r,
                    label: i("Submit feedback"),
                    isRunning: t,
                    tabindex: "3",
                }),
                c.jsx(ne, { close: () => u() }),
            ],
        });
    };
    async function _0({ siteUrl: e, uuid: t, postId: n, score: a }) {
        await ca({ siteUrl: e }).feedback.add({ uuid: t, postId: n, score: a });
    }
    const N0 = ({ action: e, score: t }) => (
            k.useEffect(() => {
                e(t);
            }),
            c.jsx(Do, {})
        ),
        T0 = ({ positive: e }) => {
            const { onAction: t, brandColor: n, t: a } = k.useContext(_),
                r = e ? c.jsx(zf, {}) : c.jsx(If, {});
            return c.jsxs("div", {
                className: "gh-portal-content gh-portal-feedback",
                children: [
                    c.jsx(ne, {}),
                    c.jsx("div", {
                        className: "gh-feedback-icon",
                        children: r,
                    }),
                    c.jsx("h1", {
                        className: "gh-portal-main-title",
                        children: a("Thanks for the feedback!"),
                    }),
                    c.jsx("p", {
                        className: "gh-portal-text-center",
                        children: a(
                            "Your input helps shape what gets published."
                        ),
                    }),
                    c.jsx(te, {
                        style: { width: "100%" },
                        retry: !1,
                        onClick: () => t("closePopup"),
                        disabled: !1,
                        brandColor: n,
                        label: a("Close"),
                        isRunning: !1,
                        tabindex: "3",
                        classes: "sticky bottom",
                    }),
                ],
            });
        };
    function I0() {
        const { site: e, pageData: t, member: n, t: a } = k.useContext(_),
            { uuid: r, postId: i, score: o } = t,
            [s, l] = k.useState(o),
            u = s === 1,
            m = !!n,
            [p, d] = k.useState(m),
            [b, y] = k.useState(m),
            [v, g] = k.useState(null),
            h = async (x) => {
                y(!0);
                try {
                    await _0({ siteUrl: e.url, uuid: r, postId: i, score: x }),
                        l(x);
                } catch (w) {
                    const E = kt.getMessageFromError(
                        w,
                        a(
                            "There was a problem submitting your feedback. Please try again a little later."
                        )
                    );
                    g(E);
                }
                y(!1);
            },
            f = async (x) => {
                await h(x), d(!0);
            };
        if (v) return c.jsx(j0, { error: v });
        if (p) {
            if (b) return c.jsx(N0, { action: h, score: s });
        } else return c.jsx(P0, { onConfirm: f, loading: b, initialScore: s });
        return c.jsx(T0, { positive: u });
    }
    const z0 = `.gh-email-suppressed-page-title{margin-bottom:14px}.gh-email-suppressed-page-icon{display:block;width:38px;height:38px;margin:0 auto 18px}.gh-email-suppressed-page-text{padding:0 14px;text-align:center;color:var(--grey6)}.gh-email-faq-footer-text{color:var(--grey8)}.gh-portal-list-detail.email-newsletter .gh-email-faq-page-button{display:block;margin-top:3px}.accountEmail .gh-email-faq-page-button{margin-left:4px}.emailReceivingFAQ .gh-portal-btn-back,.emailReceivingFAQ .gh-portal-btn-back:hover{left:calc(6vmin - 14px)}.emailReceivingFAQ .gh-portal-closeicon-container{right:calc(6vmin - 20px)}@media (max-width: 480px){.emailReceivingFAQ .gh-portal-btn-back,.emailReceivingFAQ .gh-portal-btn-back:hover{left:16px}.emailReceivingFAQ .gh-portal-closeicon-container{right:24px}}.gh-email-faq-page-button{color:var(--brandcolor);cursor:pointer;background:none;transition:color linear .1s;font-size:1.45rem}
`,
        A0 = "",
        D0 = "",
        M0 = (e) =>
            k.createElement(
                "svg",
                {
                    id: "Regular",
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    ...e,
                },
                k.createElement("title", null, "confetti"),
                k.createElement(
                    "defs",
                    null,
                    k.createElement(
                        "style",
                        null,
                        `
      .cls-1{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px}
    `
                    )
                ),
                k.createElement("ellipse", {
                    className: "cls-1",
                    cx: 11.531,
                    cy: 12.469,
                    rx: 2.625,
                    ry: 5.25,
                    transform: "rotate(-45 11.531 12.47)",
                }),
                k.createElement("path", {
                    className: "cls-1",
                    d: "M7.4 9.7.888 21.121a1.5 1.5 0 0 0 1.991 1.991L14.3 16.605M15.773 7.7a.375.375 0 0 1 0 .531m-.53-.531a.375.375 0 0 1 .53 0m-.53.527a.377.377 0 0 1 0-.531m.53.531a.375.375 0 0 1-.53 0m4.773-4.773a.374.374 0 0 1 0 .53m-.53-.53a.374.374 0 0 1 .53 0m-.53.53a.374.374 0 0 1 0-.53m.53.53a.375.375 0 0 1-.53 0m.53 10.076a.375.375 0 0 1 0 .531m-.53-.531a.375.375 0 0 1 .53 0m-.53.531a.375.375 0 0 1 0-.531m.53.531a.375.375 0 0 1-.53 0M8.349 4.514a.377.377 0 0 1 0 .531m-.53-.531a.375.375 0 0 1 .53 0m-.53.531a.375.375 0 0 1 0-.531m.53.531a.375.375 0 0 1-.53 0M12.857.75a13.836 13.836 0 0 1-.531 5.62m4.243-4.242-.53 2.651m7.211 6.364a13.836 13.836 0 0 0-5.62.531m4.242-4.243-2.651.53",
                })
            ),
        R0 = `
    .gh-portal-tips-and-donations .gh-tips-and-donations-icon-success {
        padding: 10px 0;
        text-align: center;
        color: var(--brandcolor);
        width: 48px;
        margin: 0 auto;
    }

    .gh-portal-tips-and-donations .gh-portal-text-center {
        padding: 16px 32px 12px;
    }
`,
        L0 = () => {
            const { onAction: e, brandColor: t } = k.useContext(_),
                n = "Thank you!",
                a = "Your support means a lot.",
                r = "Close";
            return c.jsxs("div", {
                className: "gh-portal-content gh-portal-tips-and-donations",
                children: [
                    c.jsx(ne, {}),
                    c.jsx("div", {
                        className: "gh-tips-and-donations-icon-success",
                        children: c.jsx(M0, {}),
                    }),
                    c.jsx("h1", {
                        className: "gh-portal-main-title",
                        children: n,
                    }),
                    c.jsx("p", {
                        className: "gh-portal-text-center",
                        children: a,
                    }),
                    c.jsx(te, {
                        style: { width: "100%" },
                        retry: !1,
                        onClick: () => e("closePopup"),
                        disabled: !1,
                        brandColor: t,
                        label: r,
                        isRunning: !1,
                        tabindex: "3",
                        classes: "sticky bottom",
                    }),
                ],
            });
        },
        Y0 = (e) =>
            k.createElement(
                "svg",
                {
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    ...e,
                },
                k.createElement("title", null, "warning-stroke"),
                k.createElement("path", {
                    d: "M13.313 2.275a1.5 1.5 0 0 0-2.626 0l-9.75 18A1.5 1.5 0 0 0 2.25 22.5h19.5a1.5 1.5 0 0 0 1.313-2.225zM12 18a.375.375 0 0 1 .375.375m-.75 0A.375.375 0 0 1 12 18m0 .75a.375.375 0 0 1-.375-.375m.75 0a.375.375 0 0 1-.375.375M12 15V8.25",
                    style: {
                        fill: "none",
                        stroke: "currentColor",
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        strokeWidth: "1.5px",
                    },
                })
            ),
        U0 = `
    .gh-portal-tips-and-donations .gh-tips-and-donations-icon-error {
        padding: 10px 0;
        text-align: center;
        width: 48px;
        margin: 0 auto;
        color: #f50b23;
    }

    .gh-portal-tips-donations .gh-tips-donations-icon.gh-feedback-icon-error {
        color: #f50b23;
        width: 96px;
    }

    .gh-portal-tips-and-donations .gh-portal-text-center {
        padding: 16px 32px 12px;
    }
`,
        Zc = ({ error: e }) => {
            const { onAction: t } = k.useContext(_),
                n = "Sorry, that didn’t work.",
                a =
                    e ||
                    "There was an error processing your payment. Please try again.",
                r = "Close";
            return c.jsxs("div", {
                className: "gh-portal-content gh-portal-tips-and-donations",
                children: [
                    c.jsx(ne, {}),
                    c.jsx("div", {
                        className: "gh-tips-and-donations-icon-error",
                        children: c.jsx(Y0, {}),
                    }),
                    c.jsx("h1", {
                        className: "gh-portal-main-title",
                        children: n,
                    }),
                    c.jsx("p", {
                        className: "gh-portal-text-center",
                        children: a,
                    }),
                    c.jsx(te, {
                        style: { width: "100%" },
                        retry: !0,
                        onClick: () => t("closePopup"),
                        disabled: !1,
                        brandColor: "#000000",
                        label: r,
                        isDestructive: !0,
                        isRunning: !1,
                        tabindex: "3",
                        classes: "sticky bottom",
                    }),
                ],
            });
        },
        B0 = (e) =>
            k.createElement(
                "svg",
                {
                    width: 24,
                    height: 24,
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                },
                k.createElement("path", {
                    d: "M3.84 20.25L19.75 4.34",
                    stroke: "currentColor",
                    strokeWidth: 1.5,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                }),
                k.createElement("path", {
                    d: "M19.75 19.3398V4.33984H4.75",
                    stroke: "currentColor",
                    strokeWidth: 1.5,
                    strokeLinecap: "round",
                    strokeLinejoin: "round",
                })
            ),
        Af = (e) =>
            k.createElement(
                "svg",
                {
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 24 24",
                    ...e,
                },
                k.createElement(
                    "defs",
                    null,
                    k.createElement(
                        "style",
                        null,
                        `.a{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px!important;}
        `
                    )
                ),
                k.createElement("title", null, "check-circle-1"),
                k.createElement("path", {
                    className: "a",
                    d: "M6,13.223,8.45,16.7a1.049,1.049,0,0,0,1.707.051L18,6.828",
                }),
                k.createElement("circle", {
                    className: "a",
                    cx: 12,
                    cy: 11.999,
                    r: 11.25,
                })
            ),
        F0 = `
    .gh-portal-recommendations-header .gh-portal-main-title {
        padding: 0 32px;
        text-wrap: balance;
    }

    .gh-portal-recommendation-item {
        min-height: 38px;
    }

    .gh-portal-recommendation-item .gh-portal-list-detail {
        padding: 4px 24px 4px 0px;
    }

    .gh-portal-recommendation-item-header {
    display: flex;
    align-items: center;
    gap: 10px;
    cursor: pointer;
    }

    .gh-portal-recommendation-item-favicon {
    width: 20px;
    height: 20px;
    border-radius: 3px;
    }

    .gh-portal-recommendations-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-bottom: 20px;
    }

    .gh-portal-recommendations-description {
    text-align: center;
    }

    .gh-portal-recommendation-description-container {
        position: relative;
    }

    .gh-portal-recommendation-item .gh-portal-recommendation-description-container p {
        font-size: 1.35rem;
        padding-left: 30px;
        font-weight: 400;
        letter-spacing: 0.1px;
        margin-top: 4px;
    }

    .gh-portal-recommendation-description-hidden {
        visibility: hidden;
    }

    .gh-portal-recommendation-item .gh-portal-list-detail {
    transition: 0.2s ease-in-out opacity;
    }

    .gh-portal-list-detail:hover {
    cursor: pointer;
    opacity: 0.8;
    }

    .gh-portal-recommendation-arrow-icon {
    height: 12px;
    opacity: 0;
    margin-left: -6px;
    transition: 0.2s ease-in opacity;
    }

    .gh-portal-recommendation-arrow-icon path {
    stroke-width: 3px;
    stroke: #555;
    }

    .gh-portal-recommendation-item .gh-portal-list-detail:hover .gh-portal-recommendation-arrow-icon {
    opacity: 0.8;
    }

    .gh-portal-recommendation-item .gh-portal-btn-list {
        height: 28px;
    }

    .gh-portal-recommendation-subscribed {
        display: flex;
        padding-left: 30px;
        align-items: center;
        gap: 4px;
        font-size: 1.35rem;
        font-weight: 400;
        letter-spacing: 0.1px;
        line-height: 1.3em;
        animation: 0.5s ease-in-out fadeIn;
    }

    .gh-portal-recommendation-subscribed.with-description {
        position: absolute;
    }

    .gh-portal-recommendation-subscribed.without-description {
        margin-top: 5px;
    }

    .gh-portal-recommendation-subscribed span {
        color: var(--grey6);
    }

    .gh-portal-recommendation-checkmark-icon {
        height: 16px;
        width: 16px;
        padding: 0 2px;
        color: #30cf43;
    }

    .gh-portal-recommendation-item .gh-portal-loadingicon {
        position: relative !important;
        height: 24px;
    }

    .gh-portal-recommendation-item-action {
        min-height: 28px;
    }

    .gh-portal-popup-container.recommendations .gh-portal-action-footer

    .gh-portal-btn-recommendations-later {
        margin: 8px auto 24px;
        color: var(--grey6);
        font-weight: 400;
    }
`,
        Df = (e) => {
            let t = e.length,
                n;
            for (; t > 0; )
                (n = Math.floor(Math.random() * t)),
                    (t -= 1),
                    ([e[t], e[n]] = [e[n], e[t]]);
            return e;
        },
        O0 = ({ title: e, favicon: t, featuredImage: n }) => {
            const [a, r] = k.useState(t || n),
                i = () => {
                    r(null);
                };
            return a
                ? c.jsx("img", {
                      className: "gh-portal-recommendation-item-favicon",
                      src: a,
                      alt: e,
                      onError: i,
                  })
                : c.jsx("div", {
                      className: "gh-portal-recommendation-item-favicon",
                  });
        },
        Mf = (e) => {
            const t = window.open(e, "_blank");
            t ? t.focus() : (window.location.href = e);
        },
        H0 = (e) => {
            const { t, onAction: n, member: a, site: r } = k.useContext(_),
                {
                    title: i,
                    url: o,
                    description: s,
                    favicon: l,
                    one_click_subscribe: u,
                    featured_image: m,
                } = e,
                p = a && u,
                [d, b] = k.useState(!1),
                [y, v] = k.useState(!1),
                [g, h] = k.useState(!1),
                f = r.outbound_link_tagging ?? !1,
                x = k.useMemo(() => {
                    if (!f) return o;
                    try {
                        const $ = new URL(o);
                        return $.searchParams.has("ref") ||
                            $.searchParams.has("utm_source") ||
                            $.searchParams.has("source")
                            ? o
                            : ($.searchParams.set("ref", Bh()), $.toString());
                    } catch {
                        return o;
                    }
                }, [o, f]),
                w = k.useCallback(() => {
                    Mf(x),
                        y ||
                            (n("trackRecommendationClicked", {
                                recommendationId: e.id,
                            }),
                            v(!0));
                }, [x, e.id, y]),
                E = k.useCallback(async () => {
                    try {
                        h(!0),
                            await n("oneClickSubscribe", {
                                siteUrl: o,
                                throwErrors: !0,
                            }),
                            n("trackRecommendationSubscribed", {
                                recommendationId: e.id,
                            }),
                            b(!0);
                    } catch {
                        const T = new URL("#/portal/signup", x);
                        Mf(T),
                            y ||
                                (n("trackRecommendationClicked", {
                                    recommendationId: e.id,
                                }),
                                v(!0));
                    }
                    h(!1);
                }, [b, o, x, e.id, y]),
                S = k.useCallback(
                    ($) => {
                        g || (p ? E($) : w($));
                    },
                    [g, p, E, w]
                );
            return c.jsxs("section", {
                className: "gh-portal-recommendation-item",
                children: [
                    c.jsxs("div", {
                        className: "gh-portal-list-detail gh-portal-list-big",
                        onClick: w,
                        children: [
                            c.jsxs("div", {
                                className:
                                    "gh-portal-recommendation-item-header",
                                children: [
                                    c.jsx(O0, {
                                        title: i,
                                        favicon: l,
                                        featuredImage: m,
                                    }),
                                    c.jsx("h3", { children: i }),
                                    c.jsx(B0, {
                                        className:
                                            "gh-portal-recommendation-arrow-icon",
                                    }),
                                ],
                            }),
                            c.jsxs("div", {
                                className:
                                    "gh-portal-recommendation-description-container",
                                children: [
                                    d &&
                                        c.jsxs("div", {
                                            className:
                                                "gh-portal-recommendation-subscribed " +
                                                (s
                                                    ? "with-description"
                                                    : "without-description"),
                                            children: [
                                                c.jsx("span", {
                                                    children: t(
                                                        "Verification link sent, check your inbox"
                                                    ),
                                                }),
                                                c.jsx(Af, {
                                                    className:
                                                        "gh-portal-recommendation-checkmark-icon",
                                                    alt: "",
                                                }),
                                            ],
                                        }),
                                    s &&
                                        c.jsx("p", {
                                            className: d
                                                ? "gh-portal-recommendation-description-hidden"
                                                : "",
                                            children: s,
                                        }),
                                ],
                            }),
                        ],
                    }),
                    c.jsxs("div", {
                        className: "gh-portal-recommendation-item-action",
                        children: [
                            !d &&
                                g &&
                                c.jsx("span", {
                                    className:
                                        "gh-portal-recommendations-loading-container",
                                    children: c.jsx(oa, {
                                        className: "gh-portal-loadingicon dark",
                                    }),
                                }),
                            !d &&
                                !g &&
                                p &&
                                c.jsx("button", {
                                    type: "button",
                                    className:
                                        "gh-portal-btn gh-portal-btn-list",
                                    onClick: S,
                                    children: t("Subscribe"),
                                }),
                        ],
                    }),
                ],
            });
        },
        V0 = () => {
            const {
                    api: e,
                    site: t,
                    pageData: n,
                    t: a,
                    onAction: r,
                } = k.useContext(_),
                { title: i, icon: o } = t,
                { recommendations_enabled: s = !1 } = t,
                [l, u] = k.useState(null);
            k.useEffect(() => {
                e.site
                    .recommendations({ limit: 100 })
                    .then((v) => {
                        const g = v.recommendations.filter(
                                (f) => f.one_click_subscribe
                            ),
                            h = v.recommendations.filter(
                                (f) => !f.one_click_subscribe
                            );
                        u([...Df(g), ...Df(h)]);
                    })
                    .catch((v) => {
                        console.error(v);
                    });
            }, []);
            const [m, p] = k.useState(5),
                d = () => {
                    p(l.length);
                };
            k.useEffect(
                () => () => {
                    if (n.signup) {
                        const v = [];
                        v.push("action", "success"), qc(v);
                    }
                },
                []
            );
            const b =
                    n && n.signup
                        ? a("Welcome to {{siteTitle}}", {
                              siteTitle: i,
                              interpolation: { escapeValue: !1 },
                          })
                        : a("Recommendations"),
                y =
                    n && n.signup
                        ? a(
                              "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy."
                          )
                        : a("Here are a few other sites you may enjoy.");
            return s
                ? l === null
                    ? c.jsx(Do, {})
                    : c.jsxs("div", {
                          className: "gh-portal-content with-footer",
                          children: [
                              c.jsx(ne, {}),
                              c.jsxs("div", {
                                  className: "gh-portal-recommendations-header",
                                  children: [
                                      o &&
                                          c.jsx("img", {
                                              className:
                                                  "gh-portal-signup-logo",
                                              alt: i,
                                              src: o,
                                          }),
                                      c.jsx("h1", {
                                          className: "gh-portal-main-title",
                                          children: b,
                                      }),
                                  ],
                              }),
                              c.jsx("p", {
                                  className:
                                      "gh-portal-recommendations-description",
                                  children: y,
                              }),
                              c.jsx("div", {
                                  className: "gh-portal-list",
                                  children: l
                                      .slice(0, m)
                                      .map((v, g) => c.jsx(H0, { ...v }, g)),
                              }),
                              (m < l.length || (n && n.signup)) &&
                                  c.jsxs("footer", {
                                      className: "gh-portal-action-footer",
                                      children: [
                                          m < l.length &&
                                              c.jsx("button", {
                                                  className:
                                                      "gh-portal-btn gh-portal-center",
                                                  style: { width: "100%" },
                                                  onClick: d,
                                                  children: c.jsx("span", {
                                                      children: a("Show all"),
                                                  }),
                                              }),
                                          n &&
                                              n.signup &&
                                              c.jsx("button", {
                                                  className:
                                                      "gh-portal-btn gh-portal-center gh-portal-btn-link gh-portal-btn-recommendations-later",
                                                  style: { width: "100%" },
                                                  onClick: d,
                                                  children: c.jsx("span", {
                                                      onClick: () =>
                                                          r("closePopup"),
                                                      children:
                                                          a("Maybe later"),
                                                  }),
                                              }),
                                      ],
                                  }),
                          ],
                      })
                : null;
        },
        W0 = `
.gh-portal-main-title {
    text-align: center;
    color: var(--grey0);
    line-height: 1.1em;
}

.gh-portal-text-disabled {
    color: var(--grey3);
    font-weight: normal;
    opacity: 0.35;
}

.gh-portal-text-center {
    text-align: center;
}

.gh-portal-input-label {
    color: var(--grey1);
    font-size: 1.3rem;
    font-weight: 600;
    margin-bottom: 2px;
    letter-spacing: 0px;
}

.gh-portal-setting-data {
    color: var(--grey6);
    font-size: 1.3rem;
    line-height: 1.15em;
}

.gh-portal-error {
    color: var(--red);
    font-size: 1.4rem;
    line-height: 1.6em;
    margin: 12px 0;
}

/* Buttons
/* ----------------------------------------------------- */
.gh-portal-btn {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    font-weight: 500;
    line-height: 1em;
    letter-spacing: 0.2px;
    text-align: center;
    white-space: nowrap;
    text-decoration: none;
    color: var(--grey0);
    background: var(--white);
    border: 1px solid var(--grey12);
    min-width: 80px;
    height: 44px;
    padding: 0 1.8rem;
    border-radius: 6px;
    cursor: pointer;
    transition: all .25s ease;
    box-shadow: none;
    user-select: none;
    outline: none;
}

.gh-portal-btn:hover {
    border-color: var(--grey10);
}

.gh-portal-btn:disabled {
    opacity: 0.5 !important;
    cursor: auto;
}

.gh-portal-btn-container.sticky {
    transition: none;
    position: sticky;
    bottom: 0;
    margin: 0 0 -32px;
    padding: 32px 0 32px;
    background: linear-gradient(0deg, rgba(var(--whitergb),1) 75%, rgba(var(--whitergb),0) 100%);
}

.gh-portal-btn-container.sticky.m28 {
    margin: 0 0 -28px;
    padding: 28px 0 28px;
}

.gh-portal-btn-container.sticky.m24 {
    margin: 0 0 -24px;
    padding: 24px 0 24px;
}

.gh-portal-signup-terms-wrapper + .gh-portal-btn-container {
    margin: 16px 0 0;
}

.gh-portal-signup-terms-wrapper + .gh-portal-btn-container.sticky.m24 {
    padding: 16px 0 24px;
}

.gh-portal-btn-container .gh-portal-btn {
    margin: 0;
}

.gh-portal-btn-icon svg {
    width: 16px;
    height: 16px;
    margin-right: 4px;
    stroke: currentColor;
}

.gh-portal-btn-icon svg path {
    stroke: currentColor;
}

.gh-portal-btn-link {
    line-height: 1;
    background: none;
    padding: 0;
    height: unset;
    min-width: unset;
    box-shadow: none;
    border: none;
}

.gh-portal-btn-link:hover {
    box-shadow: none;
    opacity: 0.85;
}

.gh-portal-btn-branded {
    color: var(--brandcolor);
}

.gh-portal-btn-list {
    font-size: 1.5rem;
    color: var(--brandcolor);
    height: 38px;
    width: unset;
    min-width: unset;
    padding: 0 4px;
    margin: 0 -4px;
    box-shadow: none;
    border: none;
}

.gh-portal-btn-list:hover {
    box-shadow: none;
    opacity: 0.75;
}

.gh-portal-btn-logout {
    position: absolute;
    top: 22px;
    left: 24px;
    background: none;
    border: none;
    height: unset;
    color: var(--grey3);
    padding: 0;
    margin: 0;
    z-index: 999;
    box-shadow: none;
}

.gh-portal-btn-logout .label {
    opacity: 0;
    transform: translateX(-6px);
    transition: all 0.2s ease-in-out;
}

.gh-portal-btn-logout:hover {
    padding: 0;
    margin: 0;
    background: none;
    border: none;
    height: unset;
    box-shadow: none;
}

.gh-portal-btn-logout:hover .label {
    opacity: 1.0;
    transform: translateX(-4px);
}

.gh-portal-btn-site-title-back {
    transition: transform 0.25s ease-in-out;
    z-index: 10000;
}

.gh-portal-btn-site-title-back span {
    margin-right: 4px;
    transition: transform 0.4s cubic-bezier(0.1, 0.7, 0.1, 1);
}


.gh-portal-btn-site-title-back:hover span {
    transform: translateX(-3px);
}

@media (max-width: 960px) {
    .gh-portal-btn-site-title-back {
        display: none;
    }
}

.gh-portal-logouticon {
    color: var(--grey9);
    cursor: pointer;
    width: 23px;
    height: 23px;
    padding: 6px;
    transform: translateX(0);
    transition: all 0.2s ease-in-out;
}

.gh-portal-logouticon path {
    stroke: var(--grey9);
    transition: all 0.2s ease-in-out;
}

.gh-portal-btn-logout:hover .gh-portal-logouticon {
    transform: translateX(-2px);
}

.gh-portal-btn-logout:hover .gh-portal-logouticon path {
    stroke: var(--grey3);
}

/* Global layout styles
/* ----------------------------------------------------- */
.gh-portal-popup-background {
    position: absolute;
    display: block;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    animation: fadein 0.2s;
    background: linear-gradient(315deg , rgba(var(--blackrgb),0.2) 0%, rgba(var(--blackrgb),0.1) 100%);
    backdrop-filter: blur(2px);
    -webkit-backdrop-filter: blur(2px);
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
}

.gh-portal-popup-background.preview {
    background: linear-gradient(45deg, rgba(255,255,255,1) 0%, rgba(249,249,250,1) 100%);
    animation: none;
    pointer-events: none;
}

@keyframes fadein {
    0% { opacity: 0; }
    100%{ opacity: 1.0; }
}

.gh-portal-popup-wrapper {
    position: relative;
    padding: 5vmin 0 0;
    height: 100%;
    max-height: 100vh;
    overflow: scroll;
}

/* Hiding scrollbars */
.gh-portal-popup-wrapper {
    padding-right: 30px !important;
    margin-right: -30px !important;
    -ms-overflow-style: none;
    scrollbar-width: none;
}

.gh-portal-popup-wrapper::-webkit-scrollbar {
    display: none;
}

.gh-portal-popup-wrapper.full-size {
    height: 100vh;
    padding: 0;
}

.gh-portal-popup-container {
    outline: none;
    position: relative;
    display: flex;
    box-sizing: border-box;
    flex-direction: column;
    justify-content: flex-start;
    font-size: 1.5rem;
    text-align: left;
    letter-spacing: 0;
    text-rendering: optimizeLegibility;
    background: var(--white);
    width: 500px;
    margin: 0 auto 40px;
    padding: 32px;
    transform: translateY(0px);
    border-radius: 10px;
    box-shadow: 0 3.8px 2.2px rgba(var(--blackrgb), 0.028), 0 9.2px 5.3px rgba(var(--blackrgb), 0.04), 0 17.3px 10px rgba(var(--blackrgb), 0.05), 0 30.8px 17.9px rgba(var(--blackrgb), 0.06), 0 57.7px 33.4px rgba(var(--blackrgb), 0.072), 0 138px 80px rgba(var(--blackrgb), 0.1);
    animation: popup 0.25s ease-in-out;
    z-index: 9999;
}

.gh-portal-popup-container.large-size {
    width: 100%;
    max-width: 720px;
    justify-content: flex-start;
    padding: 0;
}

.gh-portal-popup-container.full-size {
    width: 100vw;
    min-height: 100vh;
    justify-content: flex-start;
    animation: popup-full-size 0.25s ease-in-out;
    margin: 0;
    border-radius: 0;
    transform: translateY(0px);
    transform-origin: top;
    padding: 2vmin 6vmin;
    padding-bottom: 4vw;
}

.gh-portal-popup-container.full-size.account-plan {
    justify-content: flex-start;
    padding-top: 4vw;
}

.gh-portal-popup-container.preview {
    animation: none !important;
}

@keyframes popup {
    0% {
        transform: translateY(-30px);
        opacity: 0;
    }
    1% {
        transform: translateY(30px);
        opacity: 0;
    }
    100%{
        transform: translateY(0);
        opacity: 1.0;
    }
}

@keyframes popup-full-size {
    0% {
        transform: translateY(0px);
        opacity: 0;
    }
    1% {
        transform: translateY(30px);
        opacity: 0;
    }
    100%{
        transform: translateY(0);
        opacity: 1.0;
    }
}

.gh-portal-powered {
    position: absolute;
    bottom: 24px;
    left: 24px;
    z-index: 9999;
}

.gh-portal-powered a {
    border: none;
    display: flex;
    align-items: center;
    line-height: 0;
    border-radius: 4px;
    background: #ffffff;
    padding: 6px 8px 6px 7px;
    color: #303336;
    font-size: 1.25rem;
    letter-spacing: -0.2px;
    font-weight: 500;
    text-decoration: none;
    transition: color 0.5s ease-in-out;
    width: 146px;
    height: 28px;
    line-height: 28px;
}

.gh-portal-powered a:hover {
    color: #15171A;
}

@keyframes powered-fade-in {
    0% {
        transform: scale(0.98);
        opacity: 0;
    }
    75% {
        opacity: 1.0;
    }
    100%{
        transform: scale(1);
    }
}

.gh-portal-powered a svg {
    height: 16px;
    width: 16px;
    margin: 0 6px 0 0;
}

.gh-portal-powered.outside.full-size {
    display: none;
}

/* Sets the main content area of the popup scrollable.
/* 12vw is the sum horizontal padding of the popup container
*/
.gh-portal-content {
    position: relative;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.gh-portal-content::-webkit-scrollbar {
    display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.gh-portal-content {
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
}

.gh-portal-closeicon-container {
    position: fixed;
    top: 24px;
    right: 24px;
    z-index: 10000;
}

.gh-portal-closeicon {
    color: var(--grey10);
    cursor: pointer;
    width: 20px;
    height: 20px;
    padding: 12px;
    transition: all 0.2s ease-in-out;
}

.gh-portal-closeicon:hover {
    color: var(--grey5);
}

.gh-portal-popup-wrapper.full-size .gh-portal-closeicon-container,
.gh-portal-popup-container.full-size .gh-portal-closeicon-container {
    top: 20px;
    right: 20px;
}

.gh-portal-popup-wrapper.full-size .gh-portal-closeicon,
.gh-portal-popup-container.full-size .gh-portal-closeicon {
    color: var(--grey6);
    width: 24px;
    height: 24px;
}

.gh-portal-logout-container {
    position: absolute;
    top: 8px;
    left: 8px;
}

.gh-portal-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding-bottom: 24px;
}

.gh-portal-section {
    margin-bottom: 40px;
}

.gh-portal-section.form {
    margin-bottom: 20px;
}

.gh-portal-section.flex {
    display: flex;
    flex-direction: column;
    gap: 2rem;
}

.gh-portal-detail-header {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    margin: -2px 0 40px;
}

.gh-portal-detail-footer .gh-portal-btn {
    min-width: 90px;
}

.gh-portal-action-footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-direction: column;
    gap: 12px;
}

.gh-portal-footer-secondary {
    display: flex;
    font-size: 14.5px;
    letter-spacing: 0.3px;
}

.gh-portal-footer-secondary button {
    font-size: 14.5px;
}

.gh-portal-footer-secondary-light {
    color: var(--grey7);
}

.gh-portal-list-header {
    font-size: 1.25rem;
    font-weight: 500;
    color: var(--grey3);
    text-transform: uppercase;
    letter-spacing: 0.2px;
    line-height: 1.7em;
    margin-bottom: 4px;
}

.gh-portal-list + .gh-portal-list-header {
    margin-top: 28px;
}

.gh-portal-list + .gh-portal-action-footer {
    margin-top: 40px;
}

.gh-portal-list {
    background: var(--white);
    padding: 20px;
    border-radius: 8px;
    border: 1px solid var(--grey12);
}

.gh-portal-newsletter-selection {
    max-width: 460px;
    margin: 0 auto;
}

.gh-portal-newsletter-selection .gh-portal-list {
    margin-bottom: 40px;
}

.gh-portal-lock-icon-container {
    display: flex;
    justify-content: center;
    flex: 44px 0 0;
    padding-top: 6px;
}

.gh-portal-lock-icon {
    width: 14px;
    height: 14px;
    overflow: visible;
}

.gh-portal-lock-icon path {
    color: var(--grey2);
}

.gh-portal-text-large {
    font-size: 1.8rem;
    font-weight: 600;
}

.gh-portal-list section {
    display: flex;
    align-items: center;
    margin: 0 -20px 20px;
    padding: 0 20px 20px;
    border-bottom: 1px solid var(--grey12);
}

.gh-portal-list section:last-of-type {
    margin-bottom: 0;
    padding-bottom: 0;
    border: none;
}

.gh-portal-list-detail {
    flex-grow: 1;
}

.gh-portal-list-detail h3 {
    font-size: 1.5rem;
    font-weight: 600;
}

.gh-portal-list-detail.gh-portal-list-big h3 {
    font-size: 1.6rem;
    font-weight: 600;
}

.gh-portal-list-detail p {
    font-size: 1.45rem;
    letter-spacing: 0.3px;
    line-height: 1.3em;
    padding: 0;
    margin: 5px 8px 0 0;
    color: var(--grey6);
    word-break: break-word;
}

.gh-portal-list-detail.gh-portal-list-big p {
    font-size: 1.5rem;
}

.gh-portal-list-toggle-wrapper {
    align-items: flex-start !important;
    justify-content: space-between;
}

.gh-portal-list-toggle-wrapper .gh-portal-list-detail {
    padding: 4px 24px 4px 0px;
}

.gh-portal-list-detail .old-price {
    text-decoration: line-through;
}

.gh-portal-right-arrow {
    line-height: 1;
    color: var(--grey8);
}

.gh-portal-right-arrow svg {
    width: 17px;
    height: 17px;
    margin-top: 1px;
    margin-right: -6px;
}

.gh-portal-expire-warning {
    text-align: center;
    color: var(--red);
    font-weight: 500;
    font-size: 1.4rem;
    margin: 12px 0;
}

.gh-portal-cookiebanner {
    background: var(--red);
    color: var(--white);
    text-align: center;
    font-size: 1.4rem;
    letter-spacing: 0.2px;
    line-height: 1.4em;
    padding: 8px;
}

.gh-portal-publication-title {
    text-align: center;
    font-size: 1.6rem;
    letter-spacing: -.1px;
    font-weight: 700;
    text-transform: uppercase;
    color: #15212a;
    margin-top: 6px;
}

/* Icons
/* ----------------------------------------------------- */
.gh-portal-icon {
    color: var(--brandcolor);
}

/* Spacing modifiers
/* ----------------------------------------------------- */
.gh-portal-strong { font-weight: 600; }

.mt1 { margin-top: 4px; }
.mt2 { margin-top: 8px; }
.mt3 { margin-top: 12px; }
.mt4 { margin-top: 16px; }
.mt5 { margin-top: 20px; }
.mt6 { margin-top: 24px; }
.mt7 { margin-top: 28px; }
.mt8 { margin-top: 32px; }
.mt9 { margin-top: 36px; }
.mt10 { margin-top: 40px; }

.mr1 { margin-right: 4px; }
.mr2 { margin-right: 8px; }
.mr3 { margin-right: 12px; }
.mr4 { margin-right: 16px; }
.mr5 { margin-right: 20px; }
.mr6 { margin-right: 24px; }
.mr7 { margin-right: 28px; }
.mr8 { margin-right: 32px; }
.mr9 { margin-right: 36px; }
.mr10 { margin-right: 40px; }

.mb1 { margin-bottom: 4px; }
.mb2 { margin-bottom: 8px; }
.mb3 { margin-bottom: 12px; }
.mb4 { margin-bottom: 16px; }
.mb5 { margin-bottom: 20px; }
.mb6 { margin-bottom: 24px; }
.mb7 { margin-bottom: 28px; }
.mb8 { margin-bottom: 32px; }
.mb9 { margin-bottom: 36px; }
.mb10 { margin-bottom: 40px; }

.ml1 { margin-left: 4px; }
.ml2 { margin-left: 8px; }
.ml3 { margin-left: 12px; }
.ml4 { margin-left: 16px; }
.ml5 { margin-left: 20px; }
.ml6 { margin-left: 24px; }
.ml7 { margin-left: 28px; }
.ml8 { margin-left: 32px; }
.ml9 { margin-left: 36px; }
.ml10 { margin-left: 40px; }

.pt1 { padding-top: 4px; }
.pt2 { padding-top: 8px; }
.pt3 { padding-top: 12px; }
.pt4 { padding-top: 16px; }
.pt5 { padding-top: 20px; }
.pt6 { padding-top: 24px; }
.pt7 { padding-top: 28px; }
.pt8 { padding-top: 32px; }
.pt9 { padding-top: 36px; }
.pt10 { padding-top: 40px; }

.pr1 { padding-right: 4px; }
.pr2 { padding-right: 8px; }
.pr3 { padding-right: 12px; }
.pr4 { padding-right: 16px; }
.pr5 { padding-right: 20px; }
.pr6 { padding-right: 24px; }
.pr7 { padding-right: 28px; }
.pr8 { padding-right: 32px; }
.pr9 { padding-right: 36px; }
.pr10 { padding-right: 40px; }

.pb1 { padding-bottom: 4px; }
.pb2 { padding-bottom: 8px; }
.pb3 { padding-bottom: 12px; }
.pb4 { padding-bottom: 16px; }
.pb5 { padding-bottom: 20px; }
.pb6 { padding-bottom: 24px; }
.pb7 { padding-bottom: 28px; }
.pb8 { padding-bottom: 32px; }
.pb9 { padding-bottom: 36px; }
.pb10 { padding-bottom: 40px; }

.pl1 { padding-left: 4px; }
.pl2 { padding-left: 8px; }
.pl3 { padding-left: 12px; }
.pl4 { padding-left: 16px; }
.pl5 { padding-left: 20px; }
.pl6 { padding-left: 24px; }
.pl7 { padding-left: 28px; }
.pl8 { padding-left: 32px; }
.pl9 { padding-left: 36px; }
.pl10 { padding-left: 40px; }

.hidden { display: none !important; }
`,
        q0 = `
@media (max-width: 1440px) {
    .gh-portal-popup-container:not(.full-size):not(.large-size):not(.preview) {
        width: 480px;
    }

    .gh-portal-popup-container.large-size {
        width: 100%;
        max-width: 600px;
    }

    .gh-portal-input {
        height: 42px;
        margin-bottom: 16px;
    }

    button[class="gh-portal-btn"],
    .gh-portal-btn-main,
    .gh-portal-btn-primary {
        height: 42px;
    }

    .gh-portal-product-price .amount {
        font-size: 32px;
        letter-spacing: -0.022em;
    }
}

@media (max-width: 960px) {
    .gh-portal-powered {
        display: flex;
        position: relative;
        bottom: unset;
        left: unset;
        background: var(--white);
        justify-content: center;
        width: 100%;
        padding-top: 32px;
    }
}

@media (min-width: 520px) {
    .gh-portal-popup-wrapper.full-size .gh-portal-popup-container.preview {
        box-shadow:
            0 0 0 1px rgba(var(--blackrgb),0.02),
            0 2.8px 2.2px rgba(var(--blackrgb), 0.02),
            0 6.7px 5.3px rgba(var(--blackrgb), 0.028),
            0 12.5px 10px rgba(var(--blackrgb), 0.035),
            0 22.3px 17.9px rgba(var(--blackrgb), 0.042),
            0 41.8px 33.4px rgba(var(--blackrgb), 0.05),
            0 100px 80px rgba(var(--blackrgb), 0.07);
        animation: none;
        margin: 32px;
        padding: 32px 32px 0;
        width: calc(100vw - 64px);
        height: calc(100vh - 160px);
        min-height: unset;
        border-radius: 12px;
        overflow: auto;
        justify-content: flex-start;
    }
}

@media (max-width: 480px) {
    .gh-portal-detail-header {
        margin-top: 4px;
    }

    .gh-portal-popup-wrapper {
        height: 100%;
        padding: 0;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
        background: var(--white);
        overflow-y: auto;
    }

    .gh-portal-popup-container {
        width: 100% !important;
        border-radius: 0;
        overflow: unset;
        animation: popup-mobile 0.25s ease-in-out;
        box-shadow: none !important;
        transform: translateY(0);
        padding: 28px !important;
    }

    .gh-portal-popup-container.full-size {
        justify-content: flex-start;
    }

    .gh-portal-popup-container.large-size {
        padding: 0 !important;
    }

    .gh-portal-popup-wrapper.account-home,
    .gh-portal-popup-container.account-home {
        background: var(--grey13);
    }

    .gh-portal-popup-wrapper.full-size .gh-portal-closeicon,
    .gh-portal-popup-container.full-size .gh-portal-closeicon {
        width: 16px;
        height: 16px;
    }

    /* Small width preview in Admin */
    .gh-portal-popup-wrapper.preview:not(.full-size) footer.gh-portal-signup-footer,
    .gh-portal-popup-wrapper.preview:not(.full-size) footer.gh-portal-signin-footer {
        padding-bottom: 32px;
    }

    .gh-portal-popup-container.preview:not(.full-size) {
        max-height: 660px;
        margin-bottom: 0;
    }

    .gh-portal-popup-container.preview:not(.full-size).offer {
        max-height: 860px;
        padding-bottom: 0 !important;
    }

    .gh-portal-popup-wrapper.preview.full-size {
        height: unset;
        max-height: 660px;
    }

    .gh-portal-popup-container.preview.full-size {
        max-height: 660px;
        margin-bottom: 0;
    }

    .preview .gh-portal-invite-only-notification + .gh-portal-signup-message {
        margin-bottom: 16px;
    }

    .preview .gh-portal-btn-container.sticky {
        margin-bottom: 32px;
        padding-bottom: 0;
    }

    .gh-portal-powered {
        padding-top: 12px;
        padding-bottom: 24px;
    }
}

@media (max-width: 390px) {
    .gh-portal-popup-container:not(.account-plan) .gh-portal-detail-header .gh-portal-main-title {
        font-size: 2.1rem;
        margin-top: 1px;
        padding: 0 74px;
        text-align: center;
    }

    .gh-portal-input {
        margin-bottom: 16px;
    }

    .gh-portal-signup-header,
    .gh-portal-signin-header {
        padding-bottom: 16px;
    }
}

@media (min-width: 480px) and (max-height: 880px) {
    .gh-portal-popup-wrapper {
        padding: 4vmin 0 0;
    }
}

@keyframes popup-mobile {
    0% {
        opacity: 0;
    }
    100%{
        opacity: 1.0;
    }
}

/* Prevent zoom */
@media (hover:none) {
    select, textarea, input[type="text"], input[type="text"], input[type="password"],
    input[type="datetime"], input[type="datetime-local"],
    input[type="date"], input[type="month"], input[type="time"],
    input[type="week"], input[type="number"], input[type="email"],
    input[type="url"] {
        font-size: 16px !important;
    }
}
`,
        G0 = `
.gh-portal-popup-wrapper.multiple-products .gh-portal-input-section {
    max-width: 420px;
    margin: 0 auto;
}

/* Multiple product signup/signin-only modifications! */
.gh-portal-popup-wrapper.multiple-products {
    background: #fff;
    box-shadow: 0 3.8px 2.2px rgba(var(--blackrgb), 0.028), 0 9.2px 5.3px rgba(var(--blackrgb), 0.04), 0 17.3px 10px rgba(var(--blackrgb), 0.05), 0 30.8px 17.9px rgba(var(--blackrgb), 0.06), 0 57.7px 33.4px rgba(var(--blackrgb), 0.072), 0 138px 80px rgba(var(--blackrgb), 0.1);
    padding: 0;
    border-radius: 5px;
    height: calc(100vh - 64px);
    max-width: calc(100vw - 64px);
}

.gh-portal-popup-wrapper.multiple-products.signup {
    overflow-y: scroll;
    overflow-x: clip;
    margin: 32px auto !important;
    padding-right: 0 !important; /* Override scrollbar hiding */
}

.gh-portal-popup-wrapper.multiple-products.signin {
    margin: 10vmin auto;
    max-width: 480px;
    height: unset;
}

.gh-portal-popup-wrapper.multiple-products.preview {
    height: calc(100vh - 150px) !important;
}

.gh-portal-popup-wrapper.multiple-products .gh-portal-popup-container {
    align-items: center;
    width: 100% !important;
    box-shadow: none !important;
    animation: fadein 0.35s ease-in-out;
    padding: 1vmin 0;
    transform: translateY(0px);
    margin-bottom: 0;
}

.gh-portal-popup-wrapper.multiple-products.signup .gh-portal-popup-container {
    min-height: calc(100vh - 64px);
    position: unset;
}

.gh-portal-popup-wrapper.multiple-products .gh-portal-powered {
    position: relative;
    display: flex;
    flex: 1;
    align-items: flex-end;
    justify-content: flex-start;
    bottom: unset;
    left: unset;
    width: 100%;
    z-index: 10000;
    padding-bottom: 32px;
}

@media (max-width: 670px) {
    .gh-portal-popup-wrapper.multiple-products .gh-portal-powered {
        justify-content: center;
    }
}

.gh-portal-popup-wrapper.multiple-products .gh-portal-content {
    position: unset;
    overflow-y: visible;
    max-height: unset !important;
}

@media (max-width: 960px) {
    .gh-portal-popup-wrapper.multiple-products.signup:not(.preview) {
        margin: 20px !important;
        height: 100%;
    }
}

@media (max-width: 480px) {
    .gh-portal-popup-wrapper.multiple-products {
        margin: 0 !important;
        max-width: unset !important;
        max-height: 100% !important;
        height: 100% !important;
        border-radius: 0px;
        box-shadow: none;
    }

    .gh-portal-popup-wrapper.multiple-products.signup:not(.preview) {
        margin: 0 !important;
    }

    .gh-portal-popup-wrapper.multiple-products.preview {
        height: unset !important;
        margin: 0 !important;
    }

    .gh-portal-popup-wrapper.multiple-products:not(.dev) .gh-portal-popup-container.preview {
        max-height: 640px;
    }
}

.gh-portal-popup-container.preview * {
    pointer-events: none !important;
}

.gh-portal-unsubscribe-logo {
    width: 60px;
    height: 60px;
    border-radius: 2px;
    margin-top: 12px;
    margin-bottom: 6px;
}

@media (max-width: 480px) {
    .gh-portal-unsubscribe-logo {
        width: 48px;
        height: 48px;
    }
}

.gh-portal-unsubscribe .gh-portal-main-title {
    margin-bottom: 16px;
    font-size: 2.6rem;
}

.gh-portal-unsubscribe p {
    margin-bottom: 16px;
}

.gh-portal-unsubscribe p:last-of-type {
    margin-bottom: 0;
}

.gh-portal-btn-inline {
    display: inline-block;
    margin-left: 4px;
    font-size: 1.5rem;
    font-weight: 600;
    cursor: pointer;
}

.gh-portal-toggle-checked {
    transition: all 0.3s;
    transition-delay: 2s;
}

.gh-portal-checkmark-container {
    display: flex;
    opacity: 0;
    margin-right: 8px;
    transition: opacity ease 0.4s 0.2s;
}

.gh-portal-checkmark-show {
    opacity: 1;
}

.gh-portal-checkmark-icon {
    height: 22px;
    color: #30cf43;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

@keyframes fadeOut {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

.gh-portal-newsletter-selection {
    animation: 0.5s ease-in-out fadeIn;
}

.gh-portal-signup {
    animation: 0.5s ease-in-out fadeIn;
}

.gh-portal-btn-different-plan {
    margin: 0 auto 24px;
    color: var(--grey6);
    font-weight: 400;
}

.gh-portal-hide {
    display: none;
}
`;
    function K0({ site: e }) {
        return (
            Mc +
            W0 +
            Sx +
            t0 +
            c0 +
            Fx() +
            xx +
            yx +
            wx +
            Rh +
            v0 +
            y0 +
            E0() +
            w0 +
            q0 +
            G0 +
            $0 +
            z0 +
            A0 +
            D0 +
            R0 +
            U0 +
            F0
        );
    }
    class Rf extends R.Component {
        constructor(t) {
            super(t), (this.state = { email: "" });
        }
        componentDidMount() {
            const { member: t } = this.context;
            t && this.context.onAction("switchPage", { page: "accountHome" });
        }
        handleSignin(t) {
            t.preventDefault(),
                this.setState(
                    (n) => ({
                        errors: Ao({
                            fields: this.getInputFields({ state: n }),
                        }),
                    }),
                    async () => {
                        const { email: n, errors: a } = this.state,
                            { redirect: r } = this.context.pageData ?? {};
                        (a && Object.values(a).filter((o) => !!o).length > 0) ||
                            this.context.onAction("signin", {
                                email: n,
                                redirect: r,
                            });
                    }
                );
        }
        handleInputChange(t, n) {
            const a = n.name;
            this.setState({ [a]: t.target.value });
        }
        onKeyDown(t) {
            t.keyCode === 13 && this.handleSignin(t);
        }
        getInputFields({ state: t }) {
            const { t: n } = this.context,
                a = t.errors || {};
            return [
                {
                    type: "email",
                    value: t.email,
                    placeholder: "jamie@example.com",
                    label: n("Email"),
                    name: "email",
                    required: !0,
                    errorMessage: a.email || "",
                    autoFocus: !0,
                },
            ];
        }
        renderSubmitButton() {
            const { action: t, t: n } = this.context;
            let a = !1;
            const r = t === "signin:running";
            let i = n(r ? "Sending login link..." : "Continue");
            const o = !!r;
            return (
                t === "signin:failed" && ((i = n("Retry")), (a = !0)),
                c.jsx(te, {
                    dataTestId: "signin",
                    retry: a,
                    style: { width: "100%" },
                    onClick: (s) => this.handleSignin(s),
                    disabled: o,
                    brandColor: this.context.brandColor,
                    label: i,
                    isRunning: r,
                })
            );
        }
        renderSignupMessage() {
            const { brandColor: t, t: n } = this.context;
            return c.jsxs("div", {
                className: "gh-portal-signup-message",
                children: [
                    c.jsx("div", { children: n("Don't have an account?") }),
                    c.jsx("button", {
                        "data-test-button": "signup-switch",
                        className: "gh-portal-btn gh-portal-btn-link",
                        style: { color: t },
                        onClick: () =>
                            this.context.onAction("switchPage", {
                                page: "signup",
                            }),
                        children: c.jsx("span", { children: n("Sign up") }),
                    }),
                ],
            });
        }
        renderForm() {
            const { site: t, t: n } = this.context;
            return pn({ site: t })
                ? c.jsxs("section", {
                      children: [
                          c.jsx("div", {
                              className: "gh-portal-section",
                              children: c.jsx(zo, {
                                  fields: this.getInputFields({
                                      state: this.state,
                                  }),
                                  onChange: (a, r) =>
                                      this.handleInputChange(a, r),
                                  onKeyDown: (a, r) => this.onKeyDown(a, r),
                              }),
                          }),
                          c.jsxs("footer", {
                              className: "gh-portal-signin-footer",
                              children: [
                                  this.renderSubmitButton(),
                                  this.renderSignupMessage(),
                              ],
                          }),
                      ],
                  })
                : c.jsx("section", {
                      children: c.jsx("div", {
                          className: "gh-portal-section",
                          children: c.jsx("p", {
                              className:
                                  "gh-portal-members-disabled-notification",
                              "data-testid":
                                  "members-disabled-notification-text",
                              children: n(
                                  "Memberships unavailable, contact the owner for access."
                              ),
                          }),
                      }),
                  });
        }
        renderSiteIcon() {
            const { site: t } = this.context,
                n = t.icon;
            return n
                ? c.jsx("img", {
                      className: "gh-portal-signup-logo",
                      src: n,
                      alt: this.context.site.title,
                  })
                : pn({ site: t })
                ? null
                : c.jsx(Xc, {
                      className: "gh-portal-icon gh-portal-icon-invitation",
                  });
        }
        renderSiteTitle() {
            const { site: t, t: n } = this.context,
                a = t.title;
            return pn({ site: t })
                ? c.jsx("h1", {
                      className: "gh-portal-main-title",
                      children: n("Sign in"),
                  })
                : c.jsx("h1", {
                      className: "gh-portal-main-title",
                      children: a,
                  });
        }
        renderFormHeader() {
            return c.jsxs("header", {
                className: "gh-portal-signin-header",
                children: [this.renderSiteIcon(), this.renderSiteTitle()],
            });
        }
        render() {
            return c.jsxs(c.Fragment, {
                children: [
                    c.jsx(ne, {}),
                    c.jsx("div", {
                        className: "gh-portal-logged-out-form-container",
                        children: c.jsxs("div", {
                            className: "gh-portal-content signin",
                            children: [
                                this.renderFormHeader(),
                                this.renderForm(),
                            ],
                        }),
                    }),
                ],
            });
        }
    }
    J(Rf, "contextType", _);
    const J0 = ({ handleSignout: e, supportAddress: t = "", t: n }) => {
            const a = `mailto:${t}`;
            return c.jsxs("footer", {
                className: "gh-portal-account-footer",
                children: [
                    c.jsx("ul", {
                        className: "gh-portal-account-footermenu",
                        children: c.jsx("li", {
                            children: c.jsx("button", {
                                "data-test-button": "footer-signout",
                                className: "gh-portal-btn",
                                name: "logout",
                                "aria-label": "logout",
                                onClick: (r) => e(r),
                                children: n("Sign out"),
                            }),
                        }),
                    }),
                    c.jsx("div", {
                        className: "gh-portal-account-footerright",
                        children: c.jsx("ul", {
                            className: "gh-portal-account-footermenu",
                            children: c.jsx("li", {
                                children: c.jsx("a", {
                                    "data-test-link": "footer-support",
                                    className:
                                        "gh-portal-btn gh-portal-btn-branded",
                                    href: a,
                                    onClick: () => {
                                        a && window.open(a);
                                    },
                                    children: n("Contact support"),
                                }),
                            }),
                        }),
                    }),
                ],
            });
        },
        Q0 = () => {
            const { member: e, brandColor: t, t: n } = k.useContext(_),
                a = e.avatar_image;
            return c.jsxs("header", {
                className: "gh-portal-account-header",
                children: [
                    c.jsx(Dc, {
                        gravatar: a,
                        style: {
                            userIcon: {
                                color: t,
                                width: "56px",
                                height: "56px",
                                padding: "2px",
                            },
                        },
                    }),
                    c.jsx("h2", {
                        className: "gh-portal-main-title",
                        children: n("Your account"),
                    }),
                ],
            });
        },
        X0 = () => {
            const {
                site: e,
                action: t,
                brandColor: n,
                onAction: a,
                t: r,
            } = k.useContext(_);
            if (!Uc({ site: e })) return null;
            const i = ["checkoutPlan:running"].includes(t),
                o = () => {
                    a("switchPage", {
                        page: "accountPlan",
                        lastPage: "accountHome",
                    });
                };
            return c.jsx(te, {
                dataTestId: "view-plans",
                isRunning: i,
                label: r("View plans"),
                onClick: () => o(),
                brandColor: n,
                style: { width: "100%" },
            });
        },
        Z0 = () => {
            const { member: e, site: t, t: n } = k.useContext(_),
                { is_stripe_configured: a } = t;
            if (!a || wr({ site: t })) return null;
            const r = ze({ member: e }),
                i = Vt({ member: e });
            if (i && !r) return null;
            if (r) {
                const o = r == null ? void 0 : r.current_period_end;
                if (i && Lc({ member: e })) {
                    const s = Lc({ member: e }),
                        l = yt(s);
                    return c.jsx("div", {
                        className: "gh-portal-section",
                        children: c.jsx("p", {
                            className:
                                "gh-portal-text-center gh-portal-free-ctatext",
                            children: n(
                                "Your subscription will expire on {{expiryDate}}",
                                { expiryDate: l }
                            ),
                        }),
                    });
                }
                if (r != null && r.cancel_at_period_end) return null;
                if (Bc({ sub: r })) {
                    const s = yt(r.trial_end_at);
                    return c.jsx("div", {
                        className: "gh-portal-section",
                        children: c.jsx("p", {
                            className:
                                "gh-portal-text-center gh-portal-free-ctatext",
                            children: n(
                                "Your subscription will start on {{subscriptionStart}}",
                                { subscriptionStart: s }
                            ),
                        }),
                    });
                }
                return c.jsx("div", {
                    className: "gh-portal-section",
                    children: c.jsx("p", {
                        className:
                            "gh-portal-text-center gh-portal-free-ctatext",
                        children: n(
                            "Your subscription will renew on {{renewalDate}}",
                            { renewalDate: yt(o) }
                        ),
                    }),
                });
            }
            return c.jsxs("div", {
                className: "gh-portal-section",
                children: [
                    c.jsx("p", {
                        className:
                            "gh-portal-text-center gh-portal-free-ctatext",
                        children: n(
                            "You currently have a free membership, upgrade to a paid subscription for full access."
                        ),
                    }),
                    c.jsx(X0, {}),
                ],
            });
        },
        eS = () => {
            const {
                    member: e,
                    onAction: t,
                    action: n,
                    brandColor: a,
                    t: r,
                } = k.useContext(_),
                i = ze({ member: e });
            if (!i || !i.cancel_at_period_end) return null;
            const o = i.cancel_at_period_end
                    ? r("Continue subscription")
                    : r("Cancel subscription"),
                s = ["cancelSubscription:running"].includes(n),
                l = !!s,
                u = !!i.cancel_at_period_end,
                m = () => {
                    if (!i.cancel_at_period_end) return null;
                    const p = i.current_period_end;
                    return c.jsx("p", {
                        className:
                            "gh-portal-text-center gh-portal-free-ctatext",
                        children: r(
                            "Your subscription will expire on {{expiryDate}}",
                            { expiryDate: yt(p) }
                        ),
                    });
                };
            return c.jsxs("div", {
                className: "gh-portal-cancelcontinue-container",
                children: [
                    c.jsx(m, {}),
                    c.jsx(te, {
                        onClick: () => {
                            t("continueSubscription", { subscriptionId: i.id });
                        },
                        isRunning: s,
                        disabled: l,
                        isPrimary: u,
                        brandColor: a,
                        label: o,
                        style: { width: "100%" },
                    }),
                ],
            });
        },
        tS = (e) =>
            k.createElement(
                "svg",
                {
                    width: 24,
                    height: 24,
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                },
                k.createElement(
                    "defs",
                    null,
                    k.createElement(
                        "style",
                        null,
                        ".a{fill:none;stroke:currentColor;stroke-linecap:round;stroke-linejoin:round;stroke-width:1.5px;}"
                    )
                ),
                k.createElement("path", {
                    d: "M22.939 2.56V8.817C22.9391 9.61244 22.6232 10.3754 22.061 10.938L10.5 22.5C10.2187 22.7812 9.83721 22.9392 9.43946 22.9392C9.04172 22.9392 8.66026 22.7812 8.37896 22.5L1.49997 15.62C1.21876 15.3387 1.06079 14.9572 1.06079 14.5595C1.06079 14.1618 1.21876 13.7803 1.49997 13.499L13.061 1.938C13.6236 1.37572 14.3865 1.0599 15.182 1.06H21.439C21.8368 1.06 22.2183 1.21803 22.4996 1.49934C22.7809 1.78064 22.939 2.16217 22.939 2.56V2.56Z",
                    className: "a",
                }),
                k.createElement("path", {
                    d: "M17.689 7.81C16.8605 7.81 16.189 7.13842 16.189 6.31C16.189 5.48157 16.8605 4.81 17.689 4.81C18.5174 4.81 19.189 5.48157 19.189 6.31C19.189 7.13842 18.5174 7.81 17.689 7.81Z",
                    className: "a",
                })
            ),
        nS = () => {
            const { member: e, site: t, onAction: n, t: a } = k.useContext(_),
                r = () => {
                    const y = ze({ member: e });
                    n("editBilling", { subscriptionId: y.id });
                },
                i = () => {
                    const { is_stripe_configured: y } = t;
                    y &&
                        n("switchPage", {
                            page: "accountPlan",
                            lastPage: "accountHome",
                        });
                },
                o = ({ price: y, isComplimentary: v, subscription: g }) => {
                    const { offer: h, start_date: f } = g || {};
                    let x = "";
                    if (y) {
                        const { amount: P = 0, currency: U, interval: Oe } = y;
                        x = `${Intl.NumberFormat("en", {
                            currency: U,
                            style: "currency",
                        }).format(P / 100)}/${Oe}`;
                    }
                    let w = rS({
                        price: y,
                        offer: h,
                        subscriptionStartDate: f,
                        t: a,
                    });
                    const E = Lc({ member: e });
                    v &&
                        (E
                            ? (x = `${a("Complimentary")} - ${a(
                                  "Expires {{expiryDate}}",
                                  { expiryDate: E }
                              )}`)
                            : (x = x
                                  ? `${a("Complimentary")} (${x})`
                                  : a("Complimentary")));
                    let S = "";
                    w && (S = "gh-portal-account-old-price");
                    const $ = () =>
                            w
                                ? c.jsxs("p", {
                                      className:
                                          "gh-portal-account-discountcontainer",
                                      children: [
                                          c.jsx(tS, {
                                              className:
                                                  "gh-portal-account-tagicon",
                                          }),
                                          c.jsx("span", { children: w }),
                                      ],
                                  })
                                : null,
                        T = Bc({ sub: g });
                    return (
                        T && (S = "gh-portal-account-old-price"),
                        T
                            ? c.jsxs(c.Fragment, {
                                  children: [
                                      c.jsx("p", { className: S, children: x }),
                                      c.jsx(aS, { subscription: g, t: a }),
                                  ],
                              })
                            : c.jsxs(c.Fragment, {
                                  children: [
                                      c.jsx("p", { className: S, children: x }),
                                      c.jsx($, {}),
                                  ],
                              })
                    );
                },
                s = ({ isComplimentary: y, isPaid: v }) =>
                    (vr({ member: e }) ? !1 : y) || (wr({ site: t }) && !v)
                        ? null
                        : c.jsx("button", {
                              className: "gh-portal-btn gh-portal-btn-list",
                              onClick: (h) => i(),
                              "data-test-button": "change-plan",
                              children: a("Change"),
                          }),
                l = ({ defaultCardLast4: y }) => {
                    if (y) {
                        const v = `**** **** **** ${y}`;
                        return c.jsx("p", { children: v });
                    }
                    return null;
                },
                u = ({ defaultCardLast4: y, isComplimentary: v }) => {
                    const { action: g } = k.useContext(_),
                        h =
                            g === "editBilling:running"
                                ? c.jsx(oa, {
                                      className:
                                          "gh-portal-billing-button-loader",
                                  })
                                : a("Update");
                    return v
                        ? null
                        : c.jsxs("section", {
                              children: [
                                  c.jsxs("div", {
                                      className: "gh-portal-list-detail",
                                      children: [
                                          c.jsx("h3", {
                                              children: a("Billing info"),
                                          }),
                                          c.jsx(l, { defaultCardLast4: y }),
                                      ],
                                  }),
                                  c.jsx("button", {
                                      className:
                                          "gh-portal-btn gh-portal-btn-list",
                                      onClick: (f) => r(),
                                      "data-test-button": "update-billing",
                                      children: h,
                                  }),
                              ],
                          });
                },
                m = ze({ member: e }),
                p = Vt({ member: e }),
                d = it({ member: e }),
                b = m == null ? void 0 : m.cancel_at_period_end;
            if (m || p) {
                const { price: y, default_payment_card_last4: v } = m || {};
                let g = a("Plan");
                return (
                    go({ site: t }) &&
                        Yh({ member: e }) &&
                        (g = Yh({ member: e })),
                    c.jsxs(c.Fragment, {
                        children: [
                            c.jsxs("section", {
                                children: [
                                    c.jsxs("div", {
                                        className: "gh-portal-list-detail",
                                        children: [
                                            c.jsx("h3", { children: g }),
                                            c.jsx(o, {
                                                price: y,
                                                isComplimentary: p,
                                                subscription: m,
                                            }),
                                        ],
                                    }),
                                    c.jsx(s, {
                                        isComplimentary: p,
                                        isPaid: d,
                                        isCancelled: b,
                                    }),
                                ],
                            }),
                            c.jsx(u, {
                                isComplimentary: p,
                                defaultCardLast4: v,
                            }),
                        ],
                    })
                );
            }
            return null;
        };
    function aS({ subscription: e, t }) {
        if (Bc({ sub: e })) {
            const n = yt(e.trial_end_at);
            return c.jsx("p", {
                className: "gh-portal-account-discountcontainer",
                children: c.jsx("div", {
                    children: c.jsx("span", {
                        children: t("Free Trial – Ends {{trialEnd}}", {
                            trialEnd: n,
                        }),
                    }),
                }),
            });
        }
        return null;
    }
    function rS({ offer: e, price: t, subscriptionStartDate: n, t: a }) {
        let r = "";
        if (
            (e == null ? void 0 : e.type) === "trial" ||
            (e == null ? void 0 : e.duration) === "once"
        )
            return "";
        if (e) {
            const i = e.duration;
            let o = "";
            if (i === "forever") o = a("Forever");
            else if (i === "repeating") {
                const s = e.duration_in_months || 0;
                let l = new Date(n),
                    u = new Date(l.setMonth(l.getMonth() + s));
                if (qh(u)) return "";
                o = a("Ends {{offerEndDate}}", { offerEndDate: yt(u) });
            }
            r = `${ax({ offer: e, price: t, useFormatted: !0 })}/${t.interval}${
                o ? ` — ${o}` : ""
            }`;
        }
        return r;
    }
    function iS() {
        const { member: e, site: t, onAction: n, t: a } = k.useContext(_);
        let { newsletters: r } = e;
        const i = !!(r != null && r.length);
        let o = a(i ? "Subscribed" : "Unsubscribed");
        const s = (l) => {
            var p;
            l.preventDefault();
            const u = ra({ site: t }),
                m =
                    (p = e == null ? void 0 : e.newsletters) != null && p.length
                        ? []
                        : u;
            n("updateNewsletterPreference", { newsletters: m });
        };
        return c.jsxs("section", {
            children: [
                c.jsxs("div", {
                    className: "gh-portal-list-detail email-newsletter",
                    children: [
                        c.jsx("h3", { children: a("Email newsletter") }),
                        c.jsxs("p", {
                            children: [
                                o,
                                " ",
                                Fc({ member: e }) &&
                                    i &&
                                    c.jsx("button", {
                                        className:
                                            "gh-portal-btn-text gh-email-faq-page-button",
                                        onClick: () =>
                                            n("switchPage", {
                                                page: "emailReceivingFAQ",
                                                lastPage: "accountHome",
                                            }),
                                        children: a("Not receiving emails?"),
                                    }),
                            ],
                        }),
                    ],
                }),
                c.jsx("div", {
                    children: c.jsx(jo, {
                        dataTestId: "default-newsletter-toggle",
                        id: "default-newsletter-toggle",
                        onToggle: (l) => {
                            s(l);
                        },
                        checked: i,
                    }),
                }),
            ],
        });
    }
    const Lf = (e) =>
        k.createElement(
            "svg",
            {
                fill: "none",
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 20 20",
                ...e,
            },
            k.createElement("path", {
                d: "m12.79 12.376 4.08 4.079m-4.08 0 4.08-4.08",
                stroke: "red",
                strokeWidth: 1.35,
                strokeLinecap: "round",
                strokeLinejoin: "round",
            }),
            k.createElement("path", {
                d: "m10.439 17.994-2.664-2.652-2.86 1.478.111-4.239m0 0L1.677 9.232a1.344 1.344 0 0 1-.366-1.222 1.369 1.369 0 0 1 .904-1.05l13.111-4.374a1.369 1.369 0 0 1 1.76 1.758L15 10m-9.974 2.581 11.67-9.727",
                stroke: "#A3A3A3",
                strokeWidth: 1.35,
                strokeLinecap: "round",
                strokeLinejoin: "round",
            })
        );
    function oS() {
        const { onAction: e, member: t, t: n } = k.useContext(_),
            a = Wh({ member: t }),
            r = a ? "emailSuppressed" : "accountEmail";
        return c.jsxs("section", {
            children: [
                c.jsxs("div", {
                    className: "gh-portal-list-detail",
                    children: [
                        c.jsx("h3", { children: n("Emails") }),
                        a
                            ? c.jsxs("p", {
                                  className: "gh-portal-email-notice",
                                  children: [
                                      c.jsx(Lf, {
                                          className:
                                              "gh-portal-email-notice-icon",
                                      }),
                                      c.jsx("span", {
                                          className: "gh-mobile-only",
                                          children: n(
                                              "You're not receiving emails"
                                          ),
                                      }),
                                      c.jsx("span", {
                                          className: "gh-desktop-only",
                                          children: n(
                                              "You're currently not receiving emails"
                                          ),
                                      }),
                                  ],
                              })
                            : c.jsx("p", {
                                  children: n("Update your preferences"),
                              }),
                    ],
                }),
                c.jsx("button", {
                    className: "gh-portal-btn gh-portal-btn-list",
                    onClick: () => {
                        e("switchPage", { page: r, lastPage: "accountHome" });
                    },
                    "data-test-button": "manage-newsletters",
                    children: n("Manage"),
                }),
            ],
        });
    }
    const sS = () => {
            const { member: e, onAction: t, site: n, t: a } = k.useContext(_),
                { name: r, email: i } = e,
                o = () => {
                    t("switchPage", {
                        page: "accountProfile",
                        lastPage: "accountHome",
                    });
                },
                s = xo({ site: n }) || Fh({ site: n }) || Wh({ member: e });
            return c.jsx("div", {
                children: c.jsxs("div", {
                    className: "gh-portal-list",
                    children: [
                        c.jsxs("section", {
                            children: [
                                c.jsxs("div", {
                                    className: "gh-portal-list-detail",
                                    children: [
                                        c.jsx("h3", {
                                            children: r || "Account",
                                        }),
                                        c.jsx("p", { children: i }),
                                    ],
                                }),
                                c.jsx("button", {
                                    "data-test-button": "edit-profile",
                                    className:
                                        "gh-portal-btn gh-portal-btn-list",
                                    onClick: (l) => o(),
                                    children: a("Edit"),
                                }),
                            ],
                        }),
                        c.jsx(nS, {}),
                        s ? c.jsx(oS, {}) : c.jsx(iS, {}),
                    ],
                }),
            });
        },
        lS = () =>
            c.jsxs("div", {
                className: "gh-portal-content gh-portal-account-main",
                children: [
                    c.jsx(ne, {}),
                    c.jsx(Q0, {}),
                    c.jsxs("section", {
                        className: "gh-portal-account-data",
                        children: [c.jsx(Z0, {}), c.jsx(eS, {}), c.jsx(sS, {})],
                    }),
                ],
            });
    class Yf extends R.Component {
        componentDidMount() {
            const { member: t, site: n } = this.context;
            pn({ site: n }) || this.context.onAction("signout"),
                t ||
                    this.context.onAction("switchPage", {
                        page: "signin",
                        pageData: { redirect: window.location.href },
                    });
        }
        handleSignout(t) {
            t.preventDefault(), this.context.onAction("signout");
        }
        render() {
            const { member: t, site: n, t: a } = this.context,
                r = xr({ site: n });
            return !t || !pn({ site: n })
                ? null
                : c.jsxs("div", {
                      className: "gh-portal-account-wrapper",
                      children: [
                          c.jsx(lS, {}),
                          c.jsx(J0, {
                              onClose: () =>
                                  this.context.onAction("closePopup"),
                              handleSignout: (i) => this.handleSignout(i),
                              supportAddress: r,
                              t: a,
                          }),
                      ],
                  });
        }
    }
    J(Yf, "contextType", _);
    class Uf extends R.Component {
        constructor(t, n) {
            super(t, n);
            const { name: a = "", email: r = "" } = n.member || {};
            this.state = { name: a, email: r };
        }
        componentDidMount() {
            const { member: t } = this.context;
            t || this.context.onAction("switchPage", { page: "signin" });
        }
        handleSignout(t) {
            t.preventDefault(), this.context.onAction("signout");
        }
        onBack() {
            this.context.onAction("back");
        }
        onProfileSave(t) {
            t.preventDefault(),
                this.setState(
                    (n) => ({
                        errors: Ao({
                            fields: this.getInputFields({ state: n }),
                        }),
                    }),
                    () => {
                        const { email: n, name: a, errors: r } = this.state;
                        (r && Object.values(r).filter((o) => !!o).length > 0) ||
                            (this.context.onAction("clearPopupNotification"),
                            this.context.onAction("updateProfile", {
                                email: n,
                                name: a,
                            }));
                    }
                );
        }
        renderSaveButton() {
            const { t } = this.context,
                n = this.context.action === "updateProfile:running";
            let a = t("Save");
            this.context.action === "updateProfile:failed" && (a = t("Retry"));
            const r = !!n;
            return c.jsx(te, {
                dataTestId: "save-button",
                isRunning: n,
                onClick: (i) => this.onProfileSave(i),
                disabled: r,
                brandColor: this.context.brandColor,
                label: a,
                style: { width: "100%" },
            });
        }
        renderDeleteAccountButton() {
            const { t } = this.context;
            return c.jsx("div", {
                style: { cursor: "pointer", color: "red" },
                role: "button",
                children: t("Delete account"),
            });
        }
        renderAccountFooter() {
            return c.jsx("footer", {
                className: "gh-portal-action-footer",
                children: this.renderSaveButton(),
            });
        }
        renderHeader() {
            const { t } = this.context;
            return c.jsxs("header", {
                className: "gh-portal-detail-header",
                children: [
                    c.jsx(sa, {
                        brandColor: this.context.brandColor,
                        hidden: !this.context.lastPage,
                        onClick: (n) => this.onBack(n),
                    }),
                    c.jsx("h3", {
                        className: "gh-portal-main-title",
                        children: t("Account settings"),
                    }),
                ],
            });
        }
        renderUserAvatar() {
            const t = this.context.member && this.context.member.avatar_image,
                n = {
                    position: "relative",
                    display: "flex",
                    width: "64px",
                    height: "64px",
                    marginBottom: "6px",
                    borderRadius: "100%",
                    boxShadow: "0 0 0 3px #fff",
                    border: "1px solid gray",
                    overflow: "hidden",
                    justifyContent: "center",
                    alignItems: "center",
                };
            return c.jsx("div", {
                style: n,
                children: c.jsx(Dc, {
                    gravatar: t,
                    style: {
                        userIcon: {
                            color: "black",
                            width: "56px",
                            height: "56px",
                        },
                    },
                }),
            });
        }
        handleInputChange(t, n) {
            const a = n.name;
            this.setState({ [a]: t.target.value });
        }
        getInputFields({ state: t, fieldNames: n }) {
            const { t: a } = this.context,
                r = t.errors || {},
                i = [
                    {
                        type: "text",
                        value: t.name,
                        placeholder: "Jamie Larson",
                        label: a("Name"),
                        name: "name",
                        required: !0,
                        errorMessage: r.name || "",
                    },
                    {
                        type: "email",
                        value: t.email,
                        placeholder: "jamie@example.com",
                        label: a("Email"),
                        name: "email",
                        required: !0,
                        errorMessage: r.email || "",
                    },
                ];
            return n && n.length > 0 ? i.filter((o) => n.includes(o.name)) : i;
        }
        onKeyDown(t) {
            t.keyCode === 13 && this.onProfileSave(t);
        }
        renderProfileData() {
            return c.jsx("div", {
                className: "gh-portal-section",
                children: c.jsx(zo, {
                    fields: this.getInputFields({ state: this.state }),
                    onChange: (t, n) => this.handleInputChange(t, n),
                    onKeyDown: (t, n) => this.onKeyDown(t, n),
                }),
            });
        }
        render() {
            const { member: t } = this.context;
            return t
                ? c.jsxs(c.Fragment, {
                      children: [
                          c.jsxs("div", {
                              className: "gh-portal-content with-footer",
                              children: [
                                  c.jsx(ne, {}),
                                  this.renderHeader(),
                                  c.jsx("div", {
                                      className: "gh-portal-section",
                                      children: this.renderProfileData(),
                                  }),
                              ],
                          }),
                          this.renderAccountFooter(),
                      ],
                  })
                : null;
        }
    }
    J(Uf, "contextType", _);
    function cS() {
        const {
            brandColor: e,
            lastPage: t,
            onAction: n,
            t: a,
        } = k.useContext(_);
        return c.jsxs("header", {
            className: "gh-portal-detail-header",
            children: [
                c.jsx(sa, {
                    brandColor: e,
                    hidden: !t,
                    onClick: () => {
                        n("back");
                    },
                }),
                c.jsx("h3", {
                    className: "gh-portal-main-title",
                    children: a("Email preferences"),
                }),
            ],
        });
    }
    function Bf({ show: e, checked: t }) {
        let n = [];
        return (
            e && n.push("gh-portal-checkmark-show"),
            t && n.push("gh-portal-toggle-checked"),
            n.push("gh-portal-checkmark-container"),
            c.jsx("div", {
                className: n.join(" "),
                children: c.jsx(Af, {
                    className: "gh-portal-checkmark-icon",
                    alt: "",
                }),
            })
        );
    }
    function uS({
        newsletter: e,
        subscribedNewsletters: t,
        setSubscribedNewsletters: n,
    }) {
        const a = t.some((l) => l.id === (e == null ? void 0 : e.id)),
            [r, i] = k.useState(!1),
            [o, s] = k.useState(null);
        return c.jsxs("section", {
            className: "gh-portal-list-toggle-wrapper",
            "data-test-toggle-wrapper": !0,
            children: [
                c.jsxs("div", {
                    className: "gh-portal-list-detail",
                    children: [
                        c.jsx("h3", { children: e.name }),
                        c.jsx("p", {
                            children: e == null ? void 0 : e.description,
                        }),
                    ],
                }),
                c.jsxs("div", {
                    style: { display: "flex", alignItems: "center" },
                    children: [
                        c.jsx(Bf, { show: r, checked: a }),
                        c.jsx(jo, {
                            id: e.id,
                            onToggle: (l, u) => {
                                let m = [];
                                if (u) {
                                    (m = t
                                        .filter((d) => d.id !== e.id)
                                        .concat(e)),
                                        i(!0),
                                        clearTimeout(o);
                                    let p = setTimeout(() => {
                                        i(!1);
                                    }, 2e3);
                                    s(p);
                                } else {
                                    (m = t.filter((d) => d.id !== e.id)),
                                        i(!0),
                                        clearTimeout(o);
                                    let p = setTimeout(() => {
                                        i(!1);
                                    }, 2e3);
                                    s(p);
                                }
                                n(m);
                            },
                            checked: a,
                        }),
                    ],
                }),
            ],
        });
    }
    function dS({
        updateCommentNotifications: e,
        isCommentsEnabled: t,
        enableCommentNotifications: n,
    }) {
        const { t: a } = k.useContext(_),
            r = !!n,
            [i, o] = k.useState(!1),
            [s, l] = k.useState(null);
        return t
            ? c.jsxs("section", {
                  className: "gh-portal-list-toggle-wrapper",
                  "data-test-toggle-wrapper": !0,
                  children: [
                      c.jsxs("div", {
                          className: "gh-portal-list-detail",
                          children: [
                              c.jsx("h3", { children: a("Comments") }),
                              c.jsx("p", {
                                  children: a(
                                      "Get notified when someone replies to your comment"
                                  ),
                              }),
                          ],
                      }),
                      c.jsxs("div", {
                          style: { display: "flex", alignItems: "center" },
                          children: [
                              c.jsx(Bf, { show: i, checked: r }),
                              c.jsx(jo, {
                                  id: "comments",
                                  onToggle: (u, m) => {
                                      o(!0), clearTimeout(s);
                                      let p = setTimeout(() => {
                                          o(!1);
                                      }, 2e3);
                                      l(p), e(m);
                                  },
                                  checked: r,
                              }),
                          ],
                      }),
                  ],
              })
            : null;
    }
    function mS({ subscribedNewsletters: e, setSubscribedNewsletters: t }) {
        const { site: n } = k.useContext(_);
        return ra({ site: n }).map((r) =>
            c.jsx(
                uS,
                {
                    newsletter: r,
                    subscribedNewsletters: e,
                    setSubscribedNewsletters: t,
                },
                r == null ? void 0 : r.id
            )
        );
    }
    function pS({ site: e, isPaid: t }) {
        const { t: n } = k.useContext(_);
        return t
            ? c.jsx("p", {
                  style: {
                      textAlign: "center",
                      marginTop: "12px",
                      marginBottom: "0",
                      color: "var(--grey6)",
                  },
                  children: n(
                      "Unsubscribing from emails will not cancel your paid subscription to {{title}}",
                      { title: e == null ? void 0 : e.title }
                  ),
              })
            : null;
    }
    function Ff({
        notification: e,
        subscribedNewsletters: t,
        updateSubscribedNewsletters: n,
        updateCommentNotifications: a,
        unsubscribeAll: r,
        isPaidMember: i,
        isCommentsEnabled: o,
        enableCommentNotifications: s,
    }) {
        const {
                brandColor: l,
                onAction: u,
                member: m,
                site: p,
                t: d,
            } = k.useContext(_),
            b = !(t != null && t.length) && ((o && !s) || !o),
            v = e || (() => null);
        return c.jsxs("div", {
            className: "gh-portal-content with-footer",
            children: [
                c.jsx(ne, {}),
                c.jsx(cS, {}),
                c.jsx(v, {}),
                c.jsx("div", {
                    className: "gh-portal-section flex",
                    children: c.jsxs("div", {
                        className: "gh-portal-list",
                        children: [
                            c.jsx(mS, {
                                subscribedNewsletters: t,
                                setSubscribedNewsletters: (g) => {
                                    let h = g.map((f) => ({ id: f.id }));
                                    n(h);
                                },
                            }),
                            c.jsx(dS, {
                                isCommentsEnabled: o,
                                enableCommentNotifications: s,
                                updateCommentNotifications: a,
                            }),
                        ],
                    }),
                }),
                c.jsxs("footer", {
                    className:
                        "gh-portal-action-footer" +
                        (Fc({ member: m }) ? " gh-feature-suppressions" : ""),
                    children: [
                        c.jsxs("div", {
                            style: { width: "100%" },
                            children: [
                                c.jsx(te, {
                                    isRunning: !1,
                                    onClick: () => {
                                        r();
                                    },
                                    disabled: b,
                                    brandColor: l,
                                    isPrimary: !1,
                                    label: d("Unsubscribe from all emails"),
                                    isDestructive: !0,
                                    style: { width: "100%" },
                                    dataTestId: "unsubscribe-from-all-emails",
                                }),
                                c.jsx(pS, { isPaid: i, site: p }),
                            ],
                        }),
                        Fc({ member: m }) &&
                            !b &&
                            c.jsxs("div", {
                                className: "gh-portal-footer-secondary",
                                children: [
                                    c.jsx("span", {
                                        className:
                                            "gh-portal-footer-secondary-light",
                                        children: d("Not receiving emails?"),
                                    }),
                                    c.jsxs("button", {
                                        className:
                                            "gh-portal-btn-text gh-email-faq-page-button",
                                        onClick: () =>
                                            u("switchPage", {
                                                page: "emailReceivingFAQ",
                                            }),
                                        children: [d("Get help"), " →"],
                                    }),
                                ],
                            }),
                    ],
                }),
            ],
        });
    }
    function hS() {
        const { member: e, onAction: t, site: n, t: a } = k.useContext(_);
        k.useEffect(() => {
            e || t("switchPage", { page: "signin" });
        }, [e, t]);
        const r = [...((e == null ? void 0 : e.newsletters) || [])],
            [i, o] = k.useState(r),
            { comments_enabled: s } = n,
            { enable_comment_notifications: l } = e || {};
        return (
            k.useEffect(() => {
                o((e == null ? void 0 : e.newsletters) || []);
            }, [e == null ? void 0 : e.newsletters]),
            c.jsx(Ff, {
                notification: null,
                subscribedNewsletters: i,
                updateSubscribedNewsletters: (u) => {
                    o(u), t("updateNewsletterPreference", { newsletters: u });
                },
                updateCommentNotifications: async (u) => {
                    t("updateNewsletterPreference", {
                        enableCommentNotifications: u,
                    });
                },
                unsubscribeAll: () => {
                    o([]),
                        t("showPopupNotification", {
                            action: "updated:success",
                            message: a("Email preference updated."),
                        });
                    const u = { newsletters: [] };
                    s && (u.enableCommentNotifications = !1),
                        t("updateNewsletterPreference", u);
                },
                isPaidMember: it({ member: e }),
                isCommentsEnabled: s !== "off",
                enableCommentNotifications: l,
            })
        );
    }
    function fS() {
        const { site: e } = k.useContext(_),
            t = e.icon;
        return t
            ? c.jsx("img", {
                  className: "gh-portal-unsubscribe-logo",
                  src: t,
                  alt: e.title,
              })
            : null;
    }
    function gS() {
        const { site: e } = k.useContext(_),
            t = e.title || "";
        return c.jsxs("header", {
            className: "gh-portal-header",
            children: [
                c.jsx(fS, {}),
                c.jsx("h2", {
                    className: "gh-portal-publication-title",
                    children: t,
                }),
            ],
        });
    }
    async function eu({
        api: e,
        memberUuid: t,
        newsletters: n,
        enableCommentNotifications: a,
    }) {
        try {
            return await e.member.updateNewsletters({
                uuid: t,
                newsletters: n,
                enableCommentNotifications: a,
            });
        } catch {}
    }
    function bS() {
        const { site: e, pageData: t, onAction: n, t: a } = k.useContext(_),
            r = ca({ siteUrl: e.url }),
            [i, o] = k.useState(),
            s = ra({ site: e }),
            l = s.filter((f) => f.subscribe_on_signup),
            [u, m] = k.useState(!1),
            [p, d] = k.useState(l),
            [b, y] = k.useState(!1),
            { comments_enabled: v } = e,
            { enable_comment_notifications: g = !1 } = i || {};
        if (
            (k.useEffect(() => {
                const f = ca({ siteUrl: e.url });
                (async () => {
                    const x = await f.member.newsletters({ uuid: t.uuid });
                    o(x);
                    const w = (x == null ? void 0 : x.newsletters) || [];
                    if ((d(w), (s == null ? void 0 : s.length) === 1 && !v)) {
                        const E = await eu({
                            api: f,
                            memberUuid: t.uuid,
                            newsletters: [],
                        });
                        d(E.newsletters);
                    } else if (t.newsletterUuid) {
                        const E = await eu({
                            api: f,
                            memberUuid: t.uuid,
                            newsletters:
                                w == null
                                    ? void 0
                                    : w.filter(
                                          (S) => S.uuid !== t.newsletterUuid
                                      ),
                        });
                        d(E.newsletters);
                    } else if (t.comments && v) {
                        const E = await eu({
                            api: f,
                            memberUuid: t.uuid,
                            enableCommentNotifications: !1,
                        });
                        o(E);
                    }
                })();
            }, [
                v,
                t.uuid,
                t.newsletterUuid,
                t.comments,
                e.url,
                s == null ? void 0 : s.length,
            ]),
            i === null)
        )
            return c.jsxs("div", {
                className: "gh-portal-content gh-portal-feedback with-footer",
                children: [
                    c.jsx(ne, {}),
                    c.jsx("div", {
                        className: "gh-feedback-icon gh-feedback-icon-error",
                        children: c.jsx(Wc, {}),
                    }),
                    c.jsx("h1", {
                        className: "gh-portal-main-title",
                        children: a("That didn't go to plan"),
                    }),
                    c.jsx("div", {
                        children: c.jsx("p", {
                            className: "gh-portal-text-center",
                            children: a(
                                "We couldn't unsubscribe you as the email address was not found. Please contact the site owner."
                            ),
                        }),
                    }),
                    c.jsx(te, {
                        style: { width: "100%" },
                        retry: !1,
                        onClick: () => n("closePopup"),
                        disabled: !1,
                        brandColor: "#000000",
                        label: a("Close"),
                        isRunning: !1,
                        tabindex: "3",
                        classes: "sticky bottom",
                    }),
                ],
            });
        if ((s == null ? void 0 : s.length) === 1 && !v && !b)
            return c.jsxs("div", {
                className:
                    "gh-portal-content gh-portal-unsubscribe with-footer",
                children: [
                    c.jsx(ne, {}),
                    c.jsx(gS, {}),
                    c.jsx("h1", {
                        className: "gh-portal-main-title",
                        children: a("Successfully unsubscribed"),
                    }),
                    c.jsxs("div", {
                        children: [
                            c.jsx("p", {
                                className: "gh-portal-text-center",
                                children: c.jsx(Ae, {
                                    syntax: Be,
                                    string: a(
                                        "{{memberEmail}} will no longer receive this newsletter."
                                    ),
                                    mapping: {
                                        memberEmail: c.jsx("strong", {
                                            children:
                                                i == null ? void 0 : i.email,
                                        }),
                                    },
                                }),
                            }),
                            c.jsx("p", {
                                className: "gh-portal-text-center",
                                children: c.jsx(Ae, {
                                    syntax: Be,
                                    string: a(
                                        "Didn't mean to do this? Manage your preferences <button>here</button>."
                                    ),
                                    mapping: {
                                        button: c.jsx("button", {
                                            className:
                                                "gh-portal-btn-link gh-portal-btn-branded gh-portal-btn-inline",
                                            onClick: () => {
                                                y(!0);
                                            },
                                        }),
                                    },
                                }),
                            }),
                        ],
                    }),
                ],
            });
        const h = () => {
            if (t.comments && v) {
                const w = u ? "gh-portal-hide" : "";
                return c.jsx(c.Fragment, {
                    children: c.jsx("p", {
                        className: `gh-portal-text-center gh-portal-header-message ${w}`,
                        children: c.jsx(Ae, {
                            syntax: Be,
                            string: a(
                                "{{memberEmail}} will no longer receive emails when someone replies to your comments."
                            ),
                            mapping: {
                                memberEmail: c.jsx("strong", {
                                    children: i == null ? void 0 : i.email,
                                }),
                            },
                        }),
                    }),
                });
            }
            const f =
                    s == null
                        ? void 0
                        : s.find((w) => w.uuid === t.newsletterUuid),
                x = u ? "gh-portal-hide" : "";
            return c.jsx(c.Fragment, {
                children: c.jsx("p", {
                    className: `gh-portal-text-center gh-portal-header-message ${x}`,
                    children: c.jsx(Ae, {
                        syntax: Be,
                        string: a(
                            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter."
                        ),
                        mapping: {
                            memberEmail: c.jsx("strong", {
                                children: i == null ? void 0 : i.email,
                            }),
                            newsletterName: c.jsx("strong", {
                                children: f == null ? void 0 : f.name,
                            }),
                        },
                    }),
                }),
            });
        };
        return c.jsx(Ff, {
            notification: h,
            subscribedNewsletters: p,
            updateSubscribedNewsletters: async (f) => {
                d(f),
                    m(!0),
                    await r.member.updateNewsletters({
                        uuid: t.uuid,
                        newsletters: f,
                    });
            },
            updateCommentNotifications: async (f) => {
                const x = await r.member.updateNewsletters({
                    uuid: t.uuid,
                    enableCommentNotifications: f,
                });
                o(x);
            },
            unsubscribeAll: async () => {
                m(!0),
                    d([]),
                    n("showPopupNotification", {
                        action: "updated:success",
                        message: a("Email preference updated."),
                    });
                const f = await r.member.updateNewsletters({
                    uuid: t.uuid,
                    newsletters: [],
                    enableCommentNotifications: !1,
                });
                o(f);
            },
            isPaidMember: (i == null ? void 0 : i.status) !== "free",
            isCommentsEnabled: v !== "off",
            enableCommentNotifications: g,
        });
    }
    function yS() {
        const {
            brandColor: e,
            lastPage: t,
            onAction: n,
            action: a,
            site: r,
            t: i,
        } = k.useContext(_);
        k.useEffect(() => {
            ["removeEmailFromSuppressionList:success"].includes(a) &&
                n("refreshMemberData"),
                [
                    "removeEmailFromSuppressionList:failed",
                    "refreshMemberData:failed",
                ].includes(a) && n("back"),
                ["refreshMemberData:success"].includes(a) &&
                    (xo({ site: r }) || Fh({ site: r })
                        ? (n("switchPage", {
                              page: "accountEmail",
                              lastPage: "accountHome",
                          }),
                          n("showPopupNotification", {
                              message: i(
                                  "You have been successfully resubscribed"
                              ),
                          }))
                        : n("back"));
        }, [a, n, r, i]);
        const o = [
                "removeEmailFromSuppressionList:running",
                "refreshMemberData:running",
            ].includes(a),
            s = () => {
                n("removeEmailFromSuppressionList");
            };
        return c.jsxs("div", {
            className: "gh-email-suppressed-page",
            children: [
                c.jsxs("header", {
                    className: "gh-portal-detail-header",
                    children: [
                        c.jsx(sa, {
                            brandColor: e,
                            hidden: !t,
                            onClick: () => {
                                n("back");
                            },
                        }),
                        c.jsx(ne, {}),
                    ],
                }),
                c.jsx(Lf, { className: "gh-email-suppressed-page-icon" }),
                c.jsxs("div", {
                    className: "gh-email-suppressed-page-text",
                    children: [
                        c.jsx("h3", {
                            className:
                                "gh-portal-main-title gh-email-suppressed-page-title",
                            children: i("Emails disabled"),
                        }),
                        c.jsx("p", {
                            children: i(
                                "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address."
                            ),
                        }),
                    ],
                }),
                c.jsx(te, {
                    dataTestId: "resubscribe-email",
                    classes: "gh-portal-confirm-button",
                    onClick: s,
                    disabled: o,
                    brandColor: e,
                    label: i("Re-enable emails"),
                    isRunning: o,
                }),
            ],
        });
    }
    function kS() {
        const { brandColor: e, onAction: t, site: n, t: a } = k.useContext(_),
            r = `mailto:${xr({ site: n })}`;
        return c.jsxs("div", {
            className: "gh-email-suppression-faq",
            children: [
                c.jsxs("header", {
                    className: "gh-portal-detail-header",
                    children: [
                        c.jsx(sa, {
                            brandColor: e,
                            onClick: () => {
                                t("switchPage", {
                                    page: "emailSuppressed",
                                    lastPage: "accountHome",
                                });
                            },
                        }),
                        c.jsx(ne, {}),
                    ],
                }),
                c.jsxs("div", {
                    className: "gh-longform",
                    children: [
                        c.jsx("h3", {
                            children: a("Why has my email been disabled?"),
                        }),
                        c.jsx("p", {
                            children: a(
                                "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce)."
                            ),
                        }),
                        c.jsx("h4", { children: a("Spam complaints") }),
                        c.jsx("p", {
                            children: a(
                                "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages."
                            ),
                        }),
                        c.jsx("p", {
                            children: a(
                                "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen."
                            ),
                        }),
                        c.jsx("p", {
                            children: a(
                                "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox."
                            ),
                        }),
                        c.jsx("h4", {
                            children: a("Permanent failure (bounce)"),
                        }),
                        c.jsx("p", {
                            children: a(
                                "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent."
                            ),
                        }),
                        c.jsx("p", {
                            children: a(
                                "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account."
                            ),
                        }),
                        c.jsx("p", {
                            children: a(
                                "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen."
                            ),
                        }),
                        c.jsx("p", {
                            children: c.jsx("a", {
                                className:
                                    "gh-portal-btn gh-portal-btn-branded",
                                href: r,
                                onClick: () => {
                                    r && window.open(r);
                                },
                                children: a("Need more help? Contact support"),
                            }),
                        }),
                    ],
                }),
            ],
        });
    }
    function vS() {
        const {
                brandColor: e,
                onAction: t,
                site: n,
                lastPage: a,
                member: r,
                t: i,
            } = k.useContext(_),
            o = xr({ site: n }),
            s = `mailto:${o}`,
            l = tx({ site: n });
        return c.jsxs("div", {
            className: "gh-email-receiving-faq",
            children: [
                c.jsxs("header", {
                    className: "gh-portal-detail-header",
                    children: [
                        c.jsx(sa, {
                            brandColor: e,
                            onClick: () => {
                                a
                                    ? t("switchPage", { page: "accountHome" })
                                    : t("switchPage", {
                                          page: "accountEmail",
                                          lastPage: "accountHome",
                                      });
                            },
                        }),
                        c.jsx(ne, {}),
                    ],
                }),
                c.jsxs("div", {
                    className: "gh-longform",
                    children: [
                        c.jsx("h3", {
                            children: i("Help! I'm not receiving emails"),
                        }),
                        c.jsx("p", {
                            children: i(
                                "If you're not receiving the email newsletter you've subscribed to, here are few things to check."
                            ),
                        }),
                        c.jsx("h4", {
                            children: i("Verify your email address is correct"),
                        }),
                        c.jsx("p", {
                            children: c.jsx(Ae, {
                                syntax: Be,
                                string: i(
                                    "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>."
                                ),
                                mapping: {
                                    memberEmail: c.jsx("strong", {
                                        children: r.email,
                                    }),
                                    button: c.jsx("button", {
                                        className: "gh-portal-btn-text",
                                        onClick: () =>
                                            t("switchPage", {
                                                lastPage: "emailReceivingFAQ",
                                                page: "accountProfile",
                                            }),
                                    }),
                                },
                            }),
                        }),
                        c.jsx("h4", {
                            children: i("Check spam & promotions folders"),
                        }),
                        c.jsx("p", {
                            children: i(
                                `Make sure emails aren't accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".`
                            ),
                        }),
                        c.jsx("h4", { children: i("Create a new contact") }),
                        c.jsx("p", {
                            children: c.jsx(Ae, {
                                syntax: Be,
                                string: i(
                                    "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted."
                                ),
                                mapping: {
                                    senderEmail: c.jsx("strong", {
                                        children: l,
                                    }),
                                },
                            }),
                        }),
                        c.jsx("h4", {
                            children: i("Send an email and say hi!"),
                        }),
                        c.jsx("p", {
                            children: c.jsx(Ae, {
                                syntax: Be,
                                string: i(
                                    "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted."
                                ),
                                mapping: {
                                    senderEmail: c.jsx("strong", {
                                        children: l,
                                    }),
                                },
                            }),
                        }),
                        c.jsx("h4", {
                            children: i("Check with your mail provider"),
                        }),
                        c.jsx("p", {
                            children: c.jsx(Ae, {
                                syntax: Be,
                                string: i(
                                    "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}"
                                ),
                                mapping: {
                                    senderEmail: c.jsx("strong", {
                                        children: l,
                                    }),
                                },
                            }),
                        }),
                        c.jsx("h4", { children: i("Get in touch for help") }),
                        c.jsx("p", {
                            children: c.jsx(Ae, {
                                syntax: Be,
                                string: i(
                                    "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}."
                                ),
                                mapping: {
                                    supportAddress: c.jsx("a", {
                                        href: s,
                                        onClick: () => {
                                            s && window.open(s);
                                        },
                                        children: o,
                                    }),
                                },
                            }),
                        }),
                    ],
                }),
            ],
        });
    }
    const tu = {
            signin: Rf,
            signup: Pf,
            accountHome: Yf,
            accountPlan: $f,
            accountProfile: Uf,
            accountEmail: hS,
            signupNewsletter: Qc,
            unsubscribe: bS,
            magiclink: _f,
            loading: Do,
            offer: Tf,
            feedback: I0,
            emailSuppressed: yS,
            emailSuppressionFAQ: kS,
            emailReceivingFAQ: vS,
            support: () => {
                const [e, t] = k.useState(!0),
                    [n, a] = k.useState(null),
                    [r, i] = k.useState(null);
                return (
                    k.useEffect(() => {
                        async function o() {
                            const s = window.location.origin,
                                l = s + window.location.pathname,
                                u = `${l}#/portal/support/success`,
                                m = l,
                                p = ca({ siteUrl: s });
                            try {
                                const d = await p.member.checkoutDonation({
                                    successUrl: u,
                                    cancelUrl: m,
                                });
                                d.url && window.location.replace(d.url);
                            } catch (d) {
                                d.type && d.type === "DisabledFeatureError"
                                    ? i(
                                          "This site is not accepting payments at the moment."
                                      )
                                    : a(
                                          "Something went wrong, please try again later."
                                      ),
                                    t(!1);
                            }
                        }
                        o();
                    }, []),
                    e
                        ? c.jsx("div", { children: c.jsx(Do, {}) })
                        : n
                        ? c.jsx(Zc, { error: n })
                        : r
                        ? c.jsx(Zc, { error: r })
                        : null
                );
            },
            supportSuccess: L0,
            supportError: Zc,
            recommendations: V0,
        },
        nu = function ({ page: e }) {
            return Object.keys(tu).includes(e) ? e : "signup";
        },
        wS = function ({ page: e }) {
            return e.includes("account");
        },
        xS = function ({ page: e }) {
            return e.includes("offer");
        },
        SS = (e) =>
            k.createElement(
                "svg",
                {
                    width: 24,
                    height: 24,
                    viewBox: "0 0 24 24",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                    ...e,
                },
                k.createElement("path", {
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                    d: "M24 12C24 18.6274 18.6274 24 12 24C5.37258 24 0 18.6274 0 12C0 5.37258 5.37258 0 12 0C18.6274 0 24 5.37258 24 12ZM11.8326 2.33879C6.37785 2.95189 3.95901 5.20797 3.41126 9.74699C3.34896 10.2632 3.22642 10.7805 3.10443 11.2954C2.93277 12.02 2.76221 12.74 2.76221 13.4458C2.76221 17.9885 6.5856 21.556 11.1283 21.556C12.8959 21.556 14.4433 20.8144 15.8756 20.048C19.0536 18.3478 22.0328 16.2597 22.0328 12.5411C22.0328 9.91512 20.1051 7.56932 18.466 5.5747C18.3834 5.47416 18.3015 5.37451 18.2206 5.27577C17.3866 4.25742 14.4333 2.04643 11.8326 2.33879Z",
                    fill: "#15171A",
                })
            );
    class au extends R.Component {
        render() {
            return c.jsxs("a", {
                href: "https://ghost.org",
                target: "_blank",
                rel: "noopener noreferrer",
                onClick: () => {
                    window.open("https://ghost.org", "_blank");
                },
                children: [c.jsx(SS, {}), "Powered by Ghost"],
            });
        }
    }
    J(au, "contextType", _);
    const Of = () => ({
        modalContainer: {
            zIndex: "3999999",
            position: "fixed",
            left: "0",
            top: "0",
            width: "100%",
            height: "100%",
            overflow: "hidden",
        },
        frame: {
            common: {
                margin: "auto",
                position: "relative",
                padding: "0",
                outline: "0",
                width: "100%",
                opacity: "1",
                overflow: "hidden",
                height: "100%",
            },
        },
        page: { links: { width: "600px" } },
    });
    function ES({ message: e }) {
        return ta()
            ? c.jsx("div", { className: "gh-portal-cookiebanner", children: e })
            : null;
    }
    class Hf extends R.Component {
        componentDidMount() {
            this.node &&
                !V(["preview"]) &&
                !this.props.isMobile &&
                (this.node.focus(),
                (this.keyUphandler = (t) => {
                    t.key === "Escape" && this.dismissPopup(t);
                }),
                this.node.ownerDocument.removeEventListener(
                    "keyup",
                    this.keyUphandler
                ),
                this.node.ownerDocument.addEventListener(
                    "keyup",
                    this.keyUphandler
                )),
                this.sendContainerHeightChangeEvent();
        }
        dismissPopup(t) {
            var r;
            const n = t.target && t.target.tagName;
            (n !== "INPUT" ||
                (n === "INPUT" &&
                    !(
                        (r = t == null ? void 0 : t.target) != null && r.value
                    ))) &&
                this.context.onAction("closePopup");
        }
        sendContainerHeightChangeEvent() {
            var t, n;
            this.node &&
                V(["preview"]) &&
                ((t = this.node) == null ? void 0 : t.clientHeight) !==
                    this.lastContainerHeight &&
                ((this.lastContainerHeight =
                    (n = this.node) == null ? void 0 : n.clientHeight),
                (window.document.body.style.overflow = "hidden"),
                (window.document.body.style["scrollbar-width"] = "none"),
                window.parent.postMessage(
                    {
                        type: "portal-preview-updated",
                        payload: { height: this.lastContainerHeight },
                    },
                    "*"
                ));
        }
        componentDidUpdate() {
            this.sendContainerHeightChangeEvent();
        }
        componentWillUnmount() {
            this.node &&
                this.node.ownerDocument.removeEventListener(
                    "keyup",
                    this.keyUphandler
                );
        }
        handlePopupClose(t) {
            V(["preview"]) ||
                (t.target === t.currentTarget &&
                    this.context.onAction("closePopup"));
        }
        renderActivePage() {
            const { page: t } = this.context;
            nu({ page: t });
            const n = tu[t];
            return c.jsx(n, {});
        }
        renderPopupNotification() {
            const { popupNotification: t } = this.context;
            return !t || !t.type ? null : c.jsx(Nf, {});
        }
        render() {
            const {
                    page: t,
                    pageQuery: n,
                    site: a,
                    customSiteUrl: r,
                } = this.context,
                o = ko({ site: a }).length;
            nu({ page: t });
            const l = { ...Of().page[t] };
            let u = "",
                m = "regular",
                p = "",
                d = t;
            switch (t) {
                case "signup":
                    p = "Cookies must be enabled in your browser to sign up.";
                    break;
                case "signin":
                    p = "Cookies must be enabled in your browser to sign in.";
                    break;
                case "accountHome":
                    d = "account-home";
                    break;
                case "accountProfile":
                    d = "account-profile";
                    break;
                case "accountPlan":
                    d = "account-plan";
                    break;
                default:
                    (p = "Cookies must be enabled in your browser."), (d = t);
                    break;
            }
            o > 1 &&
                !ot({ site: a, pageQuery: n }) &&
                t === "signup" &&
                ((d += " full-size"), (m = "full"));
            const b = wo({ site: a });
            ((b && o > 2) || (!b && o > 1)) &&
                t === "accountPlan" &&
                ((d += " full-size"), (m = "full")),
                (t === "emailSuppressionFAQ" || t === "emailReceivingFAQ") &&
                    (d += " large-size");
            let y = "gh-portal-popup-container";
            V(["preview"]) && (d += " preview"),
                V(["preview"], { customSiteUrl: r }) &&
                    !a.disableBackground &&
                    (y += " preview"),
                V(["dev"]) && (y += " dev");
            const v = `${y} ${u} ${d}`;
            return c.jsxs(c.Fragment, {
                children: [
                    c.jsx("div", {
                        className: "gh-portal-popup-wrapper " + d,
                        onClick: (g) => this.handlePopupClose(g),
                        children: c.jsxs("div", {
                            className: v,
                            style: l,
                            ref: (g) => (this.node = g),
                            tabIndex: -1,
                            children: [
                                c.jsx(ES, { message: p }),
                                this.renderPopupNotification(),
                                this.renderActivePage(),
                                m === "full"
                                    ? c.jsx("div", {
                                          className:
                                              "gh-portal-powered inside " +
                                              (V(["preview"])
                                                  ? "hidden "
                                                  : "") +
                                              d,
                                          children: c.jsx(au, {}),
                                      })
                                    : "",
                            ],
                        }),
                    }),
                    c.jsx("div", {
                        className:
                            "gh-portal-powered outside " +
                            (V(["preview"]) ? "hidden " : "") +
                            d,
                        children: c.jsx(au, {}),
                    }),
                ],
            });
        }
    }
    J(Hf, "contextType", _);
    class Vf extends R.Component {
        constructor(t) {
            super(t), (this.state = { height: null });
        }
        renderCurrentPage(t) {
            const n = tu[t];
            return c.jsx(n, {});
        }
        onHeightChange(t) {
            this.setState({ height: t });
        }
        handlePopupClose(t) {
            t.preventDefault(),
                t.target === t.currentTarget &&
                    this.context.onAction("closePopup");
        }
        renderFrameStyles() {
            const { site: t } = this.context,
                n = K0({ site: t }),
                a =
                    `
            :root {
                --brandcolor: ${this.context.brandColor}
            }
        ` + n;
            return c.jsxs(c.Fragment, {
                children: [
                    c.jsx("style", { dangerouslySetInnerHTML: { __html: a } }),
                    c.jsx("meta", {
                        name: "viewport",
                        content:
                            "width=device-width, initial-scale=1, maximum-scale=1",
                    }),
                ],
            });
        }
        renderFrameContainer() {
            const { member: t, site: n, customSiteUrl: a } = this.context,
                r = Of(),
                i = window.innerWidth < 480,
                o = { ...r.frame.common };
            let s = "gh-portal-popup-background";
            return (
                V(["preview"]) && (r.modalContainer.zIndex = "3999997"),
                V(["preview"], { customSiteUrl: a }) &&
                    !n.disableBackground &&
                    (s += " preview"),
                V(["dev"]) && (s += " dev"),
                c.jsx("div", {
                    style: r.modalContainer,
                    children: c.jsxs(zc, {
                        style: o,
                        title: "portal-popup",
                        head: this.renderFrameStyles(),
                        dataTestId: "portal-popup-frame",
                        children: [
                            c.jsx("div", {
                                className: s,
                                onClick: (l) => this.handlePopupClose(l),
                            }),
                            c.jsx(Hf, { isMobile: i }),
                        ],
                    }),
                })
            );
        }
        render() {
            const { showPopup: t } = this.context;
            return t ? this.renderFrameContainer() : null;
        }
    }
    J(Vf, "contextType", _), Mo({ products: ru({ numOfProducts: 1 }) });
    function Se() {
        return (
            ((new Date().getTime() / 1e3) | 0).toString(16) +
            "xxxxxxxxxxxxxxxx"
                .replace(/[x]/g, function () {
                    return ((Math.random() * 16) | 0).toString(16);
                })
                .toLowerCase()
        );
    }
    function Mo({
        title: e = "The Blueprint",
        description: t = "Thoughts, stories and ideas.",
        logo: n = "https://static.ghost.org/v4.0.0/images/ghost-orb-1.png",
        icon: a = "https://static.ghost.org/v4.0.0/images/ghost-orb-1.png",
        url: r = "https://portal.localhost",
        plans: i = { monthly: 5e3, yearly: 15e4, currency: "USD" },
        products: o = ru({ numOfProducts: 1 }),
        portalProducts: s = o.map((P) => P.id),
        accentColor: l = "#45C32E",
        portalPlans: u = ["free", "monthly", "yearly"],
        allowSelfSignup: m = !0,
        membersSignupAccess: p = "all",
        freePriceName: d = "Free",
        freePriceDescription: b = "Free preview",
        isStripeConfigured: y = !0,
        portalButton: v = !0,
        portalName: g = !0,
        portalButtonIcon: h = "icon-1",
        portalButtonSignupText: f = "Subscribe now",
        portalButtonStyle: x = "icon-and-text",
        membersSupportAddress: w = "support@example.com",
        newsletters: E = [],
        commentsEnabled: S,
        recommendations: $ = [],
        recommendationsEnabled: T,
    } = {}) {
        return {
            title: e,
            description: t,
            logo: n,
            icon: a,
            accent_color: l,
            url: r,
            plans: i,
            products: o,
            portal_products: s,
            allow_self_signup: m,
            members_signup_access: p,
            free_price_name: d,
            free_price_description: b,
            is_stripe_configured: y,
            portal_button: v,
            portal_name: g,
            portal_plans: u,
            portal_button_icon: h,
            portal_button_signup_text: f,
            portal_button_style: x,
            members_support_address: w,
            comments_enabled: !!S,
            newsletters: E,
            recommendations: $,
            recommendations_enabled: !!T,
        };
    }
    function Wf({
        name: e = "Black Friday",
        code: t = "black-friday",
        displayTitle: n = "Black Friday Sale!",
        displayDescription:
            a = "Special deal for Black Friday. Subscribe now for only $15 per month and get additional benefits like accessing our podcast.",
        type: r = "percent",
        cadence: i = "month",
        amount: o = 50,
        duration: s = "repeating",
        durationInMonths: l = null,
        currencyRestriction: u = !1,
        currency: m = null,
        status: p = "active",
        tierId: d = "",
        tierName: b = "Basic",
    } = {}) {
        return {
            id: `offer_${Se()}`,
            name: e,
            code: t,
            display_title: n,
            display_description: a,
            type: r,
            cadence: i,
            amount: o,
            duration: s,
            duration_in_months: l,
            currency_restriction: u,
            currency: m,
            status: p,
            tier: { id: `${d}`, name: b },
        };
    }
    function Qe({
        name: e = "Jamie Larson",
        email: t = "jamie@example.com",
        firstname: n = "Jamie",
        subscriptions: a = [],
        paid: r = !1,
        avatarImage: i = "",
        subscribed: o = !0,
        email_suppression: s = { suppressed: !1, info: null },
    } = {}) {
        return {
            uuid: `member_${Se()}`,
            email: t,
            name: e,
            firstname: n,
            paid: r,
            subscribed: o,
            avatar_image: i,
            subscriptions: a,
            email_suppression: s,
        };
    }
    function ru({ numOfProducts: e = 3 } = {}) {
        const n = [
                ua({
                    name: "Bronze",
                    description: "Access to all members articles",
                    monthlyPrice: Fe({ interval: "month", amount: 700 }),
                    yearlyPrice: Fe({ interval: "year", amount: 7e3 }),
                    numOfBenefits: 2,
                }),
                ua({
                    name: "Silver",
                    description:
                        "Access to all members articles and weekly podcast",
                    monthlyPrice: Fe({ interval: "month", amount: 1200 }),
                    yearlyPrice: Fe({ interval: "year", amount: 12e3 }),
                    numOfBenefits: 3,
                }),
                ua({
                    name: "Friends of the Blueprint",
                    description:
                        "Get access to everything and lock in early adopter pricing for life + listen to my podcast",
                    monthlyPrice: Fe({ interval: "month", amount: 18e3 }),
                    yearlyPrice: Fe({ interval: "year", amount: 17e3 }),
                    numOfBenefits: 4,
                }),
            ].slice(0, e),
            a = qf({});
        return [...n, a];
    }
    function ua({
        type: e = "paid",
        name: t = "Basic",
        description: n = "",
        id: a = `product_${Se()}`,
        monthlyPrice: r = Fe(),
        yearlyPrice: i = Fe({ interval: "year" }),
        numOfBenefits: o = 2,
        trialDays: s = null,
    }) {
        return {
            id: a,
            name: t,
            description: n,
            monthlyPrice: e === "free" ? null : r,
            yearlyPrice: e === "free" ? null : i,
            type: e,
            benefits: Gf({ numOfBenefits: o }),
            trial_days: s,
        };
    }
    function qf({
        name: e = "Free tier",
        description: t = "Free tier description",
        id: n = `product_${Se()}`,
        numOfBenefits: a = 2,
    }) {
        return {
            id: n,
            name: e,
            type: "free",
            description: t,
            benefits: Gf({ numOfBenefits: a }),
        };
    }
    function Gf({ numOfBenefits: e }) {
        return [
            Ro({ name: "Limited early adopter pricing" }),
            Ro({ name: "Latest gear reviews" }),
            Ro({ name: "Weekly email newsletter" }),
            Ro({ name: "Listen to my podcast" }),
        ].slice(0, e);
    }
    function Ro({ id: e = `benefit_${Se()}`, name: t = "Benefit" }) {
        return { id: e, name: t };
    }
    function Fe({
        interval: e = "month",
        amount: t = e === "month" ? 500 : 5e3,
        nickname: n = e === "month" ? "Monthly" : "Yearly",
        description: a = null,
        currency: r = "usd",
        active: i = !0,
        id: o = `price_${Se()}`,
    } = {}) {
        return {
            id: o,
            active: i,
            nickname: n,
            currency: r,
            amount: t,
            interval: e,
            description: a,
            stripe_price_id: `price_${Se()}`,
            stripe_product_id: `prod_${Se()}`,
            type: "recurring",
        };
    }
    function fn({
        id: e = `sub_${Se()}`,
        status: t = "active",
        currency: n = "USD",
        interval: a = "year",
        amount: r = a === "month" ? 500 : 5e3,
        nickname: i = a === "month" ? "Monthly" : "Yearly",
        cardLast4: o = "4242",
        offer: s = $S,
        priceId: l = `price_${Se()}`,
        startDate: u = "2021-10-05T03:18:30.000Z",
        currentPeriodEnd: m = "2022-10-05T03:18:30.000Z",
        cancelAtPeriodEnd: p = !1,
    } = {}) {
        return {
            id: e,
            customer: {
                id: `cus_${Se()}`,
                name: "Jamie",
                email: "jamie@example.com",
            },
            plan: {
                id: `price_${Se()}`,
                nickname: i,
                amount: r,
                interval: a,
                currency: n,
            },
            offer: s,
            status: t,
            start_date: u,
            default_payment_card_last4: o,
            cancel_at_period_end: p,
            cancellation_reason: null,
            current_period_end: m,
            price: {
                id: `stripe_price_${Se()}`,
                price_id: l,
                nickname: i,
                amount: r,
                interval: a,
                type: "recurring",
                currency: n,
                product: {
                    id: `stripe_prod_${Se()}`,
                    product_id: `prod_${Se()}`,
                },
            },
        };
    }
    function Kf() {
        const e = ru({ numOfProducts: 1 }),
            t = e.map((a) => a.id);
        return Mo({
            products: e,
            portalPlans: ["free", "monthly", "yearly"],
            portalProducts: t,
        });
    }
    Kf();
    const CS = Mo({ products: [ua({ numOfBenefits: 2, type: "free" })] }),
        $S = Wf({ tierId: (fg = CS.products[0]) == null ? void 0 : fg.id });
    Qe(),
        Qe({ paid: !0, subscriptions: [fn()] }),
        Qe({ paid: !0, subscriptions: [] }),
        Qe({ paid: !0, subscriptions: [fn({ amount: 0 })] }),
        Qe({
            paid: !0,
            subscriptions: [
                fn({
                    amount: 1500,
                    startDate: "2019-05-01T11:42:40.000Z",
                    currentPeriodEnd: "2021-06-05T11:42:40.000Z",
                }),
            ],
        }),
        Kf();
    const Lo = [
            qf({
                name: "Free",
                description:
                    "Free tier description which is actually a pretty long description",
                numOfBenefits: 2,
            }),
            ua({
                name: "The Blueprint",
                description: "",
                monthlyPrice: Fe({ interval: "month", amount: 500 }),
                yearlyPrice: Fe({ interval: "year", amount: 5e3 }),
                numOfBenefits: 3,
            }),
            ua({
                name: "Friends of the Blueprint Silver",
                description:
                    "Access to all members articles and weekly podcast",
                monthlyPrice: Fe({ interval: "month", amount: 1200 }),
                yearlyPrice: Fe({ interval: "year", amount: 11e3 }),
                numOfBenefits: 4,
            }),
        ],
        da = Mo({
            title: "The Blueprint",
            description: "Thoughts, stories and ideas.",
            logo: "https://static.ghost.org/v4.0.0/images/ghost-orb-1.png",
            icon: "https://static.ghost.org/v4.0.0/images/ghost-orb-1.png",
            accentColor: "#45C32E",
            url: "https://portal.localhost",
            plans: { monthly: 5e3, yearly: 15e4, currency: "USD" },
            products: Lo,
            portalProducts: Lo.map((e) => e.id),
            allowSelfSignup: !0,
            membersSignupAccess: "all",
            freePriceName: "Free",
            freePriceDescription: "Free preview",
            isStripeConfigured: !0,
            portalButton: !0,
            portalName: !0,
            portalPlans: ["free", "monthly", "yearly"],
            portalButtonIcon: "icon-1",
            portalButtonSignupText: "Subscribe now",
            portalButtonStyle: "icon-and-text",
            membersSupportAddress: "support@example.com",
            commentsEnabled: !0,
            newsletters: [
                {
                    id: "weekly",
                    name: "Weekly Rundown",
                    description: "Best of last week",
                    subscribe_on_signup: !0,
                    paid: !0,
                },
                {
                    id: "daily",
                    name: "Daily Brief",
                    description: "One email every day",
                    subscribe_on_signup: !1,
                    paid: !1,
                },
            ],
        }),
        Jf = Wf({ tierId: (gg = da.products[1]) == null ? void 0 : gg.id }),
        Yo = {
            free: Qe({
                name: "Jamie Larson",
                email: "jamie@example.com",
                firstname: "Jamie",
                subscriptions: [],
                paid: !1,
                avatarImage: "",
                subscribed: !0,
            }),
            paid: Qe({
                paid: !0,
                subscriptions: [
                    fn({
                        status: "active",
                        currency: "USD",
                        interval: "year",
                        amount: 5e3,
                        cardLast4: "4242",
                        startDate: "2021-10-05T03:18:30.000Z",
                        currentPeriodEnd: "2022-10-05T03:18:30.000Z",
                        cancelAtPeriodEnd: !1,
                    }),
                ],
            }),
            complimentary: Qe({ paid: !0, subscriptions: [] }),
            complimentaryWithSubscription: Qe({
                paid: !0,
                subscriptions: [fn({ amount: 0 })],
            }),
            preview: Qe({
                paid: !0,
                subscriptions: [
                    fn({
                        amount: 1500,
                        startDate: "2019-05-01T11:42:40.000Z",
                        currentPeriodEnd: "2021-06-05T11:42:40.000Z",
                    }),
                ],
            }),
        };
    function jS() {
        var n;
        if (!Lo || !Lo[1]) return null;
        let e =
                (n = da == null ? void 0 : da.products) == null
                    ? void 0
                    : n[1].monthlyPrice,
            t = Qe({
                paid: !0,
                subscriptions: [
                    fn({
                        offer: null,
                        priceId: e == null ? void 0 : e.id,
                        status: "active",
                        currency: e == null ? void 0 : e.currency,
                        interval: e == null ? void 0 : e.interval,
                        amount: e == null ? void 0 : e.amount,
                        cardLast4: "4242",
                        startDate: "2021-10-05T03:18:30.000Z",
                        currentPeriodEnd: "2022-10-05T03:18:30.000Z",
                        cancelAtPeriodEnd: !1,
                    }),
                ],
            });
        return { site: da, member: t };
    }
    function PS({ data: e, state: t }) {
        return {
            page: e.page,
            popupNotification: null,
            lastPage: e.lastPage || null,
            pageData: e.pageData || t.pageData,
        };
    }
    function _S({ state: e }) {
        return { showPopup: !e.showPopup };
    }
    function NS({ data: e }) {
        return {
            showPopup: !0,
            page: e.page,
            ...(e.pageQuery ? { pageQuery: e.pageQuery } : {}),
            ...(e.pageData ? { pageData: e.pageData } : {}),
        };
    }
    function TS({ state: e }) {
        return e.lastPage ? { page: e.lastPage } : Qf({ state: e });
    }
    function Qf({ state: e }) {
        return (
            Rc(),
            {
                showPopup: !1,
                lastPage: null,
                pageQuery: "",
                popupNotification: null,
                page: e.page === "magiclink" ? "" : e.page,
            }
        );
    }
    function IS({ data: e }) {
        return { showNotification: !0, ...e };
    }
    function zS() {
        return { showNotification: !1 };
    }
    async function AS({ api: e, state: t }) {
        try {
            return await e.member.signout(), { action: "signout:success" };
        } catch {
            return {
                action: "signout:failed",
                popupNotification: K({
                    type: "signout:failed",
                    autoHide: !1,
                    closeable: !0,
                    state: t,
                    status: "error",
                    message: "Failed to log out, please try again",
                }),
            };
        }
    }
    async function DS({ data: e, api: t, state: n }) {
        try {
            return (
                await t.member.sendMagicLink({ ...e, emailType: "signin" }),
                { page: "magiclink", lastPage: "signin" }
            );
        } catch (a) {
            return {
                action: "signin:failed",
                popupNotification: K({
                    type: "signin:failed",
                    autoHide: !1,
                    closeable: !0,
                    state: n,
                    status: "error",
                    message: kt.getMessageFromError(
                        a,
                        "Failed to log in, please try again"
                    ),
                }),
            };
        }
    }
    async function MS({ data: e, state: t, api: n }) {
        try {
            let {
                plan: a,
                tierId: r,
                cadence: i,
                email: o,
                name: s,
                newsletters: l,
                offerId: u,
            } = e;
            if (a.toLowerCase() === "free")
                await n.member.sendMagicLink({ emailType: "signup", ...e });
            else
                return (
                    r && i
                        ? await n.member.checkoutPlan({
                              plan: a,
                              tierId: r,
                              cadence: i,
                              email: o,
                              name: s,
                              newsletters: l,
                              offerId: u,
                          })
                        : (({ tierId: r, cadence: i } = hn({
                              site: t == null ? void 0 : t.site,
                              priceId: a,
                          })),
                          await n.member.checkoutPlan({
                              plan: a,
                              tierId: r,
                              cadence: i,
                              email: o,
                              name: s,
                              newsletters: l,
                              offerId: u,
                          })),
                    { page: "loading" }
                );
            return { page: "magiclink", lastPage: "signup" };
        } catch (a) {
            const r =
                (a == null ? void 0 : a.message) ||
                "Failed to sign up, please try again";
            return {
                action: "signup:failed",
                popupNotification: K({
                    type: "signup:failed",
                    autoHide: !1,
                    closeable: !0,
                    state: t,
                    status: "error",
                    message: r,
                }),
            };
        }
    }
    async function RS({ data: e, state: t, api: n }) {
        try {
            let { plan: a, offerId: r, tierId: i, cadence: o } = e;
            (!i || !o) &&
                ({ tierId: i, cadence: o } = hn({
                    site: t == null ? void 0 : t.site,
                    priceId: a,
                })),
                await n.member.checkoutPlan({
                    plan: a,
                    tierId: i,
                    cadence: o,
                    offerId: r,
                    metadata: { checkoutType: "upgrade" },
                });
        } catch {
            return {
                action: "checkoutPlan:failed",
                popupNotification: K({
                    type: "checkoutPlan:failed",
                    autoHide: !1,
                    closeable: !0,
                    state: t,
                    status: "error",
                    message: "Failed to process checkout, please try again",
                }),
            };
        }
    }
    async function LS({ data: e, state: t, api: n }) {
        try {
            const {
                    plan: a,
                    planId: r,
                    subscriptionId: i,
                    cancelAtPeriodEnd: o,
                } = e,
                { tierId: s, cadence: l } = hn({
                    site: t == null ? void 0 : t.site,
                    priceId: r,
                });
            await n.member.updateSubscription({
                planName: a,
                tierId: s,
                cadence: l,
                subscriptionId: i,
                cancelAtPeriodEnd: o,
                planId: r,
            });
            const u = await n.member.sessionData(),
                m = "updateSubscription:success";
            return {
                action: m,
                popupNotification: K({
                    type: m,
                    autoHide: !0,
                    closeable: !0,
                    state: t,
                    status: "success",
                    message: "Subscription plan updated successfully",
                }),
                page: "accountHome",
                member: u,
            };
        } catch {
            return {
                action: "updateSubscription:failed",
                popupNotification: K({
                    type: "updateSubscription:failed",
                    autoHide: !1,
                    closeable: !0,
                    state: t,
                    status: "error",
                    message: "Failed to update subscription, please try again",
                }),
            };
        }
    }
    async function YS({ data: e, state: t, api: n }) {
        try {
            const { subscriptionId: a, cancellationReason: r } = e;
            return (
                await n.member.updateSubscription({
                    subscriptionId: a,
                    smartCancel: !0,
                    cancellationReason: r,
                }),
                {
                    action: "cancelSubscription:success",
                    page: "accountHome",
                    member: await n.member.sessionData(),
                }
            );
        } catch {
            return {
                action: "cancelSubscription:failed",
                popupNotification: K({
                    type: "cancelSubscription:failed",
                    autoHide: !1,
                    closeable: !0,
                    state: t,
                    status: "error",
                    message: "Failed to cancel subscription, please try again",
                }),
            };
        }
    }
    async function US({ data: e, state: t, api: n }) {
        try {
            const { subscriptionId: a } = e;
            return (
                await n.member.updateSubscription({
                    subscriptionId: a,
                    cancelAtPeriodEnd: !1,
                }),
                {
                    action: "continueSubscription:success",
                    page: "accountHome",
                    member: await n.member.sessionData(),
                }
            );
        } catch {
            return {
                action: "continueSubscription:failed",
                popupNotification: K({
                    type: "continueSubscription:failed",
                    autoHide: !1,
                    closeable: !0,
                    state: t,
                    status: "error",
                    message: "Failed to cancel subscription, please try again",
                }),
            };
        }
    }
    async function BS({ data: e, state: t, api: n }) {
        try {
            await n.member.editBilling(e);
        } catch {
            return {
                action: "editBilling:failed",
                popupNotification: K({
                    type: "editBilling:failed",
                    autoHide: !1,
                    closeable: !0,
                    state: t,
                    status: "error",
                    message:
                        "Failed to update billing information, please try again",
                }),
            };
        }
    }
    async function FS() {
        return { popupNotification: null };
    }
    async function OS({ data: e, state: t }) {
        let { action: n, message: a = "" } = e;
        return (
            (n = n || "showPopupNotification:success"),
            {
                popupNotification: K({
                    type: n,
                    autoHide: !0,
                    closeable: !0,
                    state: t,
                    status: "success",
                    message: a,
                }),
            }
        );
    }
    async function HS({ data: e, state: t, api: n }) {
        try {
            const { newsletters: a, enableCommentNotifications: r } = e;
            if (!a && r === void 0) return {};
            const i = {};
            return (
                a && (i.newsletters = a),
                r !== void 0 && (i.enableCommentNotifications = r),
                {
                    action: "updateNewsletterPref:success",
                    member: await n.member.update(i),
                }
            );
        } catch {
            return {
                action: "updateNewsletterPref:failed",
                popupNotification: K({
                    type: "updateNewsletter:failed",
                    autoHide: !0,
                    closeable: !0,
                    state: t,
                    status: "error",
                    message: "Failed to update newsletter settings",
                }),
            };
        }
    }
    async function VS({ state: e, api: t }) {
        try {
            return (
                await t.member.deleteSuppression(),
                {
                    action: "removeEmailFromSuppressionList:success",
                    popupNotification: K({
                        type: "removeEmailFromSuppressionList:success",
                        autoHide: !0,
                        closeable: !0,
                        state: e,
                        status: "success",
                        message: "You have been successfully resubscribed",
                    }),
                }
            );
        } catch {
            return {
                action: "removeEmailFromSuppressionList:failed",
                popupNotification: K({
                    type: "removeEmailFromSuppressionList:failed",
                    autoHide: !0,
                    closeable: !0,
                    state: e,
                    status: "error",
                    message:
                        "Your email has failed to resubscribe, please try again",
                }),
            };
        }
    }
    async function WS({ data: e, state: t, api: n }) {
        try {
            const { subscribed: a } = e,
                r = await n.member.update({ subscribed: a });
            if (!r) throw new Error("Failed to update newsletter");
            const i = "updateNewsletter:success";
            return {
                action: i,
                member: r,
                popupNotification: K({
                    type: i,
                    autoHide: !0,
                    closeable: !0,
                    state: t,
                    status: "success",
                    message: "Email newsletter settings updated",
                }),
            };
        } catch {
            return {
                action: "updateNewsletter:failed",
                popupNotification: K({
                    type: "updateNewsletter:failed",
                    autoHide: !0,
                    closeable: !0,
                    state: t,
                    status: "error",
                    message: "Failed to update newsletter settings",
                }),
            };
        }
    }
    async function qS({ data: e, state: t, api: n }) {
        const { email: a } = e,
            r = Xw({ member: t.member });
        if (a !== r)
            try {
                return (
                    await n.member.updateEmailAddress({ email: a }),
                    { success: !0 }
                );
            } catch (i) {
                return { success: !1, error: i };
            }
        return null;
    }
    async function GS({ data: e, state: t, api: n }) {
        const { name: a } = e;
        if (ex({ member: t.member }) !== a)
            try {
                const i = await n.member.update({ name: a });
                if (!i) throw new Error("Failed to update member");
                return { member: i, success: !0 };
            } catch (i) {
                return { success: !1, error: i };
            }
        return null;
    }
    async function KS({ state: e, api: t }) {
        if (e.member)
            try {
                const n = await t.member.sessionData();
                return n
                    ? {
                          member: n,
                          success: !0,
                          action: "refreshMemberData:success",
                      }
                    : null;
            } catch (n) {
                return {
                    success: !1,
                    error: n,
                    action: "refreshMemberData:failed",
                };
            }
        return null;
    }
    async function JS({ data: e, state: t, api: n }) {
        const [a, r] = await Promise.all([
            GS({ data: e, state: t, api: n }),
            qS({ data: e, state: t, api: n }),
        ]);
        if (a && r) {
            if (r.success)
                return {
                    action: "updateProfile:success",
                    ...(a.success ? { member: a.member } : {}),
                    page: "accountHome",
                    popupNotification: K({
                        type: "updateProfile:success",
                        autoHide: !0,
                        closeable: !0,
                        status: "success",
                        state: t,
                        message: "Check your inbox to verify email update",
                    }),
                };
            const i = a.success
                ? "Failed to send verification email"
                : "Failed to update account data";
            return {
                action: "updateProfile:failed",
                ...(a.success ? { member: a.member } : {}),
                popupNotification: K({
                    type: "updateProfile:failed",
                    autoHide: !0,
                    closeable: !0,
                    status: "error",
                    message: i,
                    state: t,
                }),
            };
        } else if (a) {
            const i = a.success
                    ? "updateProfile:success"
                    : "updateProfile:failed",
                o = a.success ? "success" : "error",
                s = a.success
                    ? "Account details updated successfully"
                    : "Failed to update account details";
            return {
                action: i,
                ...(a.success ? { member: a.member } : {}),
                ...(a.success ? { page: "accountHome" } : {}),
                popupNotification: K({
                    type: i,
                    autoHide: a.success,
                    closeable: !0,
                    status: o,
                    state: t,
                    message: s,
                }),
            };
        } else if (r) {
            const i = r.success
                    ? "updateProfile:success"
                    : "updateProfile:failed",
                o = r.success ? "success" : "error",
                s = r.success
                    ? "Check your inbox to verify email update"
                    : "Failed to send verification email";
            return {
                action: i,
                ...(r.success ? { page: "accountHome" } : {}),
                popupNotification: K({
                    type: i,
                    autoHide: r.success,
                    closeable: !0,
                    status: o,
                    state: t,
                    message: s,
                }),
            };
        }
        return {
            action: "updateProfile:success",
            page: "accountHome",
            popupNotification: K({
                type: "updateProfile:success",
                autoHide: !0,
                closeable: !0,
                status: "success",
                state: t,
                message: "Account details updated successfully",
            }),
        };
    }
    async function QS({ data: { siteUrl: e }, state: t }) {
        const n = ca({
                siteUrl: e,
                apiUrl: "not-defined",
                contentApiKey: "not-defined",
            }),
            { member: a } = t,
            r = window.location.href,
            i = Bh();
        return (
            await n.member.sendMagicLink({
                emailType: "signup",
                name: a.name,
                email: a.email,
                autoRedirect: !1,
                customUrlHistory: t.site.outbound_link_tagging
                    ? [
                          {
                              time: Date.now(),
                              referrerSource: i,
                              referrerMedium: "Ghost Recommendations",
                              referrerUrl: r,
                          },
                      ]
                    : [],
            }),
            {}
        );
    }
    function XS({ data: { recommendationId: e }, api: t }) {
        try {
            const n = localStorage.getItem("ghost-recommendations-clicked"),
                a = n ? JSON.parse(n) : [];
            if (a.includes(e)) return;
            a.push(e),
                localStorage.setItem(
                    "ghost-recommendations-clicked",
                    JSON.stringify(a)
                );
        } catch {}
        return t.recommendations.trackClicked({ recommendationId: e }), {};
    }
    async function ZS({ data: { recommendationId: e }, api: t }) {
        return t.recommendations.trackSubscribed({ recommendationId: e }), {};
    }
    const e1 = {
        togglePopup: _S,
        openPopup: NS,
        closePopup: Qf,
        switchPage: PS,
        openNotification: IS,
        closeNotification: zS,
        back: TS,
        signout: AS,
        signin: DS,
        signup: MS,
        updateSubscription: LS,
        cancelSubscription: YS,
        continueSubscription: US,
        updateNewsletter: WS,
        updateProfile: JS,
        refreshMemberData: KS,
        clearPopupNotification: FS,
        editBilling: BS,
        checkoutPlan: RS,
        updateNewsletterPreference: HS,
        showPopupNotification: OS,
        removeEmailFromSuppressionList: VS,
        oneClickSubscribe: QS,
        trackRecommendationClicked: XS,
        trackRecommendationSubscribed: ZS,
    };
    async function t1({ action: e, data: t, state: n, api: a }) {
        const r = e1[e];
        return r ? (await r({ data: t, state: n, api: a })) || {} : {};
    }
    const LE = "";
    function n1({
        event: e,
        form: t,
        errorEl: n,
        siteUrl: a,
        submitHandler: r,
    }) {
        var h;
        t.removeEventListener("submit", r),
            e.preventDefault(),
            n && (n.innerText = ""),
            t.classList.remove("success", "invalid", "error");
        let i = e.target.querySelector("input[data-members-email]"),
            o = e.target.querySelector("input[data-members-name]"),
            s =
                ((h = t == null ? void 0 : t.dataset) == null
                    ? void 0
                    : h.membersAutoredirect) || "true",
            l = i == null ? void 0 : i.value,
            u = (o && o.value) || void 0,
            m,
            p = [],
            d = [],
            b = e.target.querySelectorAll("input[data-members-label]") || [];
        for (let f = 0; f < b.length; ++f) p.push(b[f].value);
        let y =
            e.target.querySelectorAll(
                "input[type=hidden][data-members-newsletter], input[type=checkbox][data-members-newsletter]:checked, input[type=radio][data-members-newsletter]:checked"
            ) || [];
        for (let f = 0; f < y.length; ++f) d.push({ name: y[f].value });
        t.dataset.membersForm && (m = t.dataset.membersForm),
            t.classList.add("loading");
        const v = Sr(),
            g = {
                email: l,
                emailType: m,
                labels: p,
                name: u,
                autoRedirect: s === "true",
            };
        v && (g.urlHistory = v),
            y.length > 0
                ? (g.newsletters = d)
                : (
                      e.target.querySelectorAll(
                          "input[type=checkbox][data-members-newsletter]"
                      ) || []
                  ).length > 0 && (g.newsletters = []),
            fetch(`${a}/members/api/send-magic-link/`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(g),
            })
                .then(function (f) {
                    if (
                        (t.addEventListener("submit", r),
                        t.classList.remove("loading"),
                        f.ok)
                    )
                        t.classList.add("success");
                    else
                        return kt.fromApiResponse(f).then((x) => {
                            throw x;
                        });
                })
                .catch((f) => {
                    n &&
                        (n.innerText = kt.getMessageFromError(
                            f,
                            "There was an error sending the email, please try again"
                        )),
                        t.classList.add("error");
                });
    }
    function a1({
        event: e,
        el: t,
        errorEl: n,
        siteUrl: a,
        site: r,
        member: i,
        clickHandler: o,
    }) {
        t.removeEventListener("click", o), e.preventDefault();
        let s = t.dataset.membersPlan,
            l = Ww(r, s.toLowerCase()),
            u = t.dataset.membersSuccess,
            m = t.dataset.membersCancel,
            p,
            d;
        u && (p = new URL(u, window.location.href).href),
            m && (d = new URL(m, window.location.href).href),
            n && (n.innerText = ""),
            t.classList.add("loading");
        const b = i ? { checkoutType: "upgrade" } : {},
            y = Sr();
        return (
            y && (b.urlHistory = y),
            fetch(`${a}/members/api/session`, { credentials: "same-origin" })
                .then(function (v) {
                    return v.ok ? v.text() : null;
                })
                .then(function (v) {
                    return fetch(
                        `${a}/members/api/create-stripe-checkout-session/`,
                        {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({
                                ...l,
                                identity: v,
                                successUrl: p,
                                cancelUrl: d,
                                metadata: b,
                            }),
                        }
                    ).then(function (g) {
                        if (!g.ok)
                            throw new Error(
                                "Could not create stripe checkout session"
                            );
                        return g.json();
                    });
                })
                .then(function (v) {
                    return v.url
                        ? window.location.assign(v.url)
                        : window
                              .Stripe(v.publicKey)
                              .redirectToCheckout({ sessionId: v.sessionId })
                              .then(function (h) {
                                  if (h.error) throw new Error(h.error.message);
                              });
                })
                .catch(function (v) {
                    console.error(v),
                        t.addEventListener("click", o),
                        t.classList.remove("loading"),
                        n && (n.innerText = v.message),
                        t.classList.add("error");
                })
        );
    }
    function r1({ siteUrl: e, site: t, member: n }) {
        e &&
            ((e = e.replace(/\/$/, "")),
            Array.prototype.forEach.call(
                document.querySelectorAll("form[data-members-form]"),
                function (a) {
                    let r = a.querySelector("[data-members-error]");
                    function i(o) {
                        n1({
                            event: o,
                            errorEl: r,
                            form: a,
                            siteUrl: e,
                            submitHandler: i,
                        });
                    }
                    a.addEventListener("submit", i);
                }
            ),
            Array.prototype.forEach.call(
                document.querySelectorAll("[data-members-plan]"),
                function (a) {
                    let r = a.querySelector("[data-members-error]");
                    function i(o) {
                        a1({
                            el: a,
                            event: o,
                            errorEl: r,
                            member: n,
                            site: t,
                            siteUrl: e,
                            clickHandler: i,
                        });
                    }
                    a.addEventListener("click", i);
                }
            ),
            Array.prototype.forEach.call(
                document.querySelectorAll("[data-members-edit-billing]"),
                function (a) {
                    let r = a.querySelector("[data-members-error]"),
                        i = a.dataset.membersSuccess,
                        o = a.dataset.membersCancel,
                        s,
                        l;
                    i && (s = new URL(i, window.location.href).href),
                        o && (l = new URL(o, window.location.href).href);
                    function u(m) {
                        a.removeEventListener("click", u),
                            m.preventDefault(),
                            r && (r.innerText = ""),
                            a.classList.add("loading"),
                            fetch(`${e}/members/api/session`, {
                                credentials: "same-origin",
                            })
                                .then(function (p) {
                                    return p.ok ? p.text() : null;
                                })
                                .then(function (p) {
                                    return fetch(
                                        `${e}/members/api/create-stripe-update-session/`,
                                        {
                                            method: "POST",
                                            headers: {
                                                "Content-Type":
                                                    "application/json",
                                            },
                                            body: JSON.stringify({
                                                identity: p,
                                                successUrl: s,
                                                cancelUrl: l,
                                            }),
                                        }
                                    ).then(function (d) {
                                        if (!d.ok)
                                            throw new Error(
                                                "Could not create stripe checkout session"
                                            );
                                        return d.json();
                                    });
                                })
                                .then(function (p) {
                                    return window
                                        .Stripe(p.publicKey)
                                        .redirectToCheckout({
                                            sessionId: p.sessionId,
                                        });
                                })
                                .then(function (p) {
                                    if (p.error)
                                        throw new Error(p.error.message);
                                })
                                .catch(function (p) {
                                    console.error(p),
                                        a.addEventListener("click", u),
                                        a.classList.remove("loading"),
                                        r && (r.innerText = p.message),
                                        a.classList.add("error");
                                });
                    }
                    a.addEventListener("click", u);
                }
            ),
            Array.prototype.forEach.call(
                document.querySelectorAll("[data-members-signout]"),
                function (a) {
                    function r(i) {
                        a.removeEventListener("click", r),
                            i.preventDefault(),
                            a.classList.remove("error"),
                            a.classList.add("loading"),
                            fetch(`${e}/members/api/session`, {
                                method: "DELETE",
                            }).then(function (o) {
                                o.ok
                                    ? window.location.replace(e)
                                    : (a.addEventListener("click", r),
                                      a.classList.remove("loading"),
                                      a.classList.add("error"));
                            });
                    }
                    a.addEventListener("click", r);
                }
            ),
            Array.prototype.forEach.call(
                document.querySelectorAll("[data-members-cancel-subscription]"),
                function (a) {
                    let r = a.parentElement.querySelector(
                        "[data-members-error]"
                    );
                    function i(o) {
                        a.removeEventListener("click", i),
                            o.preventDefault(),
                            a.classList.remove("error"),
                            a.classList.add("loading");
                        let s = a.dataset.membersCancelSubscription;
                        return (
                            r && (r.innerText = ""),
                            fetch(`${e}/members/api/session`, {
                                credentials: "same-origin",
                            })
                                .then(function (l) {
                                    return l.ok ? l.text() : null;
                                })
                                .then(function (l) {
                                    return fetch(
                                        `${e}/members/api/subscriptions/${s}/`,
                                        {
                                            method: "PUT",
                                            headers: {
                                                "Content-Type":
                                                    "application/json",
                                            },
                                            body: JSON.stringify({
                                                identity: l,
                                                smart_cancel: !0,
                                            }),
                                        }
                                    );
                                })
                                .then(function (l) {
                                    l.ok
                                        ? window.location.reload()
                                        : (a.addEventListener("click", i),
                                          a.classList.remove("loading"),
                                          a.classList.add("error"),
                                          r &&
                                              (r.innerText =
                                                  "There was an error cancelling your subscription, please try again."));
                                })
                        );
                    }
                    a.addEventListener("click", i);
                }
            ),
            Array.prototype.forEach.call(
                document.querySelectorAll(
                    "[data-members-continue-subscription]"
                ),
                function (a) {
                    let r = a.parentElement.querySelector(
                        "[data-members-error]"
                    );
                    function i(o) {
                        a.removeEventListener("click", i),
                            o.preventDefault(),
                            a.classList.remove("error"),
                            a.classList.add("loading");
                        let s = a.dataset.membersContinueSubscription;
                        return (
                            r && (r.innerText = ""),
                            fetch(`${e}/members/api/session`, {
                                credentials: "same-origin",
                            })
                                .then(function (l) {
                                    return l.ok ? l.text() : null;
                                })
                                .then(function (l) {
                                    return fetch(
                                        `${e}/members/api/subscriptions/${s}/`,
                                        {
                                            method: "PUT",
                                            headers: {
                                                "Content-Type":
                                                    "application/json",
                                            },
                                            body: JSON.stringify({
                                                identity: l,
                                                cancel_at_period_end: !1,
                                            }),
                                        }
                                    );
                                })
                                .then(function (l) {
                                    l.ok
                                        ? window.location.reload()
                                        : (a.addEventListener("click", i),
                                          a.classList.remove("loading"),
                                          a.classList.add("error"),
                                          r &&
                                              (r.innerText =
                                                  "There was an error continuing your subscription, please try again."));
                                })
                        );
                    }
                    a.addEventListener("click", i);
                }
            ));
    }
    const i1 = {
            "{{amount}} days free": "{{amount}} dae gratis",
            "{{amount}} off": "{{amount}} afslag",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} afslag vir die eerste {{number}} maande.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} afslag vir die eerste {{period}}.",
            "{{amount}} off forever.": "{{amount}} afslag vir altyd.",
            "{{discount}}% discount": "{{discount}}% afslag",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} sal nie meer die {{newsletterName}} nuusbrief ontvang nie.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} sal nie meer e-posse ontvang wanneer iemand op u kommentaar reageer nie.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} sal nie meer hierdie nuusbrief ontvang nie.",
            "{{trialDays}} days free": "{{trialDays}} dae gratis",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "'n Aanmeldskakel is na u epos gestuur. As dit nie binne 3 minute aankom nie, moet u asseblief u spam-vouer nagaan.",
            Account: "Rekening",
            "Account settings": "Rekening instellings",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Na afloop van die gratis proeftydperk sal u die vasgestelde pry vir die vlak wat u gekies het, betaal. U kan altyd voor die tyd kanselleer.",
            "Already a member?": "Is u reeds 'n lid?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "'n Onverwagte fout het voorgekom. Probeer asseblief weer of <a>kontak kliëntediens</a> as die fout voortduur.",
            Back: "Terug",
            "Back to Log in": "Terug na aanmelding",
            "Billing info": "Rekening inligting",
            "Black Friday": "Swart Vrydag",
            "Cancel anytime.": "Kanselleer enige tyd.",
            "Cancel subscription": "Kanselleer inskrywing",
            "Cancellation reason": "Kansellasie rede",
            Change: "Verander",
            "Check spam & promotions folders": "Kyk in spam & promosie vouers",
            "Check with your mail provider": "Kyk by u e-posverskaffer",
            Choose: "Kies",
            "Choose a different plan": "Kies 'n ander plan",
            "Choose your newsletters": "Kies u nuusbriefs",
            "Click here to retry": "Kliek hier om weer te probeer",
            Close: "Sluit",
            Comments: "Kommentaar",
            Complimentary: "Komplimentêr",
            Confirm: "Bevestig",
            "Confirm cancellation": "Bevestig kansellasie",
            "Confirm subscription": "Bevestig inskrywing",
            "Contact support": "Kontak kliëntediens",
            Continue: "Gaan voort",
            "Continue subscription": "Gaan voort met inskrywing",
            "Could not sign in. Login link expired.":
                "Kon nie aanmeld nie. Aanmeldskakel het verval.",
            "Could not update email! Invalid link.":
                "Kon nie e-pos opdateer nie! Ongeldige skakel.",
            "Create a new contact": "Skep 'n nuwe kontak",
            "Current plan": "Huidige plan",
            "Delete account": "Verwyder rekening",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Het dit nie bedoel om te doen nie? Bestuur jou voorkeure <button>hier</button>.",
            "Don't have an account?": "Het u nie 'n rekening nie?",
            Edit: "Wysig",
            Email: "E-pos",
            "Email newsletter": "Epos nuusbrief",
            "Email preference updated.": "E-pos instellings opgedateer.",
            "Email preferences": "E-pos instellings",
            Emails: "E-posse",
            "Emails disabled": "E-posse afgeskakel",
            "Ends {{offerEndDate}}": "Eindig {{offerEndDate}}",
            Error: "Fout",
            "Expires {{expiryDate}}": "Verval {{expiryDate}}",
            Forever: "Verewig",
            "Free Trial – Ends {{trialEnd}}":
                "Gratis proeftydperk – Eindig {{trialEnd}}",
            "Get help": "Kry hulp",
            "Get in touch for help": "Kontak vir hulp",
            "Get notified when someone replies to your comment":
                "Ontvang 'n kennisgewing wanneer iemand op u kommentaar reageer",
            "Give feedback on this post": "Gee terugvoering oor hierdie pos",
            "Help! I'm not receiving emails":
                "Help! Ek ontvang nie e-posse nie",
            "Here are a few other sites you may enjoy.":
                "Hier is 'n paar ander webwerwe wat jy dalk sal geniet.",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "As 'n nuusbrief as spam geïdentifiseer word, word e-posse outomaties vir daardie adres afgeskakel om seker te maak dat u geen ongewenste boodskappe meer ontvang nie.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "As die spam klag per ongeluk was, of as u weer e-posse wil begin ontvang, kan u weer inskryf vir e-posse deur op die knoppie op die vorige skerm te klik.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "As u nou kanselleer, sal u toegang hê tot {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "As u 'n korporatiewe of regerings e-posrekening het, kontak u IT-afdeling en vra hulle om e-posse van {{senderEmail}} te ontvang",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "As u weer e-posse wil begin ontvang, is die beste volgende stap om u e-posadres op rekord te kontroleer vir enige probleme en dan weer in te skryf op die vorige skerm.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "As u nie die e-pos nuusbrief ontvang wat u op ingeteken het nie, is hier 'n paar goed om te kontroleer.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "As u al hierdie kontroles voltooi het en u steeds nie e-posse ontvang nie, kan u hulp kry deur {{supportAddress}} te kontak.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "In die geval dat 'n permanente fout ontvang word wanneer 'n nuusbrief gestuur word, sal e-posse op die rekening afgeskakel word.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "In u e-pos program, voeg {{senderEmail}} by u kontaklys. Dit dui aan u e-posverskaffer aan dat e-posse wat van hierdie adres gestuur word, vertrou moet word.",
            "Less like this": "Minder soos hierdie",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Maak seker dat e-posse nie per ongeluk in die Spam of Promosies vouers van u posbus beland nie. As dit wel is, kliek op "Mark as not spam" en/of "Move to inbox".',
            Manage: "Bestuur",
            "Maybe later": "Dalk later",
            "Memberships unavailable, contact the owner for access.":
                "Lidmaatskap nie beskikbaar nie, kontak die eienaar vir toegang.",
            Monthly: "Maandeliks",
            "More like this": "Meer soos hierdie",
            Name: "Naam",
            "Need more help? Contact support":
                "Benodig meer hulp? Kontak kliëntediens",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Nuusbriewe kan op u rekening afgeskakel word vir twee redes: 'n Vorige e-pos is as spam gemerk, of 'n poging om 'n e-pos te stuur het tot 'n permanente fout gelei (bounce).",
            "Not receiving emails?": "Ontvang u nie e-posse nie?",
            "Now check your email!": "Kyk nou u e-pos!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "As u weer ingeskryf is, en u sien steeds nie e-posse in u posbus nie, kontroleer u spam vouer. Sommige posbusverskaffers hou 'n rekord van vorige spam klagtes en sal steeds e-posse merk. As dit gebeur, merk die nuutste nuusbrief as 'Not spam' om dit terug te skuif na u primêre posbus.",
            "Permanent failure (bounce)": "Permanente fout (bounce)",
            Plan: "Plan",
            "Plan checkout was cancelled.": "Plan afreken is gekanselleer.",
            "Plan upgrade was cancelled.": "Plan opgradering is gekanselleer.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "Kontak {{supportAddress}} om jou komplimentêre intekening aan te pas.",
            "Please fill in required fields":
                "Vul asseblief die verpligte velde in",
            Price: "Prys",
            "Re-enable emails": "Her-aktiveer eposse",
            Recommendations: "",
            "Renews at {{price}}.": "Hernu teen {{price}}.",
            Retry: "Probeer weer",
            Save: "Stoor",
            "Send an email and say hi!": "Stuur 'n epos en sê hallo!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Stuur 'n e-pos na {{senderEmail}} en sê hallo. Dit kan ook help om aan u e-posverskaffer aan te dui dat e-posse na en van hierdie adres vertrou moet word.",
            "Sending login link...": "Stuur aanmeldskakel...",
            "Sending...": "Stuur...",
            "Show all": "Wys almal",
            "Sign in": "Meld aan",
            "Sign out": "Teken uit",
            "Sign up": "Registreer",
            "Signup error: Invalid link": "Aanmelding fout: Ongeldige skakel",
            "Sorry, that didn’t work.": "Jammer, dit het nie gewerk nie.",
            "Spam complaints": "Spam klagtes",
            "Start {{amount}}-day free trial":
                "Begin {{amount}}-dag gratis proeftydperk",
            "Starting {{startDate}}": "Begin {{startDate}}",
            "Starting today": "Begin vandag",
            "Submit feedback": "Stuur terugvoering",
            Subscribe: "Teken in",
            Subscribed: "Ingeteken",
            Success: "Sukses",
            "Success! Check your email for magic link to sign-in.":
                "Sukses! Kyk in jou e-pos vir 'n magiese skakel om aan te meld.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Sukses! U rekening is ten volle geaktiveer, u het nou toegang tot alle inhoud.",
            "Success! Your email is updated.": "Sukses! U e-pos is opgedateer.",
            "Successfully unsubscribed": "Suksesvol afgemeld",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "Dankie dat jy ingeteken het. Voordat jy begin lees, hieronder is 'n paar ander webwerwe wat jy dalk sal geniet.",
            "Thanks for the feedback!": "Dankie vir die terugvoering!",
            "That didn't go to plan": "Dit het nie volgens plan verloop nie",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "Die epos addres wat ons vir u het is {{memberEmail}} — as dit nie korrek is nie, kan u dit opdateer in u <button>rekeninginstellings area</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Daar was 'n probleem om u terugvoering in te dien. Probeer asseblief later weer.",
            "This site is invite-only, contact the owner for access.":
                "Hierdie webwerf is slegs op uitnodiging, kontak die eienaar vir toegang.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Om die registrasie te voltooi, kliek op die bevestigingskakel in jou inboks. As dit nie binne 3 minute aankom nie, kontroleer asseblief jou spam-vouer!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Probeer gratis vir {{amount}} dae, dan {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Ontsluit toegang tot alle nuusbriewe deur 'n betaalde intekenaar te word.",
            "Unsubscribe from all emails": "Meld af van alle e-posse",
            Unsubscribed: "Afgemeld",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Deur van eposse af te skakel, sal nie u betaalde subskripsie van {{title}} kanselleer nie",
            Update: "Opdateer",
            "Update your preferences": "Opdateer u voorkeure",
            "Verification link sent, check your inbox":
                "Verifikasie skakel gestuur, kyk jou e-pos inkassie",
            "Verify your email address is correct":
                "Bevestig dat u e-posadres korrek is",
            "View plans": "Kyk na planne",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Ons kon u nie afskakel nie, omdat die e-pos adres nie gevind is nie. Kontak asseblief die webwerf eienaar.",
            "Welcome back, {{name}}!": "Welkom terug, {{name}}!",
            "Welcome back!": "Welkom terug!",
            "Welcome to {{siteTitle}}": "Welkom by {{siteTitle}}",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "As 'n inboks nie 'n e-pos aanvaar nie, word dit algemeen 'n 'bounce' genoem. In baie gevalle kan dit tydelik wees. In sommige gevalle kan 'n gebotsde e-pos egter as 'n permanente fout teruggekeer word wanneer 'n e-posadres ongeldig of nie-bestaande is nie.",
            "Why has my email been disabled?":
                "Waarom is my e-pos gedeaktiveer?",
            Yearly: "Jaarliks",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "U het tans 'n gratis lidmaatskap, opgradeer na 'n betaalde intekening vir volle toegang.",
            "You have been successfully resubscribed":
                "U is suksesvol heringeskryf",
            "You're currently not receiving emails":
                "U ontvang tans nie e-posse nie",
            "You're not receiving emails": "U ontvang nie e-posse nie",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "U ontvang nie e-posse nie, omdat u onlangs 'n boodskap as spam gemerk het, of omdat boodskappe nie na die e-pos adres wat u verskaf het gestuur kon word nie.",
            "You've successfully signed in.": "U het suksesvol aangemeld.",
            "You've successfully subscribed to":
                "Jy het suksesvol ingeteken op",
            "Your account": "U rekening",
            "Your input helps shape what gets published.":
                "U insette help om te bepaal wat gepubliseer word.",
            "Your subscription will expire on {{expiryDate}}":
                "U intekening sal verval op {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "U intekening sal hernu op {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "U intekening sal begin op {{subscriptionStart}}",
        },
        o1 = {
            "{{amount}} days free": "{{amount}} дни безплатно",
            "{{amount}} off": "{{amount}} отстъпка",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} отстъпка за първите {{number}} месеца.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} отстъпка за първия {{period}}.",
            "{{amount}} off forever.": "{{amount}} отстъпка завинаги.",
            "{{discount}}% discount": "{{discount}}% отстъпка",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} повече няма да получава бюлетина {{newsletterName}}.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} повече няма да получава имейли, когато някой отговаря на ваш коментар.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} повече няма да получава този бюлетин.",
            "{{trialDays}} days free": "{{trialDays}} дни безплатен достъп",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Връзка за влизане беше изпратена към пощенската Ви кутия. Ако писмото не пристигне до 3 минути, провете дали не е категоризирана като нежелано писмо.",
            Account: "Профил",
            "Account settings": "Настройки на профила Ви",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "След прикючване на безплатния достъп ще бъдете таксувани според обявените цени. Можете да се откажете преди изтичането на безплатния достъп.",
            "Already a member?": "Вече сте абонат на сайта?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Възникна неочаквана грешка. Моля, опитайте отново или <a>потърсете поддръжката</a> ако това се повтаря.",
            Back: "Обратно",
            "Back to Log in": "Обратно към формата за влизане",
            "Billing info": "Платежна информация",
            "Black Friday": "Черен петък",
            "Cancel anytime.": "Отказване по всяко време.",
            "Cancel subscription": "Откажи абонамент",
            "Cancellation reason": "Причина за отказ",
            Change: "Промени",
            "Check spam & promotions folders":
                "Провери папките за спам и промоции",
            "Check with your mail provider":
                "Уведомете доставчика ви на ел. поща",
            Choose: "Избери",
            "Choose a different plan": "Избеи различен план",
            "Choose your newsletters": "Избери твоят бюлетин",
            "Click here to retry": "Щракнете за нов опит",
            Close: "Затвори",
            Comments: "Коментари",
            Complimentary: "Подарък",
            Confirm: "Потвърди",
            "Confirm cancellation": "Потвърдете прекратяването",
            "Confirm subscription": "Потвърдете абонамента",
            "Contact support": "Връзка с поддръжката",
            Continue: "Продължи",
            "Continue subscription": "Продължете абонамента",
            "Could not sign in. Login link expired.":
                "Не можете да влезете. Връзката за вход е изветряла.",
            "Could not update email! Invalid link.":
                "Не успяхме да обновим имейла! Невалиден линк.",
            "Create a new contact": "Създайте нов контакт",
            "Current plan": "Текущ план",
            "Delete account": "Изтрий профил",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Нямахте това предвид? Управлявайте предпочитанията си <button>тук</button>.",
            "Don't have an account?": "Нямате личен профил?",
            Edit: "Редакция",
            Email: "Имейл адрес",
            "Email newsletter": "Имейл бюлетин",
            "Email preference updated.": "Имейл настройките са обновени.",
            "Email preferences": "Имейл настройки ",
            Emails: "Имейли",
            "Emails disabled": "Писмата са преустновени",
            "Ends {{offerEndDate}}": "До {{offerEndDate}}",
            Error: "Грешка",
            "Expires {{expiryDate}}": "Изтича {{expiryDate}}",
            Forever: "Завинаги",
            "Free Trial – Ends {{trialEnd}}":
                "Безплатен тест – до {{trialEnd}}",
            "Get help": "Получете помощ",
            "Get in touch for help": "Свържете се за помощ",
            "Get notified when someone replies to your comment":
                "Бъдете уведомявани, ако някой отговори на Ваш коментар",
            "Give feedback on this post": "Вашият отзив за публикацията",
            "Help! I'm not receiving emails": "Помощ! Не получавам имейли",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Ако даден информационен бюлетин бъде отбелязан като спам, имейлите за този адрес се деактивират автоматично, за да е сигурно, че няма да получавате нежелани съобщения.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Ако оплакването за спам е било случайно или искате отново да започнете да получавате имейли, можете да активирате това, като кликнете върху бутона на предишния екран.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Ако отмените абонамента си сега, ще продължите да имате достъп до {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Ако имате корпоративен или правителствен имейл акаунт, обърнете се към ИТ отдела си и ги помолете да разрешат получаването на имейли от {{senderEmail}}.",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Ако искате отново да започнете да получавате имейли, най-добре е да проверите дали имейл адреса ви няма някакви проблеми и след това да кликнете върху повторно абониране на предишния екран.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Ако не получавате имейл бюлетина, за който сте се абонирали, ето няколко неща, които трябва да проверите",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Ако сте извършили всички тези проверки и все още не получавате имейли, можете да се свържете с поддръжката на {{supportAddress}}.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "В случай че при опит за изпращане на бюлетин се получава някакъв постоянен проблем, имейлите ще бъдат деактивирани в акаунта.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Добавете {{senderEmail}} в списъка си с контакти. Това сигнализира на вашия доставчик, че имейлите, изпратени от този адрес са надеждни.",
            "Less like this": "По-малко такива",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Уверете се, че имейлите не попадат случайно в папките Спам или Промоции на входящата ви поща. Ако това е така, щракнете върху "Не е спам" и/или "Премести във входяща поща".',
            Manage: "Управлявай",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Месечно",
            "More like this": "Повече такива",
            Name: "Име",
            "Need more help? Contact support":
                "Още имате нужда от помощ? Потърсете поддръжката",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Информационните бюлетини могат да бъдат деактивирани в профила ви по две причини: Предишен имейл е бил маркиран като спам или опитът за изпращане на имейл е довел до траен неуспех (отказ).",
            "Not receiving emails?": "Не получавате поща?",
            "Now check your email!": "Провете си пощенската кутия!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "След като се абонирате отново, ако все още не виждате имейли във входящата си поща, проверете папката за спам. Някои доставчици пазят история с предишни оплаквания за спам и ще продължат да маркират имейлите. Ако вашият случай е такъв, маркирайте последния бюлетин като 'Не е спам', за да го преместите обратно в основната си пощенска кутия.",
            "Permanent failure (bounce)": "Постоянен проблем (отскок)",
            Plan: "План",
            "Plan checkout was cancelled.": "Плащането на плана е прекъснато.",
            "Plan upgrade was cancelled.":
                "Надграждането на плана е прекъснато.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields":
                "Моля, попълнете задължителните полета",
            Price: "Цена",
            "Re-enable emails": "Позволете отново изпращането на писма",
            Recommendations: "",
            "Renews at {{price}}.": "Подновяване за {{price}}.",
            Retry: "Отново",
            Save: "Запиши",
            "Send an email and say hi!": "Изпратете имейл за здрасти!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Изпратете имейл до {{senderEmail}} за здрасти. Това също може да сигнализира на вашия доставчик на ел. поща, че на имейлите до и от този адрес може да се има доверие.",
            "Sending login link...": "Изпращане на връзка за влизане...",
            "Sending...": "Изпращане...",
            "Show all": "",
            "Sign in": "Вход",
            "Sign out": "Изход",
            "Sign up": "Регистриране",
            "Signup error: Invalid link": "Грешка при влизане: Невалиден линк",
            "Sorry, that didn’t work.": "Жалко, така не става.",
            "Spam complaints": "Оплаквания от спам",
            "Start {{amount}}-day free trial":
                "Започване на {{amount}}-дневен безплатен достъп.",
            "Starting {{startDate}}": "Започва на {{startDate}}",
            "Starting today": "Стартира днес",
            "Submit feedback": "Изпрати отзив",
            Subscribe: "Абонамент",
            Subscribed: "Абониран",
            Success: "Чудесно",
            "Success! Check your email for magic link to sign-in.":
                "Чудесно! Проверете имейла си за вашия магически линк за влизане.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Чудесно! Вашият акаунт е активиран и вече имате достъп до цялото съдържание.",
            "Success! Your email is updated.":
                "Чудесно! Вашият имейл е актуализиран.",
            "Successfully unsubscribed": "Успешно разабониране",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Благодарим за изпратеният отзив!",
            "That didn't go to plan":
                "Нещо се обърка и не се случи както трябваше",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "Имейлът, който имаме за вас, е {{memberEmail}} - ако не е верен, можете да го актуализирате в областта за <button>настройки на профила си</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Имаше проблем при изпращането на обратната връзка. Моля, опитайте отново малко по-късно.",
            "This site is invite-only, contact the owner for access.":
                "Сайтът е само с покани. Свържете се със собственика за да получите достъп.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "За да прикючите вашата регистрация беше изпратена връзка за влизане към пощенската Ви кутия. Ако писмото не пристигне до 3 минути, провете дали не е категоризирана като нежелано писмо.",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Тествайте безплатно за {{amount}} дни, след това {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Отключете достъпа до всички бюлетини, като станете платен абонат.",
            "Unsubscribe from all emails":
                "Прекрати изпращането на всякакви писма",
            Unsubscribed: "Неабониран",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Спирането на изпращането на писма, няма да ти прекрати абонамента и регистрацията в {{title}}",
            Update: "Обнови",
            "Update your preferences": "Обнови твоите предпочитания/настройки",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Проверете дали имейл адресът ви е верен",
            "View plans": "Вижте плановете",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Този пощенски адрес който опитвате да разабонирате, изглежда невалиден. Моля, свържете се със собственика на сайта.",
            "Welcome back, {{name}}!": "Добре дошли отново, {{name}}!",
            "Welcome back!": "Добре дошли отново!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Когато дадена пощенска кутия не успее да приеме даден имейл, това обикновено се нарича отказ. В много случаи това е временно. В някои случаи обаче, имейлът може да се отхвърля постоянно, например когато имейл адресът е невалиден или не съществува.",
            "Why has my email been disabled?": "Защо имейлът ми е деактивиран?",
            Yearly: "Годишно",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "В момента имате безплатно членство, преминете към платен абонамент за пълен достъп.",
            "You have been successfully resubscribed":
                "Успешно беше подновен абонаментът",
            "You're currently not receiving emails":
                "Понастоящем не получавате имейли",
            "You're not receiving emails": "Не получавате имейли",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Не получавате писма защото или пощенският адрес е невалиден, или писмата се класифицират като нежелана поща.",
            "You've successfully signed in.": "Влязохте успешно.",
            "You've successfully subscribed to": "",
            "Your account": "Твоят профил",
            "Your input helps shape what gets published.":
                "Вашият принос помага да се оформи това, което се публикува.",
            "Your subscription will expire on {{expiryDate}}":
                "Абонаментът ви ще изтече на {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Абонаментът ви ще се поднови на {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Абонаментът ви ще започне на {{subscriptionStart}}",
        },
        s1 = {
            "{{amount}} days free": "{{amount}} dies gratuïts",
            "{{amount}} off": "{{amount}} de descompte",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} de descompte pels primers {{number}} mesos",
            "{{amount}} off for first {{period}}.":
                "{{amount}} de descompte pels primers {{period}}.",
            "{{amount}} off forever.": "{{amount}} de descompte per sempre.",
            "{{discount}}% discount": "{{discount}}% de descompte",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} ja no rebràs cap butlletí de {{newsletterName}}.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} no rebrà cap correu electrònic quan algú respongui els teus comentaris.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} ja no rebrà aquest butlletí.",
            "{{trialDays}} days free": "{{trialDays}} dies de franc",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "S'ha enviat un enllaç d'inici de sessió al teu correu electrònic. Si no t'arriba en 3 minuts, reivsa la teva carpeta de correu brossa.",
            Account: "Compte",
            "Account settings": "Configuració del compte",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Després que finalitzi el període de prova gratuït, se't cobrarà el preu regular del nivell que hagis triat. Sempre pots cancel·lar abans d'això.",
            "Already a member?": "Ja ets membre?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Un error inesperat ha passat. Si us plau, torneu a provar o <a>contacti amb suport tècnic</a> si l'error persisteix.",
            Back: "Tornar enrere",
            "Back to Log in": "Tornar al inici de sessió",
            "Billing info": "Dades de facturació",
            "Black Friday": "Divendres negre",
            "Cancel anytime.": "Cancel·la en qualsevol moment.",
            "Cancel subscription": "Cancel·la la subscripció",
            "Cancellation reason": "Motiu de la cancel·lació",
            Change: "Canvia",
            "Check spam & promotions folders":
                "Comproveu les carpetes de correu brossa i promocions",
            "Check with your mail provider":
                "Consulteu amb el vostre proveïdor de correu",
            Choose: "Tria",
            "Choose a different plan": "Seleccioneu un pla diferent",
            "Choose your newsletters": "Selecciona els teus butlletins",
            "Click here to retry": "Fes clic aquí per tornar a intentar",
            Close: "Tancar",
            Comments: "Comentaris",
            Complimentary: "Complementari",
            Confirm: "Confirmar",
            "Confirm cancellation": "Confirmar cancel·lació",
            "Confirm subscription": "Confirmar subscripció",
            "Contact support": "Contactar amb suport tècnic",
            Continue: "Continuar",
            "Continue subscription": "Continuar subscripció",
            "Could not sign in. Login link expired.":
                "No s'ha pogut iniciar sessió. L'enllaç d'inici de sessió ha expirat.",
            "Could not update email! Invalid link.":
                "No s'ha pogut actualitzar el correu electrònic! Enllaç no vàlid.",
            "Create a new contact": "Crear un nou contacte",
            "Current plan": "Pla actual",
            "Delete account": "Esborra compte",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "No volia fer això? Gestioneu les vostres preferències <button>aquí</button>.",
            "Don't have an account?": "No tens un compte?",
            Edit: "Editar",
            Email: "Correu electrònic",
            "Email newsletter": "Butlletí informatiu per correu electrònic",
            "Email preference updated.":
                "Preferència del correu electrònic actualitzada",
            "Email preferences": "Preferència del correu electrònic",
            Emails: "Correus electrònics",
            "Emails disabled": "Correus electrònics desactivats",
            "Ends {{offerEndDate}}": "Finalitza el {{offerEndDate}}",
            Error: "Error",
            "Expires {{expiryDate}}": "Expira el {{expiryDate}}",
            Forever: "per sempre",
            "Free Trial – Ends {{trialEnd}}":
                "Prova gratuita - Finalitza el {{trialEnd}}",
            "Get help": "Demanar ajuda",
            "Get in touch for help": "Poseu-vos en contacte per obtenir ajuda",
            "Get notified when someone replies to your comment":
                "Rep notificacions quan algú et respongui al teu comentari",
            "Give feedback on this post":
                "Enviar comentaris sobre aquesta publicació",
            "Help! I'm not receiving emails":
                "Ajuda! No rebo correus electrònics",
            "Here are a few other sites you may enjoy.":
                "Aquí teniu alguns altres llocs que us poden agradar.",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Si un butlletí es marca com a correu brossa, els correus electrònics es desactivaran automàticament per a aquesta adreça per assegurar-vos que ja no rebeu cap missatge no desitjat.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Si la queixa de correu brossa va ser accidental, o si voleu començar a rebre correus electrònics de nou, podeu tornar a subscriure's als correus electrònics fent clic al botó de la pantalla anterior.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Si cancel·leu la vostra subscripció ara, continuareu tenint accés fins al {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Si teniu un compte de correu electrònic corporatiu o governamental, poseu-vos en contacte amb el vostre departament de TI i demaneu-los que permetin rebre correus electrònics de {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Si voleu començar a rebre correus electrònics de nou, els millors passos següents són comprovar si hi ha cap problema a la vostra adreça de correu electrònic al fitxer i, a continuació, feu clic a tornar a subscriure's a la pantalla anterior.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Si no rebeu el butlletí electrònic al qual us heu subscrit, aquí teniu algunes coses per comprovar.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Si heu completat totes aquestes comprovacions i encara no rebeu correus electrònics, podeu contactar amb {{supportAddress}} per obtenir assistència.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "En cas que es rebi un error permanent en intentar enviar un butlletí, els correus electrònics es desactivaran al compte.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Afegiu {{senderEmail}} al vostre client de correu electrònic a la vostra llista de contactes. Això indica al vostre proveïdor de correu que els correus electrònics enviats des d'aquesta adreça haurien de ser de confiança.",
            "Less like this": "Menys com aquesta",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': `Assegureu-vos que els correus electrònics no acabin accidentalment a les carpetes Correu brossa o Promocions de la vostra safata d'entrada. Si ho són, feu clic a "Marca com a correu brossa" i/o a "Mou a la safata d'entrada".`,
            Manage: "Gestionar",
            "Maybe later": "Potser més tard",
            "Memberships unavailable, contact the owner for access.":
                "Membres no disponibles, poseu-vos en contacte amb el propietari per accedir-hi.",
            Monthly: "Mensual",
            "More like this": "Més com aquesta",
            Name: "Nom",
            "Need more help? Contact support":
                "Necessites més ajuda? Contacte de suport",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Els butlletins de notícies es poden desactivar al vostre compte per dos motius: un correu electrònic anterior s'ha marcat com a correu brossa o si s'ha intentat enviar un correu electrònic ha provocat un error permanent (rebot).",
            "Not receiving emails?": "No reps els correus electrònics?",
            "Now check your email!": "Revisar ara el teu correu electrònic!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": `Un cop us torneu a subscriure, si encara no veieu correus electrònics a la vostra safata d'entrada, comproveu la vostra carpeta de correu brossa. Alguns proveïdors de safates d'entrada mantenen un registre de les queixes de correu brossa anteriors i continuaran marcant els correus electrònics. Si això passa, marqueu el darrer butlletí com a "No és correu brossa". ' per tornar-lo a moure a la safata d'entrada principal.`,
            "Permanent failure (bounce)": "Falla permanent (rebot)",
            Plan: "Pla",
            "Plan checkout was cancelled.":
                "S'ha cancel·lat el pagament del pla.",
            "Plan upgrade was cancelled.":
                "S'ha cancel·lat l'actualització del pla.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "Poseu-vos en contacte amb {{supportAddress}} per ajustar la vostra subscripció gratuïta.",
            "Please fill in required fields":
                "Si us plau, ompliu els camps obligatoris",
            Price: "Preu",
            "Re-enable emails": "Torna a activar els correus electrònics",
            Recommendations: "Recomanacions",
            "Renews at {{price}}.": "Es renova a {{price}}",
            Retry: "Torna-ho a provar",
            Save: "Desa",
            "Send an email and say hi!": "Envia un correu electrònic i saluda!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Envieu un correu electrònic a {{senderEmail}} i saludeu. Això també pot ajudar a indicar al vostre proveïdor de correu que els correus electrònics d'anada i des d'aquesta adreça haurien de ser de confiança.",
            "Sending login link...": "Enviant enllaç d'inici de sessió...",
            "Sending...": "Enviant",
            "Show all": "Mostrar tots",
            "Sign in": "Inici de sessió",
            "Sign out": "Finalitza la sessió",
            "Sign up": "Registrar-se",
            "Signup error: Invalid link": "Error de registre: Enllaç no vàlid",
            "Sorry, that didn’t work.": "Em sap greu, pero no ha funcionat.",
            "Spam complaints": "Queixes de correu brossa",
            "Start {{amount}}-day free trial":
                "Comença el període de proves de {{amount}} dies",
            "Starting {{startDate}}": "A partir de {{startDate}}",
            "Starting today": "Comença avui",
            "Submit feedback": "Enviar comentaris",
            Subscribe: "Subscriu-te",
            Subscribed: "Subscrit",
            Success: "Amb èxit",
            "Success! Check your email for magic link to sign-in.":
                "Amb èxit! Comproveu el vostre correu electrònic per trobar l'enllaç màgic per iniciar la sessió.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Amb èxit! El vostre compte està totalment activat, ara teniu accés a tot el contingut.",
            "Success! Your email is updated.":
                "Amb èxit! El teu correu electrònic està actualitzat.",
            "Successfully unsubscribed": "T'has donat de baixa correctament",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "Gràcies per subscriure't. Abans de començar a llegir, a continuació es mostren alguns altres llocs que us poden agradar.",
            "Thanks for the feedback!": "Gràcies pels teus comentaris!",
            "That didn't go to plan": "Això no ha anat com estava previst",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "'adreça electrònica que tenim per a vostè és {{memberEmail}}; si no és correcta, podeu actualitzar-la a l'<button>àrea de configuració del vostre compte</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Hi ha hagut un problema en enviar els vostres comentaris. Torneu-ho a provar una mica més tard.",
            "This site is invite-only, contact the owner for access.":
                "Aquest llog és només per invitació, contacta amb el propietari per obtenir accés.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Per completar el registre, fes clic sobre l'enllaç de confirmació al teu correu electrònic. Si no t'arria en 3 minuts, revisa la teva carpeta de correu brossa!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Prova gratis durant {{amount}} dies i després {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Desbloqueja l'accés a tots els butlletins de notícies fent-te un subscriptor de pagament.",
            "Unsubscribe from all emails":
                "Cancel·la les subscripcions a tots els correus electrònics",
            Unsubscribed: "S'ha cancel·lat la subscripció",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Cancel·lar la subscripció al teu correu electrònic no cancel·larà la teva subscripció de pagament a {{title}}",
            Update: "Actualitza",
            "Update your preferences": "Actualitza les preferències",
            "Verification link sent, check your inbox":
                "Enllaç de verificació enviat, comproveu la vostra safata d'entrada",
            "Verify your email address is correct":
                "Verifica que la teva adreça de correu electrònic és correcta",
            "View plans": "Mostrar plans",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "No hem pogut cancel·lar la teva subscripció ja que no s'ha trobar la direcció de correu electrònic. Si us plau, contacta amb el propietari del lloc web.",
            "Welcome back, {{name}}!": "Benvingut/da de nou, {{name}}!",
            "Welcome back!": "Benvingut/da de nou!",
            "Welcome to {{siteTitle}}": "Benvingut/da {{siteTitle}}",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Quan una safata d'entrada no accepta un correu electrònic s'anomena habitualment un rebot. En molts casos, això pot ser temporal. Tanmateix, en alguns casos, un correu electrònic rebutjat es pot retornar com a error permanent quan una adreça de correu electrònic no és vàlida o no és vàlida. existent.",
            "Why has my email been disabled?":
                "Per què s'ha desactivat el meu correu electrònic?",
            Yearly: "Anual",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Actualment teniu una subscripció gratuïta, actualitzeu a una subscripció de pagament per accedir-hi.",
            "You have been successfully resubscribed":
                "T'has tornat a subscribir amb èxit",
            "You're currently not receiving emails":
                "Actualment no rebeu correus electrònics",
            "You're not receiving emails":
                "No estàs rebent correus electrònics",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "No estas reben correus electrònics perquè has marcat recentment com SPAM o perque no s'han pogut entregar els missatges a la direcció de correu electrònic proporcionada.",
            "You've successfully signed in.":
                "Heu iniciat la sessió correctament.",
            "You've successfully subscribed to":
                "Us heu subscrit correctament a",
            "Your account": "El teu copte",
            "Your input helps shape what gets published.":
                "La teva opinió ajuda a definir el que es publica.",
            "Your subscription will expire on {{expiryDate}}":
                "La vostra subscripció caducarà el {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "La vostra subscripció es renovarà el {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "La vostra subscripció començarà el {{subscriptionStart}}",
        },
        l1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "{{discount}}% sleva",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "{{trialDays}} dní zdarma",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Odkaz pro přihlášení byl odeslán do vaší e-mailové schránky. Pokud nepřijde do 3 minut, zkontrolujte prosím svou složku nevyžádaných zpráv (spam).",
            Account: "Účet",
            "Account settings": "Nastavení účtu",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Po skončení zkušební doby vám bude účtována běžná cena pro vybranou úroveň. Vždy můžete předtím zrušit odběr.",
            "Already a member?": "Již jste členem?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Zpět",
            "Back to Log in": "Zpět na přihlášení",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "Zrušit odběr",
            "Cancellation reason": "Důvod zrušení",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "Vybrat jiný plán",
            "Choose your newsletters": "Vyberte si newsletter",
            "Click here to retry": "",
            Close: "Zavřít",
            Comments: "Komentáře",
            Complimentary: "",
            Confirm: "Potvrdit",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "Pokračovat",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "Smazat účet",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "Nemáte účet?",
            Edit: "",
            Email: "E-mail",
            "Email newsletter": "",
            "Email preference updated.":
                "Předvolby e-mailu byly aktualizovány.",
            "Email preferences": "Předvolby e-mailu",
            Emails: "E-maily",
            "Emails disabled": "E-maily vypnuty",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Získat pomoc",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment":
                "Dostávat upozornění, když někdo odpoví na váš komentář",
            "Give feedback on this post":
                "Dát zpětnou vazbu k tomuto příspěvku",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Méně podobných",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Spravovat",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Měsíčně",
            "More like this": "Víc podobných",
            Name: "Jméno",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Nepřicházejí vám e-maily?",
            "Now check your email!": "Zkontrolujte svou e-mailovou schránku!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Cena",
            "Re-enable emails": "Znovu povolit e-maily",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Zkusit znovu",
            Save: "Uložit",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Odesílání přihlašovacího odkazu...",
            "Sending...": "Odesílání...",
            "Show all": "",
            "Sign in": "Přihlásit se",
            "Sign out": "",
            "Sign up": "Registrovat se",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "Začít {{amount}}denní zkušební verzi zdarma",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Odeslat zpětnou vazbu",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Úspěšné odhlášení",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Děkujeme za zpětnou vazbu!",
            "That didn't go to plan": "Něco se nepovedlo",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "Tento web je pouze pro pozvané, kontaktujte provozovatele pro přístup.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Pro dokončení registrace klikněte na potvrzovací odkaz ve vaší e-mailové schránce. Pokud nepřijde do 3 minut, zkontrolujte prosím složku nevyžádaných zpráv (spam)!",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails": "Odhlásit se od všech e-mailů",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Odhlášení ze newsletterů nezruší váš placený odběr {{title}}",
            Update: "",
            "Update your preferences": "Aktualizovat předvolby",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Nemohli jsme vás odhlásit, protože e-mailová adresa nebyla nalezena. Kontaktujte prosím provozovatele webu.",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Ročně",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed":
                "Úspěšně jste se opět přihlásili k odběru",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Nepřicházejí vám e-maily, protože jste buď označili nedávnou zprávu jako spam, nebo doručování zpráv na vámi zadaný e-mail nefunguje.",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "Váš účet",
            "Your input helps shape what gets published.":
                "Vaše připomínky pomáhají spoluvytvářet obsah webu.",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        c1 = {
            "{{amount}} days free": "{{amount}} dage gratis",
            "{{amount}} off": "{{amount}} rabat",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} rabat for de første {{number}} måneder.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} rabat for den/det første {{period}}.",
            "{{amount}} off forever.": "{{amount}} rabat for evigt",
            "{{discount}}% discount": "{{discount}}% rabat",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} vil ikke længere modtage {{newsletterName}} nyhedsbrev.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} vil ikke længere modtage e-mails når nogen svarer på dine kommentarer.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} vil ikke længere modtage dette nyhedsbrev.",
            "{{trialDays}} days free": "{{trialDays}} dage gratis",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Der er blevet sendt en link til din email, du kan bruge til at logge ind med. Hvis det ikke kommer frem indenfor 3 minutter, så tjek din spam mappe.",
            Account: "Konto",
            "Account settings": "Kontoindstillinger",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Når din gratis prøveperiode udløber, vil du blive opkrævet den normale pris for det abonnement du har valgt. Du kan selvfølgelig altid annullere dit abonnement inden.",
            "Already a member?": "Er du allerede medlem?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Der opstod en uventet fejl. Prøv venligst igen eller <a>kontakt support</a> hvis fejlen fortsætter.",
            Back: "Tilbage",
            "Back to Log in": "Tilbage til log ind",
            "Billing info": "Faktureringsoplysninger",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Annuller når som helst.",
            "Cancel subscription": "Annuller abonnement",
            "Cancellation reason": "Årsag til annullering",
            Change: "Skift",
            "Check spam & promotions folders": "Tjek spam og kampagner mapper",
            "Check with your mail provider": "Tjek med din e-mailudbyder",
            Choose: "Vælg",
            "Choose a different plan": "Vælg et andet abonnement",
            "Choose your newsletters": "Hvilke nyhedsbreve ønsker du",
            "Click here to retry": "Klik her for at prøve igen",
            Close: "Luk",
            Comments: "Kommentarer",
            Complimentary: "Gratis",
            Confirm: "Bekræft",
            "Confirm cancellation": "Bekræft annullering",
            "Confirm subscription": "Bekræft abonnement",
            "Contact support": "Kontakt support",
            Continue: "Fortsæt",
            "Continue subscription": "Fortsæt tilmelding",
            "Could not sign in. Login link expired.":
                "Kunne ikke log ind. Log ind link udløbet.",
            "Could not update email! Invalid link.":
                "Kunne ikke opdatere e-mail! Ugyldigt link.",
            "Create a new contact": "Opret ny kontakt",
            "Current plan": "Nuværende abonnement",
            "Delete account": "Slet konto",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Var det ikke dette du ønskede at gøre? Administrer dine præferencer <button>her</button>.",
            "Don't have an account?": "Har du ikke en konto?",
            Edit: "Rediger",
            Email: "E-mail",
            "Email newsletter": "E-mail nyhedsbrev",
            "Email preference updated.": "E-mail præferencer blev opdateret.",
            "Email preferences": "E-mail præferencer",
            Emails: "E-mails",
            "Emails disabled": "E-mails deaktiveret",
            "Ends {{offerEndDate}}": "Udløber {{offerEndDate}}",
            Error: "Fejl",
            "Expires {{expiryDate}}": "Udløber {{expiryDate}}",
            Forever: "For evigt",
            "Free Trial – Ends {{trialEnd}}":
                "Gratis prøveperiode - Udløber {{trialEnd}}",
            "Get help": "Få hjælp",
            "Get in touch for help": "Tag kontakt for at få hjælp",
            "Get notified when someone replies to your comment":
                "Bliv notificeret når nogen svarer på din kommentar",
            "Give feedback on this post": "Giv feedback til dette indlæg",
            "Help! I'm not receiving emails":
                "Hjælp! Jeg modtager ikke e-mails",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Hvis et nyhedsbrev er markeret som spam, deaktiveres e-mails automatisk for den adresse så du ikke længere modtage uønskede beskeder.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Hvis spamklagen var utilsigtet, eller du gerne vil begynde at modtage e-mails igen, kan du abonnere igen på e-mails ved at klikke på knappen på det forrige skærmbillede.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Hvis du annullere dit abonnement nu, vil du fortsat have adgang indtil {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Hvis du har en virksomheds- eller statslig e-mailkonto, skal du kontakte din it-afdeling og bede dem om at tillade, at e-mails modtages fra {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Hvis du gerne vil begynde at modtage e-mails igen, er de bedste næste trin at tjekke din registreret e-mailadresse for eventuelle problemer og derefter klikke på gentilmeld på den forrige skærmbillede.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Hvis du ikke modtager det e-mailnyhedsbrev, du har tilmeldt dig, er der et par ting, du skal tjekke.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Hvis du har gennemført alle disse checks, og du stadig ikke modtager e-mails, kan du kontakte {{supportAddress}} for at få hjælp.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "I tilfælde af, at der modtages en permanent fejl ved forsøg på at sende et nyhedsbrev, vil e-mails blive deaktiveret på kontoen.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Tilføj {{senderEmail}} til din kontaktliste i din e-mailklient. Dette signalerer til din e-mailudbyder, at e-mails sendt fra denne adresse skal være tillid til.",
            "Less like this": "Mindre af dette",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Sørg for, at e-mails ikke ender i Spam eller Kampagner mapper i din indbakke. Hvis de gør, skal du klikke på "Markér som ikke spam" og/eller "Flyt til indbakke".',
            Manage: "Administrer",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Månedlig",
            "More like this": "Mere af dette",
            Name: "Navn",
            "Need more help? Contact support":
                "Brug for hjælp? Kontakt support",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Nyhedsbreve kan deaktiveres på din konto af to årsager: En tidligere e-mail blev markeret som spam, eller forsøg på at sende en e-mail resulterede i en permanent fejl (bounce).",
            "Not receiving emails?": "Modtager du ikke e-mails?",
            "Now check your email!": "Tjek din e-mail!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Når du har tilmeldt dig igen, hvis du stadig ikke kan se e-mails i din indbakke, skal du tjekke din spam-mappe. Nogle e-mailudbydere registrerer tidligere spam-klager og vil blive ved med at markere e-mails. Hvis dette sker, skal du markere det seneste nyhedsbrev som 'Ikke spam' for at flytte det tilbage til din primære indbakke.",
            "Permanent failure (bounce)": "Permanent fejl (bounce)",
            Plan: "Abonnement",
            "Plan checkout was cancelled.": "Abonnementsbetaling blev aflyst.",
            "Plan upgrade was cancelled.":
                "Opgradering af abonnement blev aflyst.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields":
                "Udfyld venligst påkrævede felter",
            Price: "Pris",
            "Re-enable emails": "Genaktiver e-mails",
            Recommendations: "",
            "Renews at {{price}}.": "Bliver fornyet til {{price}}.",
            Retry: "Prøv igen",
            Save: "Gem",
            "Send an email and say hi!": "Send en e-mail og sig hej!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Send en e-mail til {{senderEmail}} og sig hej. Dette kan også hjælpe med at signalere til din e-mailudbyder, at e-mails til og fra denne adresse skal være tillid til.",
            "Sending login link...": "Sender link til log ind",
            "Sending...": "Sender",
            "Show all": "",
            "Sign in": "Log ind",
            "Sign out": "",
            "Sign up": "Bliv medlem",
            "Signup error: Invalid link": "Tilmeldingsfejl: Ugyldigt link",
            "Sorry, that didn’t work.": "Beklager, det virkede ikke.",
            "Spam complaints": "Spam klager",
            "Start {{amount}}-day free trial":
                "Start {{amount}}-dages gratis prøveperiode",
            "Starting {{startDate}}": "Fra {{startDate}}",
            "Starting today": "Fra i dag",
            "Submit feedback": "Send feedback",
            Subscribe: "Tilmeld",
            Subscribed: "Tilmeldt",
            Success: "Succes",
            "Success! Check your email for magic link to sign-in.":
                "Sådan! Tjek din indbakke for et magisk link til at logge ind.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Sådan! Din konto er fuldt aktiveret, du har nu adgang til alt indhold.",
            "Success! Your email is updated.":
                "Sådan! Din e-mail er opdateret.",
            "Successfully unsubscribed": "Du er nu afmeldt",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Tak for din feedback!",
            "That didn't go to plan": "Det gik ikke helt efter planen",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "Den e-mailadresse, vi har på dig, er {{memberEmail}} – hvis det ikke er korrekt, kan du opdatere den i dit <button>kontoindstillingsområde</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Der opstod et problem med at sende din feedback. Prøv venligst igen lidt senere.",
            "This site is invite-only, contact the owner for access.":
                "Denne sider kræver at du skal være inviteret. Kontakt ejeres for at få adgang.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "For at gennemføre oprettelsen af din konto, skal du klikke på bekræftelseslinket i din e-mail indbakke. Hvis det ikke kommer indenfor 3 minutter, så tjek venligst din spam mappe!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Prøv gratis i {{amount}} dage, derefter {{original Price}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Lås op for adgang til alle nyhedsbreve ved at blive en betalingsabonnent.",
            "Unsubscribe from all emails": "Afmeld alle e-mails",
            Unsubscribed: "Afmeldt",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Du annullerer ikke dit abonnement på {{title}} ved at afmelde dig fra alle e-mails",
            Update: "Opdater",
            "Update your preferences": "Opdater dine præferencer",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Tjek om din e-mailadresse er korrekt",
            "View plans": "Se abonnementer",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Vi kunne ikke afmelde dig, da e-mailen ikke blev fundet. Kontakt venligst ejeren af siden.",
            "Welcome back, {{name}}!": "Velkommen tilbage, {{name}}!",
            "Welcome back!": "Velkommen tilbage!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Når en indbakke ikke accepterer en e-mail, kaldes det almindeligvis en bounce. I mange tilfælde kan dette være midlertidigt. Men i nogle tilfælde kan en afvist e-mail returneres som en permanent fejl, når en e-mailadresse er ugyldig eller ikke eksisterer.",
            "Why has my email been disabled?":
                "Hvorfor er min e-mail blevet deaktiveret?",
            Yearly: "Årlig",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Du har i øjeblikket et gratis medlemskab, opgrader til et betalt abonnement for fuld adgang.",
            "You have been successfully resubscribed": "Du er nu tilmeldt igen",
            "You're currently not receiving emails":
                "Du modtager ikke e-mails i øjeblikket",
            "You're not receiving emails": "Du modtager ikke e-mails",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Du modtager ikke e-mails fordi du enten har markeret en af de seneste mails som spam, eller fordi e-mails ikke kunne leveres til den oplyste e-mailadresse.",
            "You've successfully signed in.": "Du er logget ind.",
            "You've successfully subscribed to": "",
            "Your account": "Din konto",
            "Your input helps shape what gets published.":
                "Dit input hjælper med at forme det der bliver publiceret.",
            "Your subscription will expire on {{expiryDate}}":
                "Dit abonnement udløber {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Dit abonnement fornyes {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Dit abonnement starter {{subscriptionStart}}",
        },
        u1 = {
            "{{amount}} days free": "{{amount}} Tage kostenfrei",
            "{{amount}} off": "{{amount}} Rabatt",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} Rabatt für die ersten {{number}} Monate.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} Rabatt für den/das erste/n {{period}}.",
            "{{amount}} off forever.": "{{amount}} dauerhaft günstiger.",
            "{{discount}}% discount": "{{discount}}% Rabatt",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} wird den Newsletter {{newsletterName}} nicht länger erhalten.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} wird keine weiteren E-Mail-Benachrichtigungen für Kommentar-Antworten erhalten.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} wird diesen Newsletter nicht länger erhalten.",
            "{{trialDays}} days free": "{{trialDays}} Tage kostenfrei",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Ein Login-Link wurde an deine E-Mail-Adresse gesendet. Falls die E-Mail nicht innerhalb von 3 Minuten ankommt, überprüfe bitte deinen Spam-Ordner.",
            Account: "Konto",
            "Account settings": "Konto-Einstellungen",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Wenn das kostenlose Testabo endet, bezahlst du den regulären Preis für den gewählten Tarif. Du kannst dein Abonnement jederzeit kündigen.",
            "Already a member?": "Bereits Mitglied?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Ein unerwarteter Fehler ist aufgetreten. Bitte erneut versuchen oder wende dich an den <a>Support</a>, falls der Fehler weiter besteht.",
            Back: "Zurück",
            "Back to Log in": "Zurück zur Anmeldung",
            "Billing info": "Abrechnungsinformationen",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Jederzeit kündbar.",
            "Cancel subscription": "Abonnement kündigen",
            "Cancellation reason": "Kündigungsgrund",
            Change: "Ändern",
            "Check spam & promotions folders":
                "Überprüfe dein Spam- und Werbeordner",
            "Check with your mail provider":
                "Erkundige dich bei deinem E-Mail-Anbieter",
            Choose: "Auswählen",
            "Choose a different plan": "Wähle einen anderen Tarif",
            "Choose your newsletters": "Wähle deine Newsletter",
            "Click here to retry": "Hier klicken zum Wiederholen",
            Close: "Schließen",
            Comments: "Kommentare",
            Complimentary: "Kostenlos",
            Confirm: "Bestätigen",
            "Confirm cancellation": "Beendigung bestätigen",
            "Confirm subscription": "Abonnement bestätigen",
            "Contact support": "Support kontaktieren",
            Continue: "Weiter",
            "Continue subscription": "Abonnement fortführen",
            "Could not sign in. Login link expired.":
                "Anmeldung nicht möglich. Der Login-Link ist abgelaufen.",
            "Could not update email! Invalid link.":
                "E-Mail-Aktualisierung fehlgeschlagen. Link nicht gültig.",
            "Create a new contact": "Neuen Kontakt anlegen",
            "Current plan": "Aktueller Tarif",
            "Delete account": "Konto löschen",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "War das ein Versehen? Verwalte deine Einstellungen <button>hier</button>.",
            "Don't have an account?": "Noch kein Konto?",
            Edit: "Bearbeiten",
            Email: "E-Mail",
            "Email newsletter": "E-Mail-Newsletter",
            "Email preference updated.": "E-Mail-Einstellungen aktualisiert.",
            "Email preferences": "E-Mail-Einstellungen",
            Emails: "E-Mails",
            "Emails disabled": "E-Mails deaktiviert",
            "Ends {{offerEndDate}}": "Endet am {{offerEndDate}}",
            Error: "Fehler",
            "Expires {{expiryDate}}": "Läuft am {{expiryDate}} ab",
            Forever: "Für immer",
            "Free Trial – Ends {{trialEnd}}":
                "Kostenlose Testphase – endet am {{trialEnd}}",
            "Get help": "Hilfe erhalten",
            "Get in touch for help": "Kontaktiere uns für Hilfe",
            "Get notified when someone replies to your comment":
                "Erhalte eine Benachrichtigung, wenn jemand auf deinen Kommentar antwortet",
            "Give feedback on this post": "Gib Feedback zu diesem Beitrag",
            "Help! I'm not receiving emails":
                "Hilfe! Ich erhalte keine E-Mails",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Wenn ein Newsletter als Spam markiert wird, werden E-Mails für diese Adresse automatisch deaktiviert, um sicherzustellen, dass du keine unerwünschten Nachrichten mehr erhältst.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Wenn die Spam-Beschwerde versehentlich war oder du wieder E-Mails erhalten möchtest, kannst du dich durch Klicken auf den Button auf dem vorherigen Bildschirm erneut für E-Mails anmelden.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Wenn du dein Abonnement jetzt kündigst, hast du noch Zugang bis zum {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Wenn du eine Firmen- oder Regierungs-E-Mail-Adresse nutzt, wende dich an deine IT-Abteilung und bitte sie, E-Mails von {{senderEmail}} zu erlauben",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Wenn du wieder E-Mails erhalten möchtest, solltest du deine hinterlegte E-Mail-Adresse auf Probleme zu überprüfen und dann auf dem vorherigen Bildschirm auf erneut abonnieren zu klicken.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Wenn du den Newsletter, für den du dich angemeldet hast, nicht erhältst, gibt es einige Dinge, die du überprüfen kannst.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Wenn du all diese Punkte erledigt hast und immer noch keine E-Mails erhältst, kannst du Unterstützung erhalten, indem du dich an {{supportAddress}} wendest.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Im Falle eines dauerhaften Fehlers beim Versuch, einen Newsletter zu senden, werden die E-Mails auf dem Konto deaktiviert.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Füge in deinem E-Mail-Client {{senderEmail}} zu deiner Kontaktliste hinzu. Dies signalisiert deinem Mail-Anbieter, dass E-Mails von dieser Adresse vertrauenswürdig sind.",
            "Less like this": "Weniger davon",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Stelle sicher, dass E-Mails nicht unbeabsichtigt im Spam-Ordner deines Posteingangs landen. Wenn das der Fall sein sollte, klicke auf  "Kein Spam" und/oder "In den Posteingang bewegen".',
            Manage: "Verwalten",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Monatlich",
            "More like this": "Mehr davon",
            Name: "Name",
            "Need more help? Contact support":
                "Du benötigst weitere Hilfe? Kontaktiere den Support",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Newsletter können aus zwei Gründen in deinem Konto deaktiviert werden: Eine frühere E-Mail wurde als Spam markiert oder der Versuch, eine E-Mail zu senden, führte zu einem dauerhaften Fehler (Bounce).",
            "Not receiving emails?": "Keine E-Mails erhalten?",
            "Now check your email!": "Überprüfe jetzt deinen Posteingang!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                'Wenn du nach der Registrierung immer noch keine E-Mails in deinem Posteingang siehst, überprüfen deinen Spam-Ordner. Einige E-Mail-Anbieter speichern frühere Spam-Beschwerden und kennzeichnen E-Mails weiterhin. Wenn dies der Fall ist, markiere den neuesten Newsletter als "Kein Spam", um ihn wieder in deinen Posteingang zu verschieben.',
            "Permanent failure (bounce)": "Permanenter Fehler (Bounce)",
            Plan: "Tarif",
            "Plan checkout was cancelled.":
                "Der Abschluss des Tarifs wurde abgebrochen.",
            "Plan upgrade was cancelled.":
                "Das Upgrade deines Tarifs wurde abgebrochen.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields":
                "Bitte alle Pflichtfelder ausfüllen",
            Price: "Preis",
            "Re-enable emails": "E-Mails wieder aktivieren",
            Recommendations: "",
            "Renews at {{price}}.": "Wird verlängert zum Preis von {{price}}.",
            Retry: "Nochmals versuchen",
            Save: "Speichern",
            "Send an email and say hi!": "Sende eine E-Mail und sag Hi!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Schicke eine E-Mail an {{senderEmail}} und sag Hallo. Dies kann auch dazu beitragen, deinem E-Mail-Anbieter zu signalisieren, dass E-Mails an und von dieser Adresse vertrauenswürdig sind.",
            "Sending login link...": "Login-Link senden …",
            "Sending...": "Sende …",
            "Show all": "",
            "Sign in": "Einloggen",
            "Sign out": "Abmelden",
            "Sign up": "Registrieren",
            "Signup error: Invalid link":
                "Fehler bei der Registrierung: Ungültiger Link",
            "Sorry, that didn’t work.":
                "Entschuldige, das hat nicht funktioniert.",
            "Spam complaints": "Spam-Beschwerden",
            "Start {{amount}}-day free trial":
                "Starte dein {{amount}}-tägiges kostenfreies Testabo",
            "Starting {{startDate}}": "Beginnend am {{startDate}}",
            "Starting today": "Beginnt heute",
            "Submit feedback": "Feedback senden",
            Subscribe: "Abonnieren",
            Subscribed: "Abonniert",
            Success: "Erfolg",
            "Success! Check your email for magic link to sign-in.":
                "Super! Sieh in deinem Posteingang nach und klicke auf den magischen Link zum Anmelden.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Prima! Dein Konto ist nun vollständig und du hast jetzt Zugang zu allen Inhalten.",
            "Success! Your email is updated.":
                "Super! Deine E-Mail wurde erfolgreich aktualisiert.",
            "Successfully unsubscribed": "Erfolgreich abgemeldet",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Danke für das Feedback!",
            "That didn't go to plan": "Das ist nicht nach Plan verlaufen",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "Die E-Mail-Adresse, die wir von dir haben, lautet {{memberEmail}} - wenn das nicht korrekt ist, kannst du sie in deinem <button>Kontoeinstellungen</button> aktualisieren.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Bei der Übermittlung deines Feedbacks ist ein Problem aufgetreten. Bitte versuche es etwas später noch einmal.",
            "This site is invite-only, contact the owner for access.":
                "Diese Seite benötigt eine Einladung. Bitte kontaktiere den Inhaber.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Um deine Registrierung abzuschließen, klicke auf den Bestätigungslink in deinem Posteingang. Falls die E-Mail nicht innerhalb von 3 Minuten ankommt, überprüfe bitte deinen Spam-Ordner!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Kostenfreier Testzugang für {{amount}} Tage, danach {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Schalte den Zugang zu allen Newslettern frei, indem du ein zahlender Abonnent wirst.",
            "Unsubscribe from all emails": "Von allen E-Mails abmelden",
            Unsubscribed: "Abmelden",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Wenn du dich von diesen E-Mails abmeldest, wird dein bezahltes Abonnement bei {{title}} nicht automatisch gekündigt",
            Update: "Aktualisieren",
            "Update your preferences": "Aktualisiere deine Einstellungen",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Überprüfe, ob deine E-Mail-Adresse stimmt",
            "View plans": "Tarife ansehen",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Wir konnten dich nicht abmelden, da die E-Mail-Adresse nicht gefunden wurde. Bitte kontaktiere den Seitenbetreiber.",
            "Welcome back, {{name}}!": "Willkommen zurück, {{name}}!",
            "Welcome back!": "Willkommen zurück!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Wenn ein Posteingang eine E-Mail nicht annimmt, spricht man von einem Bounce. In vielen Fällen kann dies vorübergehend sein (Soft Bounce). In einigen Fällen kann eine E-Mail jedoch als dauerhafter Fehler zurückgeschickt werden, wenn eine E-Mail-Adresse ungültig oder nicht vorhanden ist (Hard Bounce).",
            "Why has my email been disabled?":
                "Warum wurde meine E-Mail deaktiviert?",
            Yearly: "Jährlich",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Du hast derzeit eine kostenlose Mitgliedschaft. Wechsele zu einem kostenpflichtigen Abonnement, um vollen Zugang zu erhalten.",
            "You have been successfully resubscribed":
                "Du wurdest erfolgreich wieder angemeldet",
            "You're currently not receiving emails":
                "Du erhältst im Moment keine E-Mails",
            "You're not receiving emails": "Du erhältst keine E-Mails",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Du erhältst keine E-Mails, da du entweder eine kürzlich empfangene Nachricht als Spam markiert hast oder weil Nachrichten nicht an deine angegebene E-Mail-Adresse zugestellt werden konnten.",
            "You've successfully signed in.":
                "Du hast dich erfolgreich angemeldet.",
            "You've successfully subscribed to": "",
            "Your account": "Dein Konto",
            "Your input helps shape what gets published.":
                "Dein Beitrag trägt dazu bei, was veröffentlicht wird.",
            "Your subscription will expire on {{expiryDate}}":
                "Dein Abonnement wird am {{expiryDate}} ablaufen.",
            "Your subscription will renew on {{renewalDate}}":
                "Dein Abonnement wird am {{renewalDate}} erneuert.",
            "Your subscription will start on {{subscriptionStart}}":
                "Dein Abonnement started am {{subscriptionStart}}.",
        },
        d1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "",
            Account: "",
            "Account settings": "",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "",
            "Already a member?": "",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "",
            "Back to Log in": "",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "",
            "Cancellation reason": "",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "",
            "Choose your newsletters": "",
            "Click here to retry": "",
            Close: "",
            Comments: "",
            Complimentary: "",
            Confirm: "",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "",
            Edit: "",
            Email: "",
            "Email newsletter": "",
            "Email preference updated.": "",
            "Email preferences": "",
            Emails: "",
            "Emails disabled": "",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment": "",
            "Give feedback on this post": "",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "",
            "More like this": "",
            Name: "",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "",
            "Now check your email!": "",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "",
            "Re-enable emails": "",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "",
            Save: "",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "",
            "Sending...": "",
            "Show all": "",
            "Sign in": "",
            "Sign out": "",
            "Sign up": "",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial": "",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "",
            "That didn't go to plan": "",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.": "",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails": "",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "",
            Update: "",
            "Update your preferences": "",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed": "",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "",
            "Your input helps shape what gets published.": "",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        m1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "{{discount}}% rabato",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "{{trialDays}} tagoj senpagaj",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Sendis ensalutan ligilon al via enirkesto. Se ĝi ne alvenas post 3 minutoj, nepre kontrolu vian trudmesaĝdosieron.",
            Account: "Konto",
            "Account settings": "Kontagordoj",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Post senpaga provo finiĝos, vi pagos la regulan prezon por la nivelo, kiun vi elektis. Vi ĉiam povas nuligi antaŭ tiam.",
            "Already a member?": "Ĉu membro jam?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Reen",
            "Back to Log in": "Reen al Ensaluto",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "Nuligu abonon",
            "Cancellation reason": "Nuliga kialo",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "Elektu alian planon",
            "Choose your newsletters": "Elektu viajn bultenojn",
            "Click here to retry": "",
            Close: "Fermu",
            Comments: "Komentoj",
            Complimentary: "",
            Confirm: "Konfirmu",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "Daŭrigu",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "Forigu konton",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "Ĉu ne havas konton?",
            Edit: "",
            Email: "Retadreso",
            "Email newsletter": "",
            "Email preference updated.": "Retpoŝta agordo ĝisdatigita.",
            "Email preferences": "Retpoŝtaj agordoj",
            Emails: "Retpoŝtoj",
            "Emails disabled": "Retpoŝtoj malŝaltitaj",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Ricevi helpon",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment":
                "Estu sciiga kiam iu respondos al via komento",
            "Give feedback on this post": "Donu komentojn pri ĉi tiu afiŝo",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Malpli tiel",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Administru",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Monate",
            "More like this": "Pli kiel ĉi tio",
            Name: "Nomo",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "",
            "Now check your email!": "Bonvolu kontroli vian retpoŝton nun!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Kosto",
            "Re-enable emails": "Reŝalti retpoŝtojn",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Reprovu",
            Save: "Konservi",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Sendanta ensaluta ligilo...",
            "Sending...": "Sendante...",
            "Show all": "",
            "Sign in": "Ensalutu",
            "Sign out": "",
            "Sign up": "Aliĝu",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "Komencu senpaga {{amount}}-taga provo",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Sendu rimarkojn",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Sukcese malabonita",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Dankon pro la rimarkoj!",
            "That didn't go to plan": "Tio ne iris laŭ la intenco",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "Ĉi tiu retejo estas nur por invitiĝuloj, kontaktu la proprietulo por alireblo.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Por kompletigi aliĝon, premu la konfirman ligilon en via enirkesto. Se ĝi ne alvenas ene de 3 minutoj, kontrolu vian trudmesaĝdosieron!",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails": "Malabonu de ĉiuj retpoŝtoj",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Malabonigi de retpoŝtoj ne nuligos vian pagitan abonon al {{title}}",
            Update: "",
            "Update your preferences": "Ĝisdatigu viajn agordojn",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Ni ne povis malaboni vin ĉar la retadreso ne estis trovita. Bonvolu kontakti la proprietulo de la retejo",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Jare",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed": "Vi sukcese reaboniĝis",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Vi ne ricevas retpoŝtojn ĉar vi aŭ markis lastatempan mesaĝon kiel trudmesaĝo, aŭ ĉar mesaĝoj ne povis liveri al via provizita retadreso.",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "Via konto",
            "Your input helps shape what gets published.":
                "Via enigo helpas formi kio estas aperigita.",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        p1 = {
            "{{amount}} days free": "{{amount}} días gratis",
            "{{amount}} off": "{{amount}} de descuento",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} de descuento por los primeros {{number}} meses.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} de descuento por los primeros {{period}}.",
            "{{amount}} off forever.": "{{amount}} de descuento para siempre.",
            "{{discount}}% discount": "{{discount}}% de descuento",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} ya no va a recibir boletines de {{newsletterName}}.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} ya no va a recibir correos electrónicos cuando alguien responde a sus comentarios.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} ya no va a recibir este boletín.",
            "{{trialDays}} days free": "{{trialDays}} días gratis",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Se ha enviado un enlace de inicio de sesión a tu correo. Si no llega en 3 minutos, revisa tu carpeta de spam.",
            Account: "Cuenta",
            "Account settings": "Configuración de la cuenta",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Después de que finalice el período de prueba gratuito, se te cobrará el precio regular del nivel que hayas elegido. Siempre puedes cancelar antes de eso.",
            "Already a member?": "¿Ya eres miembro?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Un error inesperado ha ocurrido. Por favor intente de nuevo o <a>contacte soporte técnico</a> si el error persiste.",
            Back: "Atrás",
            "Back to Log in": "Volver al inicio de sesión",
            "Billing info": "Información de pago",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Cancelación en cualquier momento.",
            "Cancel subscription": "Cancelar suscripción",
            "Cancellation reason": "Razón de cancelación",
            Change: "Cambiar",
            "Check spam & promotions folders":
                "Compruebe la carpeta de correo basura y promociones",
            "Check with your mail provider":
                "Compruebe con su proveedor de correo",
            Choose: "Elige",
            "Choose a different plan": "Elige un plan diferente",
            "Choose your newsletters": "Elige tus boletines",
            "Click here to retry": "Haga click aquí para reintentar",
            Close: "Cerrar",
            Comments: "Comentarios",
            Complimentary: "Complementario",
            Confirm: "Confirmar",
            "Confirm cancellation": "Confirmar cancelación",
            "Confirm subscription": "Confirmar suscripción",
            "Contact support": "Contacte soporte técnico",
            Continue: "Continuar",
            "Continue subscription": "Continuar suscripción",
            "Could not sign in. Login link expired.":
                "No se pudo iniciar sesión. El enlace de inicio ha expirado.",
            "Could not update email! Invalid link.":
                "¡No se pudo actualizar el correo electrónico! Enlace inválido.",
            "Create a new contact": "Crea un nuevo contacto",
            "Current plan": "Plan actual",
            "Delete account": "Eliminar cuenta",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "¿No quisiste hacer esto? Puedes gestionar tus preferencias <button>acá</button>.",
            "Don't have an account?": "¿No tienes una cuenta?",
            Edit: "Editar",
            Email: "Correo electrónico",
            "Email newsletter": "Boletín informativo por correo electrónico",
            "Email preference updated.":
                "Preferencia de correo electrónico actualizada.",
            "Email preferences": "Preferencias de correo electrónico",
            Emails: "Correos electrónicos",
            "Emails disabled": "Correos electrónicos desactivados",
            "Ends {{offerEndDate}}": "Termina el {{offerEndDate}}",
            Error: "Error",
            "Expires {{expiryDate}}": "Expira {{expiryDate}}",
            Forever: "para siempre",
            "Free Trial – Ends {{trialEnd}}":
                "Prueba gratis - Termina el {{trialEnd}}",
            "Get help": "Obtener ayuda",
            "Get in touch for help": "Póngase en contacto para obtener ayuda",
            "Get notified when someone replies to your comment":
                "Recibe notificaciones cuando alguien responda a tu comentario",
            "Give feedback on this post":
                "Envía comentarios sobre esta publicación",
            "Help! I'm not receiving emails":
                "¡Ayuda! No estoy recibiendo correos electronicos",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Si un correo es marcado como spam, los correos electrónicos son automáticamente deshabilitados para esa dirección de correo para asegurarse que usted no reciba ningún correo indeseado.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Si la denuncia de spam fue accidental, o si quiere recibir los correos electrónicos de nuevo, puede volver a suscribirse a los correos haciendo click en el botón de la pantalla anterior.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Si cancela su suscripción ahora, continuara con acceso hasta el {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Si usted tiene un correo electrónico de una corporación o del gobierno, puede comunicarse con el departamento de TI y solicitar que se le permita recibir correos de {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Si no está recibiendo los boletines informativos a los que se suscribió, estas son algunas cosas que puede revisar.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Si ha comprobado todo y aun así no esta recibiendo los correos electrónicos, puede comunicarse con soporte técnico contactando {{supportAddress}}.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "En el caso de que haya un problema al intentar enviar el boletín, los correos electrónicos van a ser desabilitados en su cuenta.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Añada {{senderEmail}} a su lista de contactos. Esto le indica a su provedor de correo electrónico que puede confiar en esta dirección de correo.",
            "Less like this": "Menos como esto",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Asegúrese de que los correos electrónicos no terminen accidentalmente en las carpetas de correo no deseado o promociones de su bandeja de entrada. Si lo son, haga clic en "Mark as not spam" y/o "Move to inbox".',
            Manage: "Administrar",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Mensual",
            "More like this": "Más como esto",
            Name: "Nombre",
            "Need more help? Contact support":
                "¿Necesitas más ayuda? Contacte soporte técnico.",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Los boletines se pueden deshabilitar en su cuenta por dos razones: Un correo electrónico anterior se marcó como correo no deseado o el intento de enviar un correo electrónico resultó en una falla permanente (bounce).",
            "Not receiving emails?": "¿No recibes correos electrónicos?",
            "Now check your email!": "¡Ahora revisa tu correo electrónico!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Una vez que se haya vuelto a suscribir, si aún no ve los correos electrónicos en su bandeja de entrada, verifique su carpeta de correo no deseado. Algunos proveedores de bandejas de entrada mantienen un registro de quejas de spam anteriores y continuarán marcando los correos electrónicos. Si esto sucede, marque el último boletín como 'No es spam' para moverlo nuevamente a su bandeja de entrada principal.",
            "Permanent failure (bounce)": "Fallo permanente (bounce)",
            Plan: "Plan",
            "Plan checkout was cancelled.": "El pago de plan fue cancelado.",
            "Plan upgrade was cancelled.":
                "La actualización de plan fue cancelado.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields":
                "Por favor llene los campos requeridos.",
            Price: "Precio",
            "Re-enable emails": "Reactivar correos electrónicos",
            Recommendations: "",
            "Renews at {{price}}.": "Se renueva en {{price}}.",
            Retry: "Reintentar",
            Save: "Guardar",
            "Send an email and say hi!":
                "¡Envía un correo electronico y saluda!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "¡Envia un correo electronico a {{senderEmail}} y saluda! Esto también puede ayudar a indicarle a su proveedor de correo que se debe confiar en los correos electrónicos hacia y desde esta dirección.",
            "Sending login link...": "Enviando enlace de inicio de sesión...",
            "Sending...": "Enviando...",
            "Show all": "",
            "Sign in": "Iniciar sesión",
            "Sign out": "Terminar sesión",
            "Sign up": "Registrarse",
            "Signup error: Invalid link": "Error de registro: Enlace inválido",
            "Sorry, that didn’t work.": "Lo siento, eso no funcionó.",
            "Spam complaints": "Quejas de spam",
            "Start {{amount}}-day free trial":
                "Comienza el período de prueba gratuito de {{amount}} días",
            "Starting {{startDate}}": "A partir de {{startDate}}",
            "Starting today": "A partir de hoy",
            "Submit feedback": "Enviar comentarios",
            Subscribe: "Suscribir",
            Subscribed: "Suscrito",
            Success: "Éxito",
            "Success! Check your email for magic link to sign-in.":
                "¡Éxito! Revise su correo electrónico para ver el enlace mágico para iniciar sesión.",
            "Success! Your account is fully activated, you now have access to all content.":
                "¡Éxito! Su cuenta está completamente activada, ahora tiene acceso a todo el contenido.",
            "Success! Your email is updated.":
                "¡Éxito! Su correo electrónico está actualizado.",
            "Successfully unsubscribed": "Te has dado de baja correctamente",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "¡Gracias por tus comentarios!",
            "That didn't go to plan": "Eso no salió según lo planeado",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "La dirección de correo electrónico que tenemos para usted es {{memberEmail}} - si eso no es correcto, puede actualizarlo en su <button> área de configuracion de la cuenta <button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Hubo un problema al enviar sus comentarios. Vuelva a intentarlo un poco más tarde.",
            "This site is invite-only, contact the owner for access.":
                "Este sitio es solo por invitación, contacta al propietario para obtener acceso.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Para completar el registro, haz clic en el enlace de confirmación en tu correo electrónico. Si no llega en 3 minutos, ¡revisa tu carpeta de spam!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Prueba gratis por {{amount}} dias, luego {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Desbloquee el acceso a todos los boletines convirtiéndose en un suscriptor pago.",
            "Unsubscribe from all emails":
                "Cancelar suscripción a todos los correos electrónicos",
            Unsubscribed: "Dado de baja",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Cancelar la suscripción a los correos electrónicos no cancelará tu suscripción de pago a {{title}}",
            Update: "Actualizar",
            "Update your preferences": "Actualiza tus preferencias",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Verifique que su dirección de correo electrónico sea correcta",
            "View plans": "Ver planes",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "No pudimos cancelar tu suscripción ya que no se encontró la dirección de correo electrónico. Por favor, contacta al propietario del sitio.",
            "Welcome back, {{name}}!": "¡Bienvenido de nuevo, {{name}}!",
            "Welcome back!": "¡Bienvenido de nuevo!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Cuando una bandeja de entrada no acepta un correo electrónico, comúnmente se le llama rebote. En muchos casos, esto puede ser temporal. Sin embargo, en algunos casos, un correo electrónico rebotado puede devolverse como una falla permanente cuando una dirección de correo electrónico no es válida o no existe.",
            "Why has my email been disabled?":
                "¿Por qué mi correo electronico ha sido desabilitado?",
            Yearly: "Anual",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Usted tiene una membresía gratuita, actualice a una suscripción paga para obtener acceso completo.",
            "You have been successfully resubscribed":
                "Te has vuelto a suscribir con éxito",
            "You're currently not receiving emails":
                "Actualmente no estás recibiendo correos electrónicos",
            "You're not receiving emails":
                "No estás recibiendo correos electrónicos",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "No estás recibiendo correos electrónicos porque marcaste un mensaje reciente como spam o porque no se pudieron entregar los mensajes a la dirección de correo electrónico proporcionada.",
            "You've successfully signed in.":
                "Has iniciado sesión correctamente.",
            "You've successfully subscribed to": "",
            "Your account": "Tu cuenta",
            "Your input helps shape what gets published.":
                "Tu opinión ayuda a definir lo que se publica.",
            "Your subscription will expire on {{expiryDate}}":
                "Su suscripción caducará el {{expiryDate}} ",
            "Your subscription will renew on {{renewalDate}}":
                "Su suscripción se renovará el {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Su suscripción comenzará el {{subscriptionStart}}",
        },
        h1 = {
            "{{amount}} days free": "{{amount}} päivää ilmaiseksi",
            "{{amount}} off": "{{amount}} pois",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} pois ensimmäisestä {{number}} kuukaudesta",
            "{{amount}} off for first {{period}}.":
                "{{amount}} pois ensimmäisestä {{period}}",
            "{{amount}} off forever.": "{{amount}} pois ikuisesti",
            "{{discount}}% discount": "{{discount}}% alennus",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} ei enää jatkossa saa {{newsletterName}} uutiskirjettä.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} ei lähetetä enää jatkossa sähköpostia jos joku vastaa kommenttiisi.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} ei enää lähetetä tätä uutiskirjettä.",
            "{{trialDays}} days free": "{{trialDays}} päivää ilmaiseksi",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Kirjautumislinkki on lähetetty sähköpostiisi. Jos se ei tule 3 minuutin kuluessa, muista katsoa spam-kansiosi.",
            Account: "Oma tili",
            "Account settings": "Tilin asetukset",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Kun ilmainen kokeilusi loppuu, sinulta veloitetaan valitsemasi tilauksen kuukausimaksu. Voit aina peruuttaa tilauksesi ennen tätä.",
            "Already a member?": "Oletko jo jäsen?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Odottamaton virhe syntyi, yritäthän uudestaan tai <a>contact support</a> jos ongelma jatkuu.",
            Back: "Takaisin",
            "Back to Log in": "Takaisin kirjautumiseen",
            "Billing info": "Maksutiedot",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Peruuta milloin vain",
            "Cancel subscription": "Peruuta tilaus",
            "Cancellation reason": "Syy peruutukselle",
            Change: "Vaihda",
            "Check spam & promotions folders":
                "Katso spam & promotions kansiot",
            "Check with your mail provider": "Tarkista sähköpostitarjoajaltasi",
            Choose: "Valitse",
            "Choose a different plan": "Valitse toinen tilaus",
            "Choose your newsletters": "Valitse uutiskirjeesi",
            "Click here to retry": "Klikkaa tästä kokeillaksesi uudestaan",
            Close: "Sulje",
            Comments: "Kommentit",
            Complimentary: "Ilmainen",
            Confirm: "Vahvista",
            "Confirm cancellation": "Vahvista peruutus",
            "Confirm subscription": "Vahvista tilaus",
            "Contact support": "Ota yhteyttä tukeen",
            Continue: "Jatka",
            "Continue subscription": "Jatka tilaustasi",
            "Could not sign in. Login link expired.":
                "Kirjautuminen epäonnistui. Kirjautumislinkki on vanhentunut.",
            "Could not update email! Invalid link.":
                "Sähköpostia ei pystytty päivittämään! Linkki ei toimi.",
            "Create a new contact": "Luo uusi kontakti",
            "Current plan": "Nykyinen tilaus",
            "Delete account": "Poista tilisi",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Etkö tarkoittanut tehdä näin? Muokkaa valintojasi <button>here</button>",
            "Don't have an account?": "Eikö sinulla ole tiliä?",
            Edit: "Muokkaa",
            Email: "Sähköposti",
            "Email newsletter": "Uutiskirje sähköpostiin",
            "Email preference updated.": "Sähköpostiasetukset päivitetty",
            "Email preferences": "Sähköpostiasetukset",
            Emails: "Sähköpostit",
            "Emails disabled": "Sähköpostit pois käytöstä",
            "Ends {{offerEndDate}}": "Loppuu {{offerEndDate}}",
            Error: "Virhe",
            "Expires {{expiryDate}}": "Vanhenee {{expiryDate}}",
            Forever: "Ikuisesti",
            "Free Trial – Ends {{trialEnd}}":
                "Ilmainen kokeilu – Loppuu {{trialEnd}}",
            "Get help": "Pyydä apua",
            "Get in touch for help": "Ota yhteyttä saadaksesi apua",
            "Get notified when someone replies to your comment":
                "Saa viesti kun joku vastaa kommenttiisi",
            "Give feedback on this post": "Anna palautetta tähän postaukseen",
            "Help! I'm not receiving emails": "Apua! En saa sähköposteja",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Jos uutiskirje on merkitty spammiksi, sähköpostit tähän osoitteeseen on estetty, jotta et enää vastaanota viestejä osoitteeseen",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Jos spam-valitus oli aiheeton, tai haluaisit saada taas viestejä, voit uudelleen ilmoittautua sähköposteihin painamalla nappia edellisellä sivulla.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Jos haluat perua tilauksesi nyt, sinulla on vielä oikeus materiaaliin {{periodEnd}} asti",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Jos sinulla on yritys- tai valtion sähköposti, pyydä IT-osastoa hyväksymään sähköpostit lähettäjältä {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Jos haluat saada taas sähköposteja, paras tapa jatkaa on tarkistaa sähköpostiosoitteesi ja sitten klikata uudelleen uutiskirjeeseen osallistumista edellisellä sivulla.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Jos et saa uutiskirjettä sähköpostiisi, tässä on muutama asia tarkistettavaksi:",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Jos et vieläkään saa uutiskirjeitä, ota yhteyttä {{supportAddress}}",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Jos uutiskirjeen lähetyksessä tapahtuu pysyvä ongelma, sähköpostien lähetys keskeytetään.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Sähköpostiasetuksissasi lisää {{senderEmail}} kontakteihisi. Tämä antaa viestin sähköpostitarjoajalle, että viestit tästä osoitteesta ovat hyväksyttäviä.",
            "Less like this": "Vähemmän tämän kaltaisia",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Varmista, että sähköpostit eivät mene Spam- tai roskapostikansioihin, Jos näin käy, klikkaa "Mark as not spam" ja/tai "Move to inbox".',
            Manage: "Hallitse",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Kuukausittainen",
            "More like this": "Lisää tämän kaltaista",
            Name: "Nimi",
            "Need more help? Contact support":
                "Tarvitsetko lisää apua? Ota yhteyttä tukeen",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Uutiskirjeet sähköpostiisi voivat peruuntua kahdesta syystä: edellinen sähköposti oli merkattu spammiksi, tai sähköpostin lähetyksestä tuli bounce.",
            "Not receiving emails?": "Etkö saa sähköposteja?",
            "Now check your email!": "Nyt tarkista sähköpostisi",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Kun olet tilannut sähköpostit uudelleen ja et vieläkään saa posteja, katso ensimmäiseksi spam-kansio. Jotkut tarjoajat pitävät listaa ennen merkityistä viesteistä ja estävät niitä jatkossakin. Jos näin tapahtuu, merkitse viesti Not Spam ja siirrä se postilaatikkoosi.",
            "Permanent failure (bounce)": "Pysyvä virhe (bounce)",
            Plan: "Tilaus",
            "Plan checkout was cancelled.": "Tilauksen checkout on peruttu",
            "Plan upgrade was cancelled.": "Tilauksen korotus on peruttu",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "Täytä tarvittavat kentät",
            Price: "Hinta",
            "Re-enable emails": "Uudelleen hyväksy sähköpostit",
            Recommendations: "",
            "Renews at {{price}}.": "Tilaus päivittyy hinnalla {{price}}.",
            Retry: "Kokeile uudestaan",
            Save: "Tallenna",
            "Send an email and say hi!": "Lähetä sähköposti ja sano moi!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Lähetä sähköposti osoitteeseen {{senderEmail}} ja sano hei. Tämä viestii tarjoajalle, että osoite on hyväksytty.",
            "Sending login link...": "Lähetetään kirjautumislinkkiä...",
            "Sending...": "Lähetetään...",
            "Show all": "",
            "Sign in": "Kirjaudu sisään",
            "Sign out": "Kirjaudu ulos",
            "Sign up": "Rekisteröidy",
            "Signup error: Invalid link":
                "Virhe rekisteröinnissä: Linkki ei toimi",
            "Sorry, that didn’t work.": "Anteeksi, tämä ei onnistunut",
            "Spam complaints": "Spam-valitukset",
            "Start {{amount}}-day free trial":
                "Aloita {{amount}}-päivän kokeilu",
            "Starting {{startDate}}": "Aloitetaan {{startDate}}",
            "Starting today": "Alkaa tänään",
            "Submit feedback": "Anna palautetta",
            Subscribe: "Tilaa",
            Subscribed: "Tilaus onnistunut",
            Success: "Onnistunut",
            "Success! Check your email for magic link to sign-in.":
                "Onnistui! Katso sähköpostisi kirjautumislinkkiä varten",
            "Success! Your account is fully activated, you now have access to all content.":
                "Onnistui! Tilisi on aktivoitu ja sinulla on pääsy sisältöihin",
            "Success! Your email is updated.":
                "Onnistui! Sähköpostisi on päivitetty",
            "Successfully unsubscribed": "Tilauksen peruutus onnistui",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Kiitos palautteestasi!",
            "That didn't go to plan": "Tämä ei mennyt suunnitelmien mukaan",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Meillä oli ongelma palautteesi lähetyksen kanssa. Kokeleithan myöhemmin uudestaan.",
            "This site is invite-only, contact the owner for access.":
                "Tämä sivu on vain kutsutuille, ota yhteyttä omistajaan saadaksesi pääsyoikeuden.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Viimeistelläksesi rekisteröitymisen, klikkaa vahvistuslinkkiä sähköpostissasi. Jos sitä ei saavu 3 minuutin kuluessa, tarkista roskapostikansiosi!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Kokeile ilmaiseksi {{amount}} päivää, sen jälkeen hinta on {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Avaa pääsy kaikkiin uutiskirjeisiin maksullisella tilauksella.",
            "Unsubscribe from all emails": "Peruuta kaikki sähköpostit",
            Unsubscribed: "Tilaus peruutettu",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Sähköpostien peruuttaminen ei peruuta maksullista tilaustasi {{title}}",
            Update: "Päivitä",
            "Update your preferences": "Päivitä asetuksesi",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Vahvista sähköpostiosoitteesi oikeellisuus",
            "View plans": "Katso tilausvaihtoehtoja",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Emme voineet peruuttaa tilaustasi, koska sähköpostiosoitetta ei löytynyt. Ota yhteyttä sivuston omistajaan.",
            "Welcome back, {{name}}!": "Tervetuloa takaisin, {{name}}!",
            "Welcome back!": "Tervetuloa takaisin!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "ksissa “bounssannut” sähköposti voi kuitenkin palautua pysyvänä virheenä, kun sähköpostiosoite on virheellinen tai sitä ei ole olemassa.",
            "Why has my email been disabled?":
                "Miksi sähköpostini on poistettu käytöstä?",
            Yearly: "Vuosittainen",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Sinulla on tällä hetkellä ilmainen jäsenyys, päivitä maksulliseksi tilaukseksi saadaksesi täyden pääsyn.",
            "You have been successfully resubscribed":
                "Olet tilannut uudelleen onnistuneesti",
            "You're currently not receiving emails":
                "Et tällä hetkellä ole saamassa sähköposteja",
            "You're not receiving emails": "Et saa sähköposteja",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Et saa sähköposteja siksi, että joko merkitsit äskettäisen viestin roskapostiksi tai siksi, että viestejä ei voitu toimittaa antamaasi sähköpostiosoitteeseen.",
            "You've successfully signed in.":
                "Olet kirjautunut sisään onnistuneesti",
            "You've successfully subscribed to": "",
            "Your account": "Tilisi",
            "Your input helps shape what gets published.":
                "Antamasi palautteen avulla muokataan julkaistavaa sisältöä",
            "Your subscription will expire on {{expiryDate}}":
                "Tilauksesi päättyy {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Tilauksesi uusiutuu {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Tilauksesi alkaa {{subscriptionStart}}",
        },
        f1 = {
            "{{amount}} days free": "{{amount}} jours gratuits",
            "{{amount}} off": "{{amount}} de réduction",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} de réduction pour les {{number}} premiers mois.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} de réduction pour le/la premier/ère {{period}}.",
            "{{amount}} off forever.": "{{amount}} de réduction permanente.",
            "{{discount}}% discount": "{{discount}}% de réduction",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} ne recevra plus la newsletter {{newsletterName}}.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} ne recevra plus d'e-mails lorsque quelqu'un répond à vos commentaires.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} ne recevra plus cette newsletter.",
            "{{trialDays}} days free": "{{trialDays}} jours gratuits",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Un lien de connexion a été envoyé dans votre boîte de réception. S’il n’arrive pas dans les 3 minutes, vérifiez votre dossier spam.",
            Account: "Compte",
            "Account settings": "Paramètres du compte",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "À la fin de la période d’essai gratuite, le prix normal de l’abonnement choisi sera facturé. Vous pouvez toujours annuler d’ici là.",
            "Already a member?": "Déjà membre ?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Une erreur inattendue s'est produite. Veuillez réessayer ou <a>contacter le support</a> si l'erreur persiste.",
            Back: "Retour",
            "Back to Log in": "Retour à Connexion",
            "Billing info": "Informations sur la facturation",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Annuler à tout moment.",
            "Cancel subscription": "Annuler l’abonnement",
            "Cancellation reason": "Raison de l’annulation",
            Change: "Changer",
            "Check spam & promotions folders":
                "Vérifiez les dossiers de spam et de promotion",
            "Check with your mail provider":
                "Vérifiez auprès de votre fournisseur d'e-mail",
            Choose: "Choisir",
            "Choose a different plan": "Choisir un autre abonnement",
            "Choose your newsletters": "Choisir les newsletters",
            "Click here to retry": "Cliquez ici pour réessayer",
            Close: "Fermer",
            Comments: "Commentaires",
            Complimentary: "Offert",
            Confirm: "Confirmer",
            "Confirm cancellation": "Confirmer l'annulation",
            "Confirm subscription": "Confirmer l'abonnement",
            "Contact support": "Contacter le support",
            Continue: "Continuer",
            "Continue subscription": "Continuer l'abonnement",
            "Could not sign in. Login link expired.":
                "Impossible de se connecter. Le lien de connexion a expiré.",
            "Could not update email! Invalid link.":
                "Impossible de mettre à jour l'e-mail ! Lien invalide.",
            "Create a new contact": "Créer un nouveau contact",
            "Current plan": "Abonnement actuel",
            "Delete account": "Supprimer le compte",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Vous ne vouliez pas faire ça ? Gérez vos préférences <button>ici</button>.",
            "Don't have an account?": "Vous n’avez pas encore de compte ?",
            Edit: "Modifier",
            Email: "E-mail",
            "Email newsletter": "E-mail de la newsletter",
            "Email preference updated.": "Préférences d’e-mail mises à jour.",
            "Email preferences": "Préférences d’e-mail",
            Emails: "E-mails",
            "Emails disabled": "E-mails désactivés",
            "Ends {{offerEndDate}}": "Se termine le {{offerEndDate}}",
            Error: "Erreur",
            "Expires {{expiryDate}}": "Expire le {{expiryDate}}",
            Forever: "Permanent",
            "Free Trial – Ends {{trialEnd}}":
                "Essai gratuit - Se termine le {{trialEnd}}",
            "Get help": "Obtenir de l’aide",
            "Get in touch for help": "Contactez-nous pour obtenir de l'aide",
            "Get notified when someone replies to your comment":
                "Recevez une notification lorsque quelqu’un répond à votre commentaire",
            "Give feedback on this post": "Donnez votre avis sur cet article",
            "Help! I'm not receiving emails":
                "À l'aide ! Je ne reçois pas d'e-mails",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Si une newsletter est signalée comme étant du spam, les e-mails sont automatiquement désactivés pour cette adresse afin que vous ne receviez plus de messages indésirables.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Si le signalement spam était accidentel, ou si vous voulez de nouveau recevoir les e-mails, vous pouvez vous réinscrire aux e-mails en cliquant sur le bouton sur la page précédente.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Si vous annulez votre abonnement maintenant, vous continuerez à y avoir accès jusqu'au {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Si vous avez un compte e-mail d'entreprise ou gouvernenmental, contactez votre service informatique et demandez leur d'autoriser les e-mails provenant de {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Si vous voulez à nouveau recevoir les e-mails, la meilleure chose à faire est de vérifier votre toute erreur liée à l'adresse e-mail renseignée, puis de cliquer sur réinscription sur la page précédente.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Si vous ne recevez pas la newsletter par e-mail à laquelle vous vous êtes abonné, voici quelques points à vérifier.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Si vous avez complété toutes ces étapes et ne recevez toujours pas d'e-mails, vous pouvez nous contacter à {{supportAddress}} pour obtenir de l'aide.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Si une erreur persistante est reçue lors de la tentative d'envoi de la newsletter, les e-mails seront désactivés pour le compte.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Dans votre client de messagerie, ajoutez {{senderEmail}} à votre liste de contacts. Cela signale à votre fournisseur de messagerie que les e-mails provenant de cette adresse doivent être considérés comme dignes de confiance.",
            "Less like this": "Moins de contenu similaire",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".': `Assurez-vous que les e-mails ne finissent pas accidentellement dans le dossier Spam ou Promotions de votre boîte de réception. Si c'est le cas, cliquez sur "Marquer en tant que non-indésirable" et/ou "Déplacer vers la boîte de réception".`,
            Manage: "Gérer",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Mensuel",
            "More like this": "Plus de contenu similaire",
            Name: "Nom",
            "Need more help? Contact support":
                "Besoin d'aide? Contactez le support",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Les newsletters peuvent être désactivés pour votre compte pour deux raisons : un précédent e-mail a été marqué en tant que spam, ou une tentative d'envoi d'e-mail a résulté en une erreur persistante (renvoi).",
            "Not receiving emails?": "Vous n’avez pas reçu d’e-mails ?",
            "Now check your email!":
                "Veuillez maintenant vérifier votre boite de réception.",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Une fois réinscrit, si vous ne voyez toujours pas d'e-mails dans votre boîte de réception, vérifiez votre dossier spam. Certains fournisseurs garde en mémoire les précédents signalements spams et continue de marquer les e-mails comme tels. Si tel est le cas, marquez la dernière newsletter comme 'non-indésirable' et déplacez-là vers votre boîte de réception.",
            "Permanent failure (bounce)": "Erreur persistante (renvoi)",
            Plan: "Abonnement",
            "Plan checkout was cancelled.":
                "Le paiement de l'abonnement a été annulé.",
            "Plan upgrade was cancelled.":
                "La mise à niveau de l'abonnement a été annulée.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields":
                "Veuillez remplir les champs requis",
            Price: "Prix",
            "Re-enable emails": "Ré-activer les e-mails",
            Recommendations: "",
            "Renews at {{price}}.": "Renouvellement pour {{price}}.",
            Retry: "Réesayer",
            Save: "Sauvegarder",
            "Send an email and say hi!": "Envoyez un e-mail et dites bonjour !",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Envoyez un e-mail à {{senderEmail}} et dites bonjour ! Cela devrait également signaler à votre fournisseur de messagerie que les e-mails depuis/vers cette adresse doivent être considérés comme dignes de confiance.",
            "Sending login link...": "Envoi du lien de connexion…",
            "Sending...": "Envoi…",
            "Show all": "",
            "Sign in": "Se connecter",
            "Sign out": "Se déconnecter",
            "Sign up": "S’inscrire",
            "Signup error: Invalid link":
                "Erreur d'inscription : lien invalide",
            "Sorry, that didn’t work.": "Désolé, cela n'a pas fonctionné.",
            "Spam complaints": "Signalements pour spam",
            "Start {{amount}}-day free trial":
                "Commencer l’essai gratuit de {{amount}} jours",
            "Starting {{startDate}}": "À partir du {{startDate}}",
            "Starting today": "À partir d'aujourd'hui",
            "Submit feedback": "Envoyez votre avis",
            Subscribe: "S'abonner",
            Subscribed: "Abonné(e)",
            Success: "Succès",
            "Success! Check your email for magic link to sign-in.":
                "Succès ! Vérifiez votre boîte de réception pour le lien de connexion.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Succès ! Votre compte est entièrement activé, et vous avez désormais accès à tout le contenu.",
            "Success! Your email is updated.":
                "Succès ! Votre adresse e-mail a été mise à jour.",
            "Successfully unsubscribed": "Désabonnement réussi",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Merci pour votre avis !",
            "That didn't go to plan": "Cela n’a pas fonctionné comme prévu",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "L'adresse e-mail qui vous est associée est {{memberEmail}} — Si celle-ci est incorrecte, vous pouvez la modifier dans votre <button>espace paramètres de compte</button>",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Un problème est survenu lors de la soumission de votre commentaire. Veuillez réessayer un peu plus tard.",
            "This site is invite-only, contact the owner for access.":
                "Ce site est réservé aux invités, contactez le propriétaire pour y accéder.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Pour confirmer votre inscription, cliquez sur le lien de confirmation envoyé dans votre boite de réception. S’il ne vous parvient pas dans les 3 minutes, vérifiez votre dossier spam.",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Essayez gratuitement pendant {{amount}} jours, puis {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Débloquez l'accès à toutes les newsletters en devenant un abonné payant.",
            "Unsubscribe from all emails": "Se désinscrire de tous les e-mails",
            Unsubscribed: "Désabonné(e)",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "La désinscription des e-mails n’annulera pas votre abonnement payant à {{title}}",
            Update: "Mise à jour",
            "Update your preferences": "Mettez à jour vos préférences",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Vérifiez que votre adresse e-mail est correcte",
            "View plans": "Voir les abonnements",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "La désinscription n’a pas fonctionné car votre adresse e-mail n’a pas été trouvée. Veuillez contacter le propriétaire du site.",
            "Welcome back, {{name}}!": "Bon retour parmi nous, {{name}} !",
            "Welcome back!": "Bon retour parmi nous !",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Lorsqu'une boîte de réception n'accepte pas un e-mail, on parle communément d'un renvoi. Dans beaucoup de cas, cela peut être temporaire. Cependant, dans certains cas, un e-mail renvoyé peut être accompagné d'une erreur persistante, lorsqu'une adresse e-mail est invalide ou inexistante.",
            "Why has my email been disabled?":
                "Pourquoi mon e-mail a-t-il été désactivé ?",
            Yearly: "Annuel",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Vous avez actuellement un abonnement gratuit, passez à un abonnement payant pour un accès complet.",
            "You have been successfully resubscribed":
                "Vous avez été réinscrit avec succès",
            "You're currently not receiving emails":
                "Vous ne recevez actuellement pas d'e-mails",
            "You're not receiving emails": "Vous ne recevez pas d'e-mails",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Vous ne recevez pas d’e-mails parce que vous avez marqué un message récent comme spam, ou parce que les messages n’ont pas pu être livrés à l’adresse e-mail que vous aviez indiquée.",
            "You've successfully signed in.":
                "Vous vous êtes connecté avec succès.",
            "You've successfully subscribed to": "",
            "Your account": "Votre compte",
            "Your input helps shape what gets published.":
                "Votre avis aide à améliorer ce qui est publié.",
            "Your subscription will expire on {{expiryDate}}":
                "Votre abonnement expirera le {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Votre abonnement sera renouvelé le {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Votre abonnement débutera le {{subscriptionStart}}",
        },
        g1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "{{discount}}% popust",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "{{trialDays}} dana besplatno",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Link za prijavu je poslan na Vašu email adresu. Ako ne stigne za 3 minute provjerite spam folder.",
            Account: "Račun",
            "Account settings": "Podešavanje korisničkog računa",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Nakon što probni period istekne, izvršit će se naplata za plan koji ste izabrali. Uvijek možete otkazati pretplatu prije toga.",
            "Already a member?": "Već ste član?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Natrag",
            "Back to Log in": "Natrag na prijavu",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "Otkaži pretplatu",
            "Cancellation reason": "Razlog za otkazivanje",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "Izaberi drugi plan",
            "Choose your newsletters": "Izaberi ",
            "Click here to retry": "",
            Close: "Zatvori",
            Comments: "Komentari",
            Complimentary: "",
            Confirm: "Potvrdi",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "Nastavi",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "Obriši račun",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "Nemate račun?",
            Edit: "",
            Email: "Email",
            "Email newsletter": "",
            "Email preference updated.": "Email podešavanja su sačuvana.",
            "Email preferences": "Email podešavanja",
            Emails: "Email-ovi",
            "Emails disabled": "Isključeni email-ovi",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Potražite pomoć",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment":
                "Obavijesti me ako netko odgovori na moj komentar:",
            "Give feedback on this post": "Ostavite komentar na ovaj post",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Manje sadržaja kao što je ovaj",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Podešavanja",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Mjesečno",
            "More like this": "Više sadržaja kao što je ovaj",
            Name: "Ime",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Ne dobivate e-poštu?",
            "Now check your email!": "Provjerite Vaš email!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Cijena",
            "Re-enable emails": "Ponovo omogući email adrese",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Pokušaj opet",
            Save: "Sačuvaj",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Link za prijavu se šalje...",
            "Sending...": "Slanje...",
            "Show all": "",
            "Sign in": "Prijava",
            "Sign out": "",
            "Sign up": "Registracija",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "Počni besplatnu probu {{amount}} dana",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Pošalji povratne informacije",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Uspješna odjava",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Hvala na povratnim informacijama!",
            "That didn't go to plan": "Nešto nije kako treba",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "Ovaj sajt je samo za članove, kontaktirajte vlasnika kako biste dobili pristup.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Kliknite na link da biste završili registraciju. Ukoliko ne stigne za 3 minute provjerite spam folder!",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails": "Odjavite se sa svih email-ova",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Odjavljivanjem sa email-ova nećete prekinuti Vašu pretplatu na {{title}}",
            Update: "",
            "Update your preferences": "Izmijenite Vaše postavke",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Nismo uspjeli odjaviti email. Molimo Vas kontaktirajte vlasnika sajta.",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Godišnje",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed":
                "Uspješno ste se ponovo prijavili",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Ne primate e-poruke zato što ste nedavnu poruku označili kao nepoželjnu ili zato što se poruke nisu mogle isporučiti na adresu e-pošte koju ste naveli.",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "Vaš korisnički račun",
            "Your input helps shape what gets published.":
                "Vaš doprinos pomaže u oblikovanju onoga što se objavljuje.",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        b1 = {
            "{{amount}} days free": "{{amount}} napig ingyen",
            "{{amount}} off": "{{amount}} kedvezmény",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} kedvezmény az első {{number}} hónapig.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} kedvezmény eddig: {{period}}",
            "{{amount}} off forever.": "{{amount}} kedvezmény örökké",
            "{{discount}}% discount": "{{discount}}% kedvezmény",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "A(z) {{memberEmail}} cím már nem fogja megkapni a {{newsletterName}} hírlevelet",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "A(z) {{memberEmail}} cím már nem fog kapni email-eket ha valaki válaszol a hozzászólásaira.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "A(z) {{memberEmail}} cím már nem fogja megkapni ezt a hírlevelet",
            "{{trialDays}} days free": "{{trialDays}} nap ingyen",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "A bejelentkezéshez szükséges linket elküldtük a megadott email címre. Ha nem érkezne meg 3 percen belül, kérjük ellenőrizze a spam mappát!",
            Account: "Fiók",
            "Account settings": "Fiók beállítások",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Az ingyenes próbaidőszak lejárta után a kiválasztott csomag normál díját fogjuk felszámolni. A feliratkozás bármikor ingyenesen lemondható a próbaidőszak alatt.",
            "Already a member?": "Már van fiókja?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Egy nem várt hiba történt! Kérjük próbálkozzon újra vagy <a>lépjen kapcsolatba velünk</a> ha a hiba továbbra is fennál.",
            Back: "Vissza",
            "Back to Log in": "Vissza a bejelentkezéshez",
            "Billing info": "Számlázási információ",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Bármikor lemondható.",
            "Cancel subscription": "Feliratkozás megszűntetése",
            "Cancellation reason": "A megszűntetés oka",
            Change: "Változtat",
            "Check spam & promotions folders":
                "Kérjük ellenőrizze a spam és promóciók mappát",
            "Check with your mail provider":
                "Lépjen kapcsolatba az email szolgáltatójával",
            Choose: "Kiválaszt",
            "Choose a different plan": "Válasszon másik csomagot",
            "Choose your newsletters": "Válassza ki a hírleveleket",
            "Click here to retry": "Kattintson ide az újpróbáláshoz",
            Close: "Bezár",
            Comments: "Hozzászólások",
            Complimentary: "Ajándék",
            Confirm: "Jóváhgyás",
            "Confirm cancellation": "Lemondás megerősítése",
            "Confirm subscription": "Feliratkozás megerősítése",
            "Contact support": "Kapcsolat",
            Continue: "Folytatás",
            "Continue subscription": "Feliratkozás folytatása",
            "Could not sign in. Login link expired.":
                "A bejelentkezési link lejárt, a regisztráció sikertelen.",
            "Could not update email! Invalid link.":
                "Hibás link, az email cím változtatása sikertelen!",
            "Create a new contact": "Új kapcsolat létrehozása",
            "Current plan": "Aktuális csomag",
            "Delete account": "Fiók törlése",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Ez véletlenül történt? <button>Kattintson ide</button> a beállításokhoz",
            "Don't have an account?": "Még nincs fiókja?",
            Edit: "Szerkesztés",
            Email: "Email",
            "Email newsletter": "Hírlevél",
            "Email preference updated.": "Email beállítások elmentve",
            "Email preferences": "Email beállítások",
            Emails: "Email-ek",
            "Emails disabled": "Email-ek kikapcsolva",
            "Ends {{offerEndDate}}": "Ajánlat vége: {{offerEndDate}}",
            Error: "Hiba",
            "Expires {{expiryDate}}": "Lejárat: ",
            Forever: "Örökké",
            "Free Trial – Ends {{trialEnd}}":
                "Ingyenes próbaidőszak — Vége ekkor: {{trialEnd}}",
            "Get help": "Kérjen segítséget",
            "Get in touch for help": "Írjon nekünk",
            "Get notified when someone replies to your comment":
                "Értesítést kérek ha valaki válaszol a hozzászólásaimra",
            "Give feedback on this post": "Hogy tetszett ez a cikk?",
            "Help! I'm not receiving emails": "Segítség! Nem kapok email-eket!",
            "Here are a few other sites you may enjoy.":
                "Itt van pár website ami szintén érdekelheti.",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Ha egy hírlevél spamként van bejelölve, az e-mailek automatikusan letiltásra kerülnek az adott címre, hogy biztosan ne kapjon több nem kívánt üzenetet.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Ha a spam panasz véletlen volt, vagy újra szeretné kapni az e-maileket, akkor az előző képernyőn található gombra kattintva újra feliratkozhat az e-mailekre.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Ha most mondja le a feliratkozását, továbbra is hozzáfér eddig: {{periodEnd}}",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Ha céges vagy kormányzati email fiókja van, akkor lépjen kapcsolatba a fiók-adminisztrátorral, hogy engedélyezze az email-ek fogadását az alábbi email címről: {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "A újra szeretne email-eket kapni, kérjük ellenőrizze az email címét és kattintson az újra feliratkozásra az előző képernyőn.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Íme pár dolog amit ellenőrizhet, ha nem kap email-eket.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Ha a fenti lehetőségeket ellenőrizte és továbbra sem kap email-eket, kérjük lépjen kapcsolatba velünk az alábbi email címen: {{supportAddress}}",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Amennyiben tartós hiba lép fel egy hírlevél küldése közben, az e-mailek letiltásra kerülnek a fiókon.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Az e-mail kliensben adja hozzá {{senderEmail}}-t a kapcsolatai listához. Ez jelezni fogja az e-mail szolgáltatónak, hogy az ezen a címről érkező e-maileket megbízhatónak kell tekinteni.",
            "Less like this": "Kevesebb ilyet",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "Győződjön meg róla, hogy az e-mailek véletlenül nem kerülnek-e a Spam vagy Promóciók mappába az email fiókjában. Ha igen, kattintson a 'Nem spam' és/vagy az 'Áthelyezés a beérkezők közé' lehetőségekre.",
            Manage: "Kezelés",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.":
                "A feliratkozás nem elérhető! Kérjük lépjen kapcsolatba a tulajdonossal a hozzáférésért.",
            Monthly: "Havi",
            "More like this": "Több ilyet",
            Name: "Név",
            "Need more help? Contact support":
                "További segítségre van szüksége? Lépjen kapcsolatba velünk",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "A hírlevelek letilthatók a fiókjában két okból: egy előző e-mailt spamként jelöltek meg, vagy egy e-mail küldési kísérlet tartós hibához (visszapattanáshoz) vezetett.",
            "Not receiving emails?": "Nem érkeznek meg az email-ek?",
            "Now check your email!": "Ellenőrizze az postafiókját",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Miután újra feliratkozott, ha még mindig nem látja az e-maileket a beérkező mappájában, ellenőrizze a spam mappát. Néhány email szolgáltató nyilvántartást vezet korábbi spam panaszokról, és továbbra is megjelölheti az e-maileket. Ha ez megtörténik, a legújabb hírlevelet jelölje meg 'Nem spamként', hogy visszakerüljön a fő beérkező mappájába.",
            "Permanent failure (bounce)": "Tartós hiba (visszapattanás)",
            Plan: "Csomag",
            "Plan checkout was cancelled.":
                "A csomag fizetési folyamat megszakadt",
            "Plan upgrade was cancelled.": "A csomag frissítése megszakadt",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "Ajándék csomagok módosításáért kérjük lépjen kapcsolatba velünk az alábbi email címen: {{supportAddress}}",
            "Please fill in required fields":
                "Kérjük töltse ki az összes mezőt",
            Price: "Ár",
            "Re-enable emails": "Email-ek aktiválása",
            Recommendations: "Ajánlott oldalak",
            "Renews at {{price}}.": "Megújul {{price}} áron",
            Retry: "Újra",
            Save: "Mentés",
            "Send an email and say hi!": "Küldjön egy email-t",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Küldjön egy e-mailt a következő címre: {{senderEmail}}. Ez is segíthet jelezni az e-mail szolgáltatónak, hogy az e-maileket ezen a címen megbízhatónak kell tekinteni.",
            "Sending login link...": "Bejelenkezési link küldése...",
            "Sending...": "Küldés...",
            "Show all": "Az összes mutatása",
            "Sign in": "Bejelentkezés",
            "Sign out": "Kijelentkezés",
            "Sign up": "Regisztráció",
            "Signup error: Invalid link":
                "Regisztrációs hiba: érvénytelen link",
            "Sorry, that didn’t work.": "Sajnáljuk, ez nem működött.",
            "Spam complaints": "Spam panaszok",
            "Start {{amount}}-day free trial":
                "{{amount}} napos próbaidőszak kezdése",
            "Starting {{startDate}}": "Kezdet: {{startDate}}",
            "Starting today": "Ma kezdődik",
            "Submit feedback": "Visszajelzés küldése",
            Subscribe: "Feliratkozás",
            Subscribed: "Feliratkozva",
            Success: "Siker",
            "Success! Check your email for magic link to sign-in.":
                "Siker! Nézze meg az email-jét a bejelentkezéshez szükséges linkhez.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Siker! A fiókja teljesen aktiválva van, most már hozzáférése van az összes tartalomhoz.",
            "Success! Your email is updated.":
                "Siker! Az email-jét frissítettük.",
            "Successfully unsubscribed": "Sikeres leiratkozás",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Köszönjük a visszajelzést",
            "That didn't go to plan": "Hiba történt",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "Az Ön nálunk regisztrált e-mail címe: {{memberEmail}} — ha ez nem helyes, frissítheti a fiókbeállításoknál.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Probléma volt a visszajelzés beküldésével. Kérjük, próbálja újra kicsit később.",
            "This site is invite-only, contact the owner for access.":
                "A website csak meghívóval látogatható. Meghívóért lépjen kapcsolatba az oldal tulajdonosával!",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "A regisztráció befejezéséhez kérjük kattintson az email-ben kapott linkre. Ha a link nem érkezne meg 3 percen belül kérjük ellenőrizze a spam mappát.",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Próbálja ki ingyen {{amount}} napig, utána {{originalPrice}}",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Előfizetéssel hozzáférhet minden hírlevélhez!",
            "Unsubscribe from all emails": "Leiratkozás minden email-ről",
            Unsubscribed: "Sikeres leiratkozás",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Az email-ről történő leiratkozás nem szűnteti meg a fiókját",
            Update: "Frissítés",
            "Update your preferences": "Beállítások mentése",
            "Verification link sent, check your inbox":
                "Megerősítő link elküldve, ellenőrizze az email-jeit.",
            "Verify your email address is correct":
                "Ellenőrizze, hogy az e-mail címe helyes-e.",
            "View plans": "Csomagok megtekintése",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Ehhez az email-hez nem tartozik fiók. Kérjük lépjen kapcsolatba az oldal tulajdonosával.",
            "Welcome back, {{name}}!": "Üdvözöljük újra, {{name}}!",
            "Welcome back!": "Üdvözöljük újra!",
            "Welcome to {{siteTitle}}": "Üdvözöljük — {{siteTitle}}",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Amikor a beérkező postaláda nem fogadja el az e-mailt, azt általában visszapattanásnak nevezik. Sok esetben ez lehet ideiglenes. Azonban néhány esetben visszapattanó e-mailként térhet vissza, ha az e-mail cím érvénytelen vagy nem létező.",
            "Why has my email been disabled?":
                "Miért tiltották le az email címem?",
            Yearly: "Éves",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Jelengleg ingyenes tagsága van! Fizessen elő a teljes hozzáférésért.",
            "You have been successfully resubscribed": "Sikeres feliratkozás",
            "You're currently not receiving emails":
                "Jelengleg nem kap email-eket",
            "You're not receiving emails": "Nem kap email-eket",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Azért nem kap email-t mert vagy spam-nek jelölt egy tőlünk kapott hírlevelet, vagy azért mert a megadott email cím nem tud üzeneteket fogadni.",
            "You've successfully signed in.": "Sikeres bejelentkezés.",
            "You've successfully subscribed to": "Sikeres bejelentkezés ide: ",
            "Your account": "Fiók",
            "Your input helps shape what gets published.":
                "A visszajelzése segít abban, hogy mit publikáljunk",
            "Your subscription will expire on {{expiryDate}}":
                "Az előfizetése lejár ekkor: {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Az előfizetése megújul ekkor: {{expiryDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Az előfizetése ekkor indul: {{expiryDate}}",
        },
        y1 = {
            "{{amount}} days free": "Gratis {{amount}} hari",
            "{{amount}} off": "Diskon {{amount}}",
            "{{amount}} off for first {{number}} months.":
                "Diskon {{amount}} untuk {{number}} bulan pertama.",
            "{{amount}} off for first {{period}}.":
                "Diskon {{amount}} untuk {{period}} pertama.",
            "{{amount}} off forever.": "Diskon {{amount}} selamanya.",
            "{{discount}}% discount": "Diskon {{discount}}%",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} tidak akan menerima buletin {{newsletterName}} lagi.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} tidak akan lagi menerima email ketika seseorang membalas komentar Anda.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} tidak akan menerima buletin ini lagi.",
            "{{trialDays}} days free": "Gratis {{trialDays}} hari",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Tautan masuk telah dikirimkan ke kotak masuk Anda. Jika tidak diterima dalam waktu 3 menit, pastikan untuk memeriksa folder spam Anda.",
            Account: "Akun",
            "Account settings": "Pengaturan akun",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Setelah percobaan gratis berakhir, Anda akan dikenai biaya harga normal untuk tingkatan yang Anda pilih. Anda selalu dapat membatalkannya sebelum itu.",
            "Already a member?": "Sudah menjadi anggota?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Terjadi kesalahan tak terduga. Harap coba lagi atau <a>hubungi layanan dukungan</a> jika kesalahan tetap berlanjut.",
            Back: "Kembali",
            "Back to Log in": "Kembali ke Masuk",
            "Billing info": "Info pembayaran",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Batalkan kapan saja.",
            "Cancel subscription": "Batalkan langganan",
            "Cancellation reason": "Alasan pembatalan",
            Change: "Ubah",
            "Check spam & promotions folders": "Periksa folder spam & promosi",
            "Check with your mail provider":
                "Hubungi penyedia layanan email Anda",
            Choose: "Pilih",
            "Choose a different plan": "Pilih paket yang berbeda",
            "Choose your newsletters": "Pilih buletin Anda",
            "Click here to retry": "Klik di sini untuk mencoba lagi",
            Close: "Tutup",
            Comments: "Komentar",
            Complimentary: "Pemberian gratis",
            Confirm: "Konfirmasi",
            "Confirm cancellation": "Konfirmasi pembatalan",
            "Confirm subscription": "Konfirmasi langganan",
            "Contact support": "Hubungi layanan dukungan",
            Continue: "Lanjutkan",
            "Continue subscription": "Lanjutkan berlangganan",
            "Could not sign in. Login link expired.":
                "Tidak dapat masuk. Tautan untuk masuk telah kedaluwarsa.",
            "Could not update email! Invalid link.":
                "Tidak dapat memperbarui email! Tautan tidak valid.",
            "Create a new contact": "Buat kontak baru",
            "Current plan": "Paket saat ini",
            "Delete account": "Hapus akun",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Tidak bermaksud melakukan ini? Kelola preferensi Anda <button>di sini</button>.",
            "Don't have an account?": "Belum punya akun?",
            Edit: "Edit",
            Email: "Email",
            "Email newsletter": "Buletin email",
            "Email preference updated.": "Preferensi email diperbarui.",
            "Email preferences": "Preferensi email.",
            Emails: "Email",
            "Emails disabled": "Email dinonaktifkan",
            "Ends {{offerEndDate}}": "Berakhir {{offerEndDate}}",
            Error: "Eror",
            "Expires {{expiryDate}}": "kedaluwarsa {{expiryDate}}",
            Forever: "Selamanya",
            "Free Trial – Ends {{trialEnd}}":
                "Percobaan Gratis – Berakhir {{trialEnd}}",
            "Get help": "Dapatkan bantuan",
            "Get in touch for help": "Hubungi untuk mendapatkan bantuan",
            "Get notified when someone replies to your comment":
                "Dapatkan pemberitahuan ketika seseorang menjawab komentar Anda",
            "Give feedback on this post": "Berikan masukan pada postingan ini",
            "Help! I'm not receiving emails":
                "Tolong! Saya tidak menerima email",
            "Here are a few other sites you may enjoy.":
                "Berikut beberapa situs lain yang mungkin akan Anda nikmati.",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Jika buletin ditandai sebagai spam, email secara otomatis dinonaktifkan untuk alamat tersebut guna memastikan Anda tidak lagi menerima pesan yang tidak diinginkan.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Jika keluhan spam tersebut tidak disengaja, atau Anda ingin mulai menerima email lagi, Anda dapat berlangganan kembali untuk menerima email dengan mengklik tombol di layar sebelumnya.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Jika Anda membatalkan langganan sekarang, Anda akan tetap memiliki akses hingga {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Jika Anda memiliki akun email perusahaan atau pemerintah, hubungi departemen IT Anda dan mintalah mereka untuk mengizinkan pengiriman email dari {{senderEmail}} diterima.",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Jika Anda ingin mulai menerima email lagi, langkah-langkah terbaik selanjutnya adalah memeriksa alamat email Anda pada data yang tersimpan untuk memastikan tidak ada masalah, kemudian klik tombol 'berlangganan kembali' pada layar sebelumnya.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Jika Anda tidak menerima buletin email langganan Anda, berikut adalah beberapa hal yang perlu diperiksa.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Jika Anda telah melakukan semua pemeriksaan tersebut dan masih belum menerima email, Anda dapat menghubungi kami melalui kontak {{supportAddress}} untuk mendapatkan bantuan.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Jika terjadi kegagalan permanen saat mencoba mengirim buletin, email akan dinonaktifkan pada akun tersebut.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Pada klien email Anda, tambahkan {{senderEmail}} ke daftar kontak Anda. Hal ini akan memberikan sinyal kepada layanan email Anda bahwa email yang dikirim dari alamat ini harus dipercaya.",
            "Less like this": "Kurangi yang seperti ini",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Pastikan email tidak berakhir di kotak masuk Spam atau Promosi Anda secara tidak sengaja. Jika ya, klik "Tandai sebagai bukan spam" dan/atau "Pindahkan ke kotak masuk".',
            Manage: "Kelola",
            "Maybe later": "Mungkin nanti",
            "Memberships unavailable, contact the owner for access.":
                "Keanggotaan tidak tersedia, hubungi pemilik situs untuk mendapatkan akses.",
            Monthly: "Bulanan",
            "More like this": "Lebih banyak yang seperti ini",
            Name: "Nama",
            "Need more help? Contact support":
                "Perlu bantuan lebih lanjut? Hubungi layanan dukungan",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Buletin dapat dinonaktifkan pada akun Anda dengan dua alasan: Email sebelumnya ditandai sebagai spam, atau percobaan pengiriman email menghasilkan kegagalan permanen (bounce).",
            "Not receiving emails?": "Tidak menerima email?",
            "Now check your email!": "Sekarang periksa email Anda!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Setelah berlangganan kembali, jika Anda masih tidak melihat email di kotak masuk Anda, periksa folder spam. Beberapa penyedia layanan kotak masuk menyimpan catatan keluhan spam sebelumnya dan akan terus menandai email tersebut. Jika hal ini terjadi, tandai buletin terbaru sebagai 'Bukan spam' untuk memindahkannya kembali ke kotak masuk utama Anda.",
            "Permanent failure (bounce)": "Kegagalan permanen (bounce)",
            Plan: "Paket",
            "Plan checkout was cancelled.": "Pembayaran paket dibatalkan.",
            "Plan upgrade was cancelled.": "Peningkatan paket dibatalkan.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "Harap hubungi {{supportAddress}} untuk mengubah langganan gratis Anda.",
            "Please fill in required fields":
                "Harap isi kolom yang wajib diisi",
            Price: "Harga",
            "Re-enable emails": "Aktifkan kembali email",
            Recommendations: "Rekomendasi",
            "Renews at {{price}}.": "Perpanjang dengan harga {{price}}",
            Retry: "Coba lagi",
            Save: "Simpan",
            "Send an email and say hi!": "Kirimkan email dan ucapan hai!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Kirim email ke {{senderEmail}} dan ucapan halo. Hal ini juga dapat membantu memberi sinyal kepada penyedia layanan email Anda bahwa email yang dikirim ke dan dari alamat ini harus dipercaya.",
            "Sending login link...": "Mengirim tautan masuk...",
            "Sending...": "Mengirim...",
            "Show all": "Tampilkan semua",
            "Sign in": "Masuk",
            "Sign out": "Keluar",
            "Sign up": "Daftar",
            "Signup error: Invalid link":
                "Kesalahan pendaftaran: Tautan tidak valid",
            "Sorry, that didn’t work.": "Maaf, itu tidak berhasil.",
            "Spam complaints": "Keluhan spam",
            "Start {{amount}}-day free trial":
                "Mulai percobaan gratis selama {{amount}} hari",
            "Starting {{startDate}}": "Dimulai pada {{startDate}}.",
            "Starting today": "Dimulai hari ini",
            "Submit feedback": "Kirim masukan",
            Subscribe: "Berlangganan",
            Subscribed: "Telah berlangganan",
            Success: "Berhasil",
            "Success! Check your email for magic link to sign-in.":
                "Berhasil! Periksa email Anda untuk mendapatkan tautan ajaib untuk masuk.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Berhasil! Akun Anda telah diaktifkan sepenuhnya, sekarang Anda memiliki akses ke semua konten.",
            "Success! Your email is updated.":
                "Berhasil! Email Anda telah diperbarui.",
            "Successfully unsubscribed": "Berhasil berhenti berlangganan",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "Terima kasih telah berlangganan. Sebelum Anda mulai membaca, berikut adalah beberapa situs lain yang mungkin akan Anda nikmati.",
            "Thanks for the feedback!": "Terima kasih atas masukannya!",
            "That didn't go to plan": "Itu tidak berjalan sesuai rencana",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "Alamat email Anda yang kami miliki adalah {{memberEmail}} — jika itu tidak benar, Anda dapat memperbarui di <button>area pengaturan akun</button> Anda.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Terjadi masalah saat mengirimkan masukan Anda. Coba lagi nanti.",
            "This site is invite-only, contact the owner for access.":
                "Situs ini hanya untuk yang diundang, hubungi pemiliknya untuk mendapatkan akses.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Untuk menyelesaikan pendaftaran, klik tautan konfirmasi di kotak masuk Anda. Jika tidak diterima dalam waktu 3 menit, pastikan untuk memeriksa folder spam Anda!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Coba gratis selama {{amount}} hari, kemudian {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Buka akses ke semua buletin dengan menjadi pelanggan berbayar.",
            "Unsubscribe from all emails":
                "Berhenti berlangganan dari semua email",
            Unsubscribed: "Tidak berlangganan",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Berhenti berlangganan dari email tidak akan membatalkan langganan berbayar Anda ke {{title}}",
            Update: "Perbarui",
            "Update your preferences": "Perbarui preferensi Anda",
            "Verification link sent, check your inbox":
                "Tautan verifikasi telah dikirim, periksa kotak masuk Anda",
            "Verify your email address is correct":
                "Verifikasi bahwa alamat email Anda benar",
            "View plans": "Lihat paket",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Kami tidak dapat menghentikan langganan Anda karena alamat email tidak ditemukan. Harap hubungi pemilik situs.",
            "Welcome back, {{name}}!": "Selamat datang kembali, {{name}}!",
            "Welcome back!": "Selamat datang kembali!",
            "Welcome to {{siteTitle}}": "Selamat datang di {{siteTitle}}",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Ketika sebuah kotak masuk gagal menerima sebuah email, hal tersebut umumnya disebut sebagai bounce. Dalam banyak kasus, ini bisa bersifat sementara. Namun, dalam beberapa kasus, email yang terbounce dapat dikembalikan sebagai kegagalan permanen ketika alamat email yang dituju tidak valid atau tidak ada.",
            "Why has my email been disabled?":
                "Mengapa email saya dinonaktifkan?",
            Yearly: "Tahunan",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Saat ini Anda memiliki keanggotaan gratis, tingkatkan ke langganan berbayar untuk akses penuh",
            "You have been successfully resubscribed":
                "Anda telah berhasil berlangganan kembali",
            "You're currently not receiving emails":
                "Anda saat ini tidak menerima email.",
            "You're not receiving emails": "Anda tidak menerima email.",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Anda tidak menerima email karena Anda telah menandai pesan terbaru sebagai spam, atau karena pesan tidak dapat dikirimkan ke alamat email yang Anda berikan.",
            "You've successfully signed in.": "Anda telah berhasil masuk.",
            "You've successfully subscribed to":
                "Anda telah berhasil berlangganan ke",
            "Your account": "Akun Anda",
            "Your input helps shape what gets published.":
                "Masukan Anda membantu membentuk apa yang dipublikasikan.",
            "Your subscription will expire on {{expiryDate}}":
                "Langganan Anda akan berakhir pada {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Langganan Anda akan diperpanjang pada {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Langganan Anda akan dimulai pada {{subscriptionStart}}",
        },
        k1 = {
            "{{amount}} days free": "{{amount}} dagar án endurgjalds",
            "{{amount}} off": "{{amount}} afsláttur",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} afsláttur fyrstu {{number}} mánuðina.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} afsláttur fyrsta {{period}}",
            "{{amount}} off forever.": "{{amount}} afsláttur um ókomna tíð.",
            "{{discount}}% discount": "{{discount}}% afsláttur",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} fær framvegis ekki fréttabréf frá {{newsletterName}}.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} fær framvegis ekki tölvupóst þegar einhver svarar ummælum þínum.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} fær framvegis ekki þetta fréttabréf.",
            "{{trialDays}} days free": "dagar án endurgjalds",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Innskráningarhlekkur hefur verið sendur á netfangið þitt. Ef hann er ekki kominn innan 3ja mínútna skaltu athuga spam-möppuna.",
            Account: "Aðgangur",
            "Account settings": "Aðgangsstillingar",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Þegar prufutímabili lýkur muntu greiða venjulegt verð í samræmi við áskriftarleiðina sem þú valdir. Þú getur ávallt sagt upp áskriftinni áður en til þess kemur.",
            "Already a member?": "Ertu nú þegar með áskrift?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Óvænt villa kom upp. Vinsamlegast reynið aftur eða <a>hafið samband</a> ef villan reynist þrálát.",
            Back: "Til baka",
            "Back to Log in": "Aftur til innskráningar",
            "Billing info": "Greiðsluupplýsingar",
            "Black Friday": "Svartur föstudagur",
            "Cancel anytime.": "Segðu upp hvenær sem er",
            "Cancel subscription": "Segja upp áskrift",
            "Cancellation reason": "Ástæða uppsagnar",
            Change: "Breyta",
            "Check spam & promotions folders":
                "Athugið ruslpósta- eða kynningarefnismöppur",
            "Check with your mail provider":
                "Hafið samband við þjónustuveitanda netfangsins",
            Choose: "Velja",
            "Choose a different plan": "Velja aðra áskriftarleið",
            "Choose your newsletters": "Velja fréttabréf",
            "Click here to retry": "Smellið hér til að reyna aftur",
            Close: "Loka",
            Comments: "Ummæli",
            Complimentary: "Í kaupbæti",
            Confirm: "Staðfesta",
            "Confirm cancellation": "Staðfesta uppsögn",
            "Confirm subscription": "Staðfesta áskrift",
            "Contact support": "Hafa samband við þjónustuver",
            Continue: "Áfram",
            "Continue subscription": "Halda áfram í áskrift",
            "Could not sign in. Login link expired.":
                "Innskráning mistókst. Hlekkurinn varð óvirkur.",
            "Could not update email! Invalid link.":
                "Breyting á netfangi mistókst! Ógildur hlekkur.",
            "Create a new contact": "Skrá nýjan tengilið",
            "Current plan": "Núgildandi áskriftarleið",
            "Delete account": "Eyða aðgangi",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Var þetta ætlunin? Breyttu stillingunum <button>hér</button>.",
            "Don't have an account?": "Ertu ekki með aðgang?",
            Edit: "Breyta",
            Email: "Netfang",
            "Email newsletter": "Fréttabréf",
            "Email preference updated.": "Stillingum netfangsins breytt",
            "Email preferences": "Stillingar netfangs",
            Emails: "Netföng",
            "Emails disabled": "Netföng gerð óvirk",
            "Ends {{offerEndDate}}": "Lýkur {{offerEndDate}}",
            Error: "Villa",
            "Expires {{expiryDate}}": "Rennur út {{expiryDate}}",
            Forever: "Að eilífu",
            "Free Trial – Ends {{trialEnd}}":
                "Ókeypis prufutímabil – Lýkur {{trialEnd}}",
            "Get help": "Fá aðstoð",
            "Get in touch for help": "Hafðu samband til að fá aðstoð",
            "Get notified when someone replies to your comment":
                "Fá tilkynningu þegar einhver svarar ummælum þínum",
            "Give feedback on this post": "Gefðu þessari færslu endurgjöf",
            "Help! I'm not receiving emails": "Hjálp! Ég fæ ekki tölvupósta",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Ef fréttabréf er flokkað sem ruslpóstur er lokað fyrir tölvupósta á netfangið til að tryggja að þú fáir ekki þarflaus skilaboð.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Ef kvörtunin um ruslpóstinn var óviljandi eða ef þú vilt fá tölvupósta að nýju, geturðu endurvakið áskriftina með því að smella á hnappinn sem birtist í glugganum á undan.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Ef þú segir upp áskriftinni núna muntu áfram hafa aðgang fram til {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Ef þú ert með aðgang í nafni fyrirtækis eða ríkisstofnunar geturðu haft samband við upplýsingatæknideildina og beðið hana um að leyfa viðtöku tölvupósta frá {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Ef þú vilt fá tölvupósta að nýju er nærtækast að athuga hvort netfangið sé í lagi og smella síðan á endurnýja áskrift í glugganum á undan.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Ef þú færð ekki fréttabréfið sem þú ert í áskrift að þá eru hér nokkur atriði sem hægt er að skoða:",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Ef þú hefur skoðað öll þess atriði og færð enn ekki tölvupósta geturðu haft samband við {{supportAddress}}",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Ef varanleg villa kemur upp við sendingu tölvupósta verða þeir gerðir óvirkir.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Bættu {{senderEmail}} við listann yfir tengiliði í tölvupósthólfinu. Það gefur þjónustuveitandanum merki um að tölvupóstum frá þessu netfangi sé treystandi.",
            "Less like this": "Minna af þessu tagi",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Gakktu úr skugga um að tölvupóstanir endi ekki í möppum fyrir ruslpósta eða kynningarefni. Ef svo er skaltu smella á "Mark as not spam" og/eða "Move to inbox"',
            Manage: "Stjórna",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Mánaðarlega",
            "More like this": "Meira af þessu tagi",
            Name: "Nafn",
            "Need more help? Contact support":
                "Þarftu meiri aðstoð? Hafðu samband við þjónustuverið",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Færðu ekki tölvupósta?",
            "Now check your email!": "Athugaðu nú tölvupósthólfið þitt!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Ef þú sérð ekki tölvupósta eftir að hafa endurvakið áskrift, athugaðu spam-möppuna. Enn kunna að vera skráðar kvartanir um ruslpóst og tölvupóstarnir því flokkaður á þann veg. Ef svo er skaltu merkja síðasta fréttabréf sem 'Not spam' og færa yfir í aðalpósthólfið.",
            "Permanent failure (bounce)": "Varanleg villa",
            Plan: "Áskriftarleið",
            "Plan checkout was cancelled.": "Hætt var við kaup á áskrift",
            "Plan upgrade was cancelled.":
                "Hætt var við breytingu á áskriftarleið",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "Vinsamlegast hafið samband við {{supportAddress}} til að breyta kaupbætisáskrift.",
            "Please fill in required fields":
                "Vinsamlegast fyllið í nauðsynlega reiti",
            Price: "Verð",
            "Re-enable emails": "Fá tölvupósta að nýju",
            Recommendations: "",
            "Renews at {{price}}.": "Endurnýjast á verðinu {{price}}",
            Retry: "Reyna aftur",
            Save: "Vista",
            "Send an email and say hi!": "Sendu tölvupóst og segðu hæ!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Sendu tölvupóst á {{senderEmail}} og segðu halló. Þetta gefur einnig tölvupóstþjónustunni merki um að póstum til og frá þessu netfangi sé treystandi.",
            "Sending login link...": "Sendi innskráningarhlekk",
            "Sending...": "Sending í vinnslu",
            "Show all": "",
            "Sign in": "Innskráning",
            "Sign out": "Útskráning",
            "Sign up": "Nýskráning",
            "Signup error: Invalid link":
                "Villa við nýskráningu: Ógildur hlekkur",
            "Sorry, that didn’t work.": "Þetta virkaði því miður ekki.",
            "Spam complaints": "Kvartanir um ruslpóst",
            "Start {{amount}}-day free trial":
                "Hefja {{amount}}-daga prufutímabil",
            "Starting {{startDate}}": "Frá og með {{startDate}}",
            "Starting today": "Frá og með deginum í dag",
            "Submit feedback": "Gefa endurgjöf",
            Subscribe: "Áskrift",
            Subscribed: "Í áskrift",
            Success: "Þetta heppnaðist",
            "Success! Check your email for magic link to sign-in.":
                "Þetta heppnaðist! Athugaðu tölvupósthólfið til að finna hlekk til innskráningar.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Þetta heppnaðist! Aðgangurinn þinn er virkur, þú hefur nú aðgang að öllu efni.",
            "Success! Your email is updated.":
                "Þetta heppnaðist! Breyting á netfangi hefur tekið gildi.",
            "Successfully unsubscribed": "Uppsögn heppnaðist",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Takk fyrir endurgjöfina!",
            "That didn't go to plan": "Þetta fór ekki samkvæmt áætlun",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "Netfangið sem þú ert skráður fyrir er {{memberEmail}} — ef það er rangt geturðu breytt því í <button>aðgangsstillingum</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Villa kom upp við sendingu athugasemdar. Vinsamlegast reynið aftur örlítið síðar.",
            "This site is invite-only, contact the owner for access.":
                "Aðgangur krefst boðsmiða, hafið samband við eiganda síðunnar til að fá aðgang.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Til að ljúka nýskráningu skaltu smella á staðfestingarhlekkinn sem var sendur á netfangið þitt. Ef hann er ekki kominn innan 3 mínútna skaltu athuga spam-möppuna.",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Prófaðu í {{amount}} daga án endurgjalds og síðan fyrir {{originalPrice}}",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Fáðu aðgang að öllum fréttabréfum með því að gerast áskrifandi.",
            "Unsubscribe from all emails": "Segja upp öllum tölvupóstum",
            Unsubscribed: "Ekki í áskrift",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Uppsögn tölvupósta felur ekki í sér uppsögn áskriftar að {{title}}",
            Update: "Uppfæra",
            "Update your preferences": "Breyta vali",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Gakktu úr skugga um að netfangið sé rétt",
            "View plans": "Skoða áskriftarleiðir",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Uppsögn mistókst vegna þess að netfangið fannst ekki. Hafðu samband við eiganda síðunnar.",
            "Welcome back, {{name}}!": "Velkominn aftur, {{name}}!",
            "Welcome back!": "Velkominn aftur!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Þegar netfang getur ekki tekið við tölvupósti er það oftast tímabundin villa en í sumum tilfellum, þegar netfangið er ógilt eða ekki til staðar, er villan varanleg.",
            "Why has my email been disabled?":
                "Hvers vegna var netfangið mitt gert óvirkt?",
            Yearly: "Árlega",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Þú ert með gjaldfrjálsan aðgang eins og stendur, keyptu áskrift til að fá fullan aðgang.",
            "You have been successfully resubscribed":
                "Þú ert orðinn áskrifandi að nýju",
            "You're currently not receiving emails":
                "Þú færð ekki tölvupósta eins og stendur",
            "You're not receiving emails": "Þú færð ekki tölvupósta",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Þú færð ekki tölvupósta ýmist vegna þess að þú merktir síðustu skilaboð sem ruslpóst eða vegna þess að ekki er hægt að senda skilaboð á netfangið sem þú gafst upp.",
            "You've successfully signed in.": "Þér tókst að skrá þig inn",
            "You've successfully subscribed to": "",
            "Your account": "Aðgangurinn þinn",
            "Your input helps shape what gets published.": "",
            "Your subscription will expire on {{expiryDate}}":
                "Áskrift þinni lýkur {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Áskrift þín verður endurnýjuð {{expiryDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Áskrift þín hefst {{subscriptionStart}}",
        },
        v1 = {
            "{{amount}} days free": "{{amount}} giorni gratis",
            "{{amount}} off": "{{amount}} in meno",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} in meno per i primi {{number}} mesi.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} in meno per il primo {{period}}.",
            "{{amount}} off forever.": "{{amount}} in meno per sempre.",
            "{{discount}}% discount": "{{discount}}% di sconto",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "La newsletter {{newsletterName}} non verrà più inviata a {{memberEmail}}.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "Non riceverà più email a {{memberEmail}} quando qualcuno risponde ai tuoi commenti.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "La newsletter non verrà più inviata a {{memberEmail}}.",
            "{{trialDays}} days free": "{{trialDays}} giorni gratis",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Un link di accesso è stato inviato alla tua casella di posta. Se non lo ricevi entro 3 minuti, controlla nello spam.",
            Account: "Account",
            "Account settings": "Impostazioni account",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Al termine della prova gratuita, ti verrà addebitato il prezzo regolare del piano scelto. Puoi annullare in qualsiasi momento prima della scadenza.",
            "Already a member?": "Sei già iscritto?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Si è verificato un errore imprevisto. <a>Contatta l'assistenza</a> se l'errore persiste.",
            Back: "Indietro",
            "Back to Log in": "Torna alla pagina d'accesso",
            "Billing info": "Informazioni di fatturazione",
            "Black Friday": "Black friday",
            "Cancel anytime.": "Cancella in qualsiasi momento.",
            "Cancel subscription": "Cancella l'abbonamento",
            "Cancellation reason": "Motivo della cancellazione",
            Change: "Cambia",
            "Check spam & promotions folders": "Controlla nello spam",
            "Check with your mail provider":
                "Contatta il tuo provider di posta elettronica",
            Choose: "Scegli",
            "Choose a different plan": "Scegli un piano differente",
            "Choose your newsletters": "Scegli la tua newsletter",
            "Click here to retry": "Clicca qui per riprovare",
            Close: "Chiudi",
            Comments: "Commenti",
            Complimentary: "Omaggio",
            Confirm: "Conferma",
            "Confirm cancellation": "Conferma cancellazione",
            "Confirm subscription": "Conferma abbonamento",
            "Contact support": "Contatta l'assistenza",
            Continue: "Continua",
            "Continue subscription": "Riabbonati",
            "Could not sign in. Login link expired.":
                "Accesso non effettuato. Il link è scaduto.",
            "Could not update email! Invalid link.":
                "Email non aggiornata! Link non valido.",
            "Create a new contact": "Crea un nuovo contatto",
            "Current plan": "Piano attuale",
            "Delete account": "Elimina account",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Non era tua intenzione? Gestisti <button>qui</button> le tue preferenze.",
            "Don't have an account?": "Non hai un account?",
            Edit: "Modifica",
            Email: "Email",
            "Email newsletter": "Newsletter",
            "Email preference updated.": "Preferenze email aggiornate.",
            "Email preferences": "Preferenze email",
            Emails: "Email",
            "Emails disabled": "Email disattivate",
            "Ends {{offerEndDate}}": "Finisce il {{offerEndDate}}",
            Error: "Errore",
            "Expires {{expiryDate}}": "Scade il {{offerEndDate}}",
            Forever: "Per sempre",
            "Free Trial – Ends {{trialEnd}}":
                "Prova gratuita – finisce il {{trialEnd}}",
            "Get help": "Chiedi aiuto",
            "Get in touch for help": "Richiedere assistenza",
            "Get notified when someone replies to your comment":
                "Ricevi una notifica quando qualcuno risponde ad un tuo commento",
            "Give feedback on this post": "Manda un feedback per questo post",
            "Help! I'm not receiving emails": "Aiuto! Non ricevo le email",
            "Here are a few other sites you may enjoy.":
                "Ecco degli altri siti che potrebbero piacerti.",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Se una newsletter viene segnalata come spam, le email per quell'indirizzo vengono disabilitate automaticamente, in modo che tu non riceva nessun messaggio indesiderato.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Se il reclamo per spam è stato commesso per errore, o nel caso tu voglia nuovamente ricevere le email, puoi iscriverti nuovamente cliccando il bottone nella schermata precedente.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Se annulli ora il tuo abbonamento, continuerai ad avere accesso fino al {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Se possiedi un account email aziendale o governativo, contatta il reparto IT e chiedi di consentire la ricezione delle email da parte di {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                'Se desideri ricevere nuovamente le email, la cosa migliore da fare è controllare che non ci siano problemi con il tuo indirizzo di posta e poi cliccare su "Reiscriviti" nella schermata precedente.',
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Se non ricevi la newsletter a cui sei iscritto, ecco alcuni passaggi da controllare.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Se avete completato tutti i passaggi e ancora non ricevete nessuna email, potete contattare l'assistenza a {{supportAddress}}.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Nel caso in cui si verifichi un fallimento permanente durante l'invio di una newsletter, le email saranno disabilitate per quell'account.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Nel tuo client di posta aggiungi {{senderEmail}} ai tuoi contatti. Questo fa si che il tuo provider riconosca l'indirizzo come attendibile.",
            "Less like this": "Meno come questo",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Assicurati che le email non finiscano per sbaglio nello spam. Se ve ne sono, clicca su "Segnala come non spam" e/o "Sposta nella cartella Posta in arrivo".',
            Manage: "Gestisci",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.":
                "Iscrizione non disponibile, contatta il proprietario per accedere.",
            Monthly: "Mensile",
            "More like this": "Più come questo",
            Name: "Nome",
            "Need more help? Contact support":
                "Hai ancora bisogno di aiuto? Contatta l'assistenza",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Le newsletter possono essere disabilitate nel tuo account per due ragioni: un'email precedente è stata segnalata come spam, o l'invio di un'email ha restituito un fallimento permanente (rimbalzo).",
            "Not receiving emails?": "Non ricevi le email?",
            "Now check your email!": "Ora controlla la tua email!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.": `Se ancora non vedi le email una volta reiscritto, controlla nello spam. Alcuni provider tengono nota dei reclami e continuano a segnalare le email. Se questo dovesse succedere, segnala l'ultima email ricevuta come "non spam" e spostala nella tua posta in arrivo.`,
            "Permanent failure (bounce)": "Fallimento permanente (rimbalzo)",
            Plan: "Piano",
            "Plan checkout was cancelled.":
                "Il pagamento del piano è stato annullato.",
            "Plan upgrade was cancelled.":
                "L'aggiornamento del piano è stato annullato.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "Si prega di contattare {{supportAddress}} per modificare l'abbonamento gratuito.",
            "Please fill in required fields":
                "Si prega di compilare i campi obbligatori",
            Price: "Prezzo",
            "Re-enable emails": "Riattiva le email",
            Recommendations: "Consigliati",
            "Renews at {{price}}.": "Rinnova a {{price}}.",
            Retry: "Riprova",
            Save: "Salva",
            "Send an email and say hi!": "Invia un'email di saluti!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Invia un'email di saluti a {{senderEmail}}. Questo potrebbe aiutare a segnalare al tuo provider che le email da e verso questo indirizzo possono essere considerate attendibili.",
            "Sending login link...": "Invio link di accesso...",
            "Sending...": "Invio...",
            "Show all": "Mostra tutti",
            "Sign in": "Accedi",
            "Sign out": "Esci",
            "Sign up": "Iscriviti",
            "Signup error: Invalid link": "Errore di accesso: link invalido",
            "Sorry, that didn’t work.": "Mi dispiace, non ha funzionato.",
            "Spam complaints": "Reclami per spam",
            "Start {{amount}}-day free trial":
                "Inizia i {{amount}} giorni di prova gratuita",
            "Starting {{startDate}}": "Inizia il {{startDate}}",
            "Starting today": "Inizia oggi",
            "Submit feedback": "Invia feedback",
            Subscribe: "Abbonati",
            Subscribed: "Abbonato",
            Success: "Fatto",
            "Success! Check your email for magic link to sign-in.":
                "Fatto! Controlla la tua email per il magico link d'accesso.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Fatto! Il tuo account è stato attivato, ora hai accesso a tutti i contenuti.",
            "Success! Your email is updated.":
                "Fatto! La tua email è stata aggiornata.",
            "Successfully unsubscribed":
                "Disiscrizione effettuata con successo",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Grazie per il feedback!",
            "That didn't go to plan": "Questo non era previsto",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "L'indirizzo email registrato è {{memberEmail}} — se non è corretto, puoi modificarlo nelle tue <button>impostazioni dell'account</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "C'è stato un errore durante l'invio del tuo feedback. Si prega di riprovare più tardi.",
            "This site is invite-only, contact the owner for access.":
                "Questo sito è accessibile solo su invito, contatta il proprietario per poter accedere.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Per completare l'iscrizione, clicca il link di conferma inviato alla tua email. Se non lo ricevi entro 3 minuti, controlla nello spam!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Prova gratis per {{amount}} giorni, poi {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Abbonati per sbloccare l'accesso a tutte le newsletter.",
            "Unsubscribe from all emails": "Disiscriviti da tutte le email",
            Unsubscribed: "Disiscritto",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "La disiscrizione dalle email non annullerà l'abbonamento a {{title}}",
            Update: "Aggiorna",
            "Update your preferences": "Aggiorna le tue preferenze",
            "Verification link sent, check your inbox":
                "Link di verifica inviato, controlla la tua casella di posta",
            "Verify your email address is correct":
                "Controlla che il tuo indirizzo email sia corretto",
            "View plans": "Vedi piani",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Non è stato possibile disiscriverti poiché l'indirizzo email non è stato trovato. Si prega di contattare il proprietario del sito.",
            "Welcome back, {{name}}!": "È bello rivederti, {{name}}!",
            "Welcome back!": "Bentornato!",
            "Welcome to {{siteTitle}}": "Benvenuto a {{siteTitle}}",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.": `Quando una casella fallisce l'accettazione di un'email, questo viene normalmente chiamato "rimbalzo". In molti casi questo è temporaneo. Tuttavia, in alcuni casi un'email potrebbe tornare come un fallimento permanente se l'indirizzo è sbagliato o inesistente.`,
            "Why has my email been disabled?":
                "Perché la mia email è stata disattivata?",
            Yearly: "Annuale",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Attualmente hai un piano gratuito, abbonati per ottenere l'accesso completo.",
            "You have been successfully resubscribed":
                "Reiscrizione effettuata con successo",
            "You're currently not receiving emails":
                "Al momento non ricevi nessuna email",
            "You're not receiving emails": "Non ricevi nessuna email",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Non ricevi email perché hai contrassegnato un messaggio recente come spam, o perché non è stato possibile recapitare i messaggi all'indirizzo email fornito.",
            "You've successfully signed in.": "Accesso effettuato.",
            "You've successfully subscribed to": "Iscrizione effettuata a",
            "Your account": "Il tuo account",
            "Your input helps shape what gets published.":
                "Il tuo contributo aiuta a dare forma a ciò che viene pubblicato.",
            "Your subscription will expire on {{expiryDate}}":
                "Il tuo abbonamento scadrà il {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Il tuo abbonamento verrà rinnovato il {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Il tuo abbonamento inizierà il {{subscriptionStart}}",
        },
        w1 = {
            "{{amount}} days free": "{{amount}}日間無料",
            "{{amount}} off": "{{amount}}オフ",
            "{{amount}} off for first {{number}} months.":
                "最初の{{number}}ヶ月間{{amount}}オフ",
            "{{amount}} off for first {{period}}.":
                "最初の{{period}}{{amount}}オフ",
            "{{amount}} off forever.": "永久に{{amount}}オフ",
            "{{discount}}% discount": "{{discount}}% 割引",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}}は{{newsletterName}}のニュースレターを受信しなくなります。",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "誰かがあなたのコメントに返信しても、{{memberEmail}} はメールを受信しません。",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} はこのニュースレターを受信しなくなります。",
            "{{trialDays}} days free": "{{trialDays}}日間無料",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "ログインリンクが受信箱に送信されました。3分以内にメールが届かない場合は、迷惑メールのフォルダーをご確認ください。",
            Account: "アカウント",
            "Account settings": "アカウント設定",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "無料期間が終了すると、選択したプランの通常価格が請求されます。それまではいつでもキャンセルできます。",
            "Already a member?": "すでに会員ですか？",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "予期しないエラーが発生しました。もう一度試すか、エラーが解決しない場合は<a>サポートにお問い合わせ</a>ください。",
            Back: "戻る",
            "Back to Log in": "ログインに戻る",
            "Billing info": "請求情報",
            "Black Friday": "ブラックフライデー",
            "Cancel anytime.": "いつでもキャンセル可能",
            "Cancel subscription": "購読をキャンセル",
            "Cancellation reason": "キャンセル理由",
            Change: "変更",
            "Check spam & promotions folders":
                "スパムとプロモーションフォルダを確認してください",
            "Check with your mail provider":
                "メールプロバイダーに確認してください",
            Choose: "選択",
            "Choose a different plan": "別のプランを選択",
            "Choose your newsletters": "ニュースレターを選択",
            "Click here to retry": "再試行するにはここをクリックしてください",
            Close: "閉じる",
            Comments: "コメント",
            Complimentary: "無料",
            Confirm: "確認",
            "Confirm cancellation": "キャンセルを確認",
            "Confirm subscription": "購読を確認",
            "Contact support": "サポートに連絡",
            Continue: "続ける",
            "Continue subscription": "購読を続ける",
            "Could not sign in. Login link expired.":
                "ログインできませんでした。ログインリンクの有効期限が切れています。",
            "Could not update email! Invalid link.":
                "メールアドレスを更新できませんでした。無効なリンクです。",
            "Create a new contact": "新しい連絡先を作成",
            "Current plan": "現在のプラン",
            "Delete account": "アカウントを削除",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "意図しなかった場合は、<button>こちら</button>で設定を変更してください。",
            "Don't have an account?": "アカウントをお持ちでない場合",
            Edit: "編集",
            Email: "メール",
            "Email newsletter": "ニュースレターのメール",
            "Email preference updated.": "メールの設定が更新されました。",
            "Email preferences": "メールの設定",
            Emails: "メール",
            "Emails disabled": "メールが無効になっています",
            "Ends {{offerEndDate}}": "{{offerEndDate}}まで",
            Error: "エラー",
            "Expires {{expiryDate}}": "{{expiryDate}}まで有効",
            Forever: "永久",
            "Free Trial – Ends {{trialEnd}}": "無料期間 - {{trialEnd}}まで",
            "Get help": "サポート",
            "Get in touch for help": "サポートが必要な場合はご連絡ください",
            "Get notified when someone replies to your comment":
                "誰かがあなたのコメントに返信したときに通知を受ける",
            "Give feedback on this post": "この投稿にフィードバックを提供する",
            "Help! I'm not receiving emails":
                "助けてください！メールが受信できません",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "ニュースレターがスパムとして判定された場合、そのアドレスではメールが自動的に無効になり、望ましくないメッセージを受け取らないようになります。",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "スパムの判定が誤っていた場合、またはメールの受信を再開したい場合は、前の画面のボタンをクリックしてメールを再購読することができます。",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "今すぐ購読をキャンセルすると、{{periodEnd}}までアクセスできます。",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "企業または政府のメールアカウントをお持ちの場合は、IT部門に連絡し、{{senderEmail}}からのメール受信を許可してもらってください",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "再度メールを受け取りたい場合は、メールアドレスに問題がないかをまず確認し、次に前の画面で再購読を選択してください。",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "購読したニュースレターのメールを受け取れてない場合は、以下の点を確認してみてください。",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "これらの項目を全て満たしてもメールがまだ受け取れない場合は、{{supportAddress}}に連絡してサポートを受けてください。",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "ニュースレターの送信時に永続的な障害が発生した場合、アカウントのメールが無効になります。",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "メールクライアントで{{senderEmail}}を連絡先リストに追加してください。これにより、メールプロバイダーにこのアドレスから送信されたメールを信頼するように伝えることができます。",
            "Less like this": "興味なし",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'メールがスパムまたはプロモーションフォルダに誤って入っていないか確認してください。もしそうなら、"スパムではない"とマークするか、"受信トレイに移動"を選択してください。',
            Manage: "管理",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "月額",
            "More like this": "興味あり",
            Name: "名前",
            "Need more help? Contact support":
                "サポートが必要ですか？お問い合わせください。",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "ニュースレターは、2つの理由によってアカウント上で無効になる場合があります: 以前のメールがスパムとしてマークされた場合、またはメールの送信が永続的な障害によって失敗した場合です。",
            "Not receiving emails?": "メールが受信されない場合",
            "Now check your email!": "メールを確認してください",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "再購読した後も受信トレイにメールが表示されない場合は、スパムフォルダを確認してください。一部の受信トレイは以前のスパムの記録を保持し、引き続きメールを判定します。これが起こった場合は、最新のニュースレターを「スパムではない」とマークし、受信トレイに移動してください。",
            "Permanent failure (bounce)": "永続的な障害",
            Plan: "プラン",
            "Plan checkout was cancelled.":
                "プランのチェックアウトがキャンセルされました。",
            "Plan upgrade was cancelled.":
                "プランのアップグレードがキャンセルされました。",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "必須項目に入力してください",
            Price: "価格",
            "Re-enable emails": "メールを再有効化する",
            Recommendations: "",
            "Renews at {{price}}.": "{{price}}で更新されます。",
            Retry: "再試行",
            Save: "保存",
            "Send an email and say hi!": "テストメールを送信",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "{{senderEmail}}にメールを送ると、メールプロバイダーに対して、このアドレスとのやり取りは信頼できるものだと知らせることができます。",
            "Sending login link...": "ログイン先リンクを送信しています...",
            "Sending...": "送信しています...",
            "Show all": "",
            "Sign in": "ログイン",
            "Sign out": "ログアウト",
            "Sign up": "新規登録",
            "Signup error: Invalid link": "エラー： 無効なリンク",
            "Sorry, that didn’t work.":
                "申し訳ありませんが、うまくいきませんでした。",
            "Spam complaints": "スパムに関する苦情",
            "Start {{amount}}-day free trial":
                "{{amount}}日間の無料トライアルを開始する",
            "Starting {{startDate}}": "{{startDate}}から開始",
            "Starting today": "本日から開始",
            "Submit feedback": "フィードバックを送信",
            Subscribe: "購読する",
            Subscribed: "購読済み",
            Success: "成功",
            "Success! Check your email for magic link to sign-in.":
                "成功しました！ログイン用のマジックリンクをメールで確認してください。",
            "Success! Your account is fully activated, you now have access to all content.":
                "成功しました！アカウントが完全にアクティブ化されました。これですべてのコンテンツにアクセスできます。",
            "Success! Your email is updated.":
                "成功しました！メールアドレスが更新されました。",
            "Successfully unsubscribed": "正常に購読解除されました",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "フィードバックありがとうございます！",
            "That didn't go to plan": "",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "メールアドレスは{{memberEmail}}です。もし正しくない場合は、<button>アカウント設定</button>で更新することができます。",
            "There was a problem submitting your feedback. Please try again a little later.":
                "フィードバックの送信中に問題が発生しました。しばらくしてからもう一度お試しください。",
            "This site is invite-only, contact the owner for access.":
                "このサイトは招待制です。アクセスするにはオーナーに連絡してください。",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "新規登録を完了するには、受信トレイの確認リンクをクリックしてください。3分経っても届かない場合は、スパムフォルダを確認してください。",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "{{amount}}日間無料でお試しください、その後は{{originalPrice}}です。",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "有料の購読者になることで、すべてのニュースレターへのアクセスが可能になります。",
            "Unsubscribe from all emails": "すべてのメールの購読解除",
            Unsubscribed: "購読解除されました",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "メールの購読を解除しても、{{title}}への有料購読はキャンセルされません",
            Update: "更新",
            "Update your preferences": "設定を更新する",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "メールアドレスが正しいかどうか確認してください",
            "View plans": "プランを表示",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "メールアドレスが見つからなかったため、購読解除できませんでした。サイトのオーナーに連絡してください。",
            "Welcome back, {{name}}!": "おかえりなさい、{{name}}さん！",
            "Welcome back!": "おかえりなさい！",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "受信トレイにメールが届かない場合のことを一般的にバウンスと呼び、多くの場合、一時的なものです。ただし、メールアドレスが無効または存在しない場合、バウンスしたメールは永続的な失敗として返されることがあります。",
            "Why has my email been disabled?": "なぜメールが無効になったのか？",
            Yearly: "年額",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "現在、無料版のメンバーシップです。完全にアクセスするには有料版にアップグレードしてください。",
            "You have been successfully resubscribed": "正常に再購読されました",
            "You're currently not receiving emails":
                "現在、メールを受信していません",
            "You're not receiving emails": "メールを受信していません",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "最近のメッセージをスパムとして判定したか、提供されたメールアドレスに配信できなかったため、メールを受信していません。",
            "You've successfully signed in.": "ログインに成功しました",
            "You've successfully subscribed to": "",
            "Your account": "あなたのアカウント",
            "Your input helps shape what gets published.":
                "あなたの感想を今後の内容の参考にさせていただきます。",
            "Your subscription will expire on {{expiryDate}}":
                "あなたの購読は{{expiryDate}}に期限切れになります。",
            "Your subscription will renew on {{renewalDate}}":
                "あなたの購読は{{renewalDate}}に更新されます。",
            "Your subscription will start on {{subscriptionStart}}":
                "あなたの購読は{{subscriptionStart}}に開始されます。",
        },
        x1 = {
            "{{amount}} days free": "{{amount}}일 무료",
            "{{amount}} off": "{{amount}} 할인",
            "{{amount}} off for first {{number}} months.":
                "첫 {{number}}개월 {{amount}} 할인",
            "{{amount}} off for first {{period}}.":
                "첫 {{period}} {{amount}} 할인",
            "{{amount}} off forever.": "{{amount}} 영원히 할인",
            "{{discount}}% discount": "{{discount}}% 할인",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}}은(는) {{newsletterName}} 뉴스레터를 더 이상 받지 않습니다.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}}은(는) 다른 사람이 댓글에 답변할 때 이메일을 더 이상 받지 않습니다.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}}은(는) 이 뉴스레터를 더 이상 받지 않습니다.",
            "{{trialDays}} days free": "{{trialDays}}일 무료",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "로그인 링크가 이메일로 전송되었습니다. 3분 내에 도착하지 않으면 스팸 폴더를 확인해주세요.",
            Account: "계정",
            "Account settings": "계정 설정",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "무료 체험이 종료되면 선택한 요금제의 정상 가격이 청구됩니다. 그 전에 언제든지 취소할 수 있습니다.",
            "Already a member?": "이미 회원이신가요?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "예기치 않은 오류가 발생했습니다. 계속해서 오류가 발생하면 다시 시도하거나 <a>지원팀에 문의</a>해주세요.",
            Back: "뒤로",
            "Back to Log in": "로그인으로 돌아가기",
            "Billing info": "결제 정보",
            "Black Friday": "블랙 프라이데이",
            "Cancel anytime.": "언제든지 취소할 수 있습니다.",
            "Cancel subscription": "구독 취소",
            "Cancellation reason": "취소 사유",
            Change: "변경",
            "Check spam & promotions folders":
                "스팸 & 프로모션 폴더 확인하세요",
            "Check with your mail provider": "메일 제공업체에 문의하세요",
            Choose: "선택",
            "Choose a different plan": "다른 요금제 선택",
            "Choose your newsletters": "뉴스레터 선택",
            "Click here to retry": "다시 시도하려면 여기를 클릭하세요",
            Close: "닫기",
            Comments: "댓글",
            Complimentary: "무료",
            Confirm: "확인",
            "Confirm cancellation": "취소 확인",
            "Confirm subscription": "구독 확인",
            "Contact support": "지원팀에 문의",
            Continue: "계속",
            "Continue subscription": "구독 계속",
            "Could not sign in. Login link expired.":
                "로그인할 수 없습니다. 로그인 링크가 만료되었습니다.",
            "Could not update email! Invalid link.":
                "이메일을 업데이트할 수 없습니다! 잘못된 링크입니다.",
            "Create a new contact": "새 연락처 만들기",
            "Current plan": "현재 요금제",
            "Delete account": "계정 삭제",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "의도치 않았나요? 기본 설정을 <button>여기</button>에서 관리할 수 있습니다.",
            "Don't have an account?": "계정이 없으신가요?",
            Edit: "편집",
            Email: "이메일",
            "Email newsletter": "이메일 뉴스레터",
            "Email preference updated.":
                "이메일 기본 설정이 업데이트되었습니다.",
            "Email preferences": "이메일 설정",
            Emails: "이메일",
            "Emails disabled": "이메일 사용 중지됨",
            "Ends {{offerEndDate}}": "{{offerEndDate}}에 종료됩니다",
            Error: "오류",
            "Expires {{expiryDate}}": "{{expiryDate}}에 만료됩니다",
            Forever: "영원히",
            "Free Trial – Ends {{trialEnd}}":
                "무료 체험 – {{trialEnd}}에 종료됩니다",
            "Get help": "도움말 받기",
            "Get in touch for help": "도움말을 받으려면 연락하세요",
            "Get notified when someone replies to your comment":
                "댓글에 대한 답변이 올라오면 알림 받기",
            "Give feedback on this post": "이 게시물에 대한 의견 제공하기",
            "Help! I'm not receiving emails":
                "도와주세요! 이메일을 받지 못하고 있습니다",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "만약 뉴스레터가 스팸으로 표시되면, 더 이상 원하지 않는 메시지를 받지 않도록 해당 주소의 이메일이 자동으로 사용 중지됩니다.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "스팸 신고가 실수였거나 이메일을 다시 받기를 원하면, 이전 화면의 버튼을 클릭하여 이메일을 다시 구독할 수 있습니다.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "만약 회사나 정부 이메일 계정을 사용하고 있다면, IT 부서에 연락하여 {{senderEmail}}에서 이메일을 받을 수 있도록 요청하세요",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "이메일을 다시 받기를 원한다면, 가장 좋은 방법은 문제가 있는지 확인한 다음 이전 화면의 다시 구독 버튼을 클릭하는 것입니다.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "만약 구독한 이메일 뉴스레터를 받지 못하고 있다면, 확인해야 할 몇 가지 사항이 있습니다.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "이 모든 확인을 완료했는데도 이메일을 받지 못하고 있다면, {{supportAddress}}에 연락하여 지원을 받을 수 있습니다.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "영구적인 실패가 발생하여 뉴스레터를 보내려고 시도할 때, 계정의 이메일이 사용 중지됩니다.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "이메일 클라이언트에서 {{senderEmail}}을 연락처 목록에 추가하세요. 이렇게 하면 메일 제공업체에게 이 주소에서 보낸 이메일을 신뢰해야 한다는 신호를 보냅니다.",
            "Less like this": "비슷한 게시물 줄이기",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                '이메일이 스팸이나 프로모션 폴더에 실수로 들어가지 않도록 하세요. 만약 들어가 있다면 "스팸이 아님" 또는 "받은 편지함으로 이동"을 클릭하세요.',
            Manage: "관리",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "월간",
            "More like this": "비슷한 게시물 더 보기",
            Name: "이름",
            "Need more help? Contact support":
                "더 많은 도움이 필요하신가요? 지원팀에 문의하세요",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "뉴스레터는 계정에서 두 가지 이유로 사용 중지될 수 있습니다: 이전 이메일이 스팸으로 표시되었거나 이메일을 보내려고 시도했지만 영구적인 실패가 발생했을 때(바운스).",
            "Not receiving emails?": "이메일을 받지 못하고 계신가요?",
            "Now check your email!": "지금 이메일을 확인해주세요!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "다시 구독한 후에도 받은 편지함에 이메일이 표시되지 않는다면 스팸 폴더를 확인하세요. 일부 받은 편지함 제공업체는 이전 스팸 신고 기록을 유지하고 계속해서 이메일을 표시합니다. 이런 경우 최신 뉴스레터를 '스팸이 아님'으로 표시하여 기본 받은 편지함으로 이동시키세요.",
            "Permanent failure (bounce)": "영구적인 실패(바운스)",
            Plan: "플랜",
            "Plan checkout was cancelled.": "플랜 결제가 취소되었습니다.",
            "Plan upgrade was cancelled.": "플랜 업그레이드가 취소되었습니다.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "필수 항목을 입력하세요",
            Price: "가격",
            "Re-enable emails": "이메일 재활성화",
            Recommendations: "",
            "Renews at {{price}}.": "{{price}}에 갱신됩니다.",
            Retry: "다시 시도",
            Save: "저장",
            "Send an email and say hi!": "이메일을 보내 인사를 건네보세요!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "{{senderEmail}}에게 이메일을 보내 인사를 건네보세요. 이렇게 하면 메일 제공업체에게 이 주소로부터 이메일을 신뢰해야 한다는 신호를 보냅니다.",
            "Sending login link...": "로그인 링크 전송 중...",
            "Sending...": "전송 중...",
            "Show all": "",
            "Sign in": "로그인",
            "Sign out": "로그아웃",
            "Sign up": "가입하기",
            "Signup error: Invalid link": "가입 오류: 잘못된 링크",
            "Sorry, that didn’t work.": "죄송합니다. 작동하지 않았습니다.",
            "Spam complaints": "스팸 신고",
            "Start {{amount}}-day free trial":
                "{{amount}}일 동안의 무료 체험 시작",
            "Starting {{startDate}}": "{{startDate}}부터 시작",
            "Starting today": "오늘부터 시작",
            "Submit feedback": "의견 제출",
            Subscribe: "구독",
            Subscribed: "구독 완료",
            Success: "성공",
            "Success! Check your email for magic link to sign-in.":
                "성공! 로그인을 위한 링크가 이메일로 전송되었습니다.",
            "Success! Your account is fully activated, you now have access to all content.":
                "성공! 계정이 활성화되었습니다. 이제 모든 콘텐츠에 접근할 수 있습니다.",
            "Success! Your email is updated.":
                "성공! 이메일이 업데이트되었습니다.",
            "Successfully unsubscribed": "구독이 성공적으로 취소되었습니다",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "의견을 보내주셔서 감사합니다!",
            "That didn't go to plan": "계획대로 진행되지 않았습니다",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "회원님의 이메일 주소는 {{memberEmail}}입니다. 이 주소가 맞지 않다면 <button>계정 설정 영역</button>에서 업데이트할 수 있습니다.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "의견을 제출하는 중에 문제가 발생했습니다. 잠시 후 다시 시도하세요.",
            "This site is invite-only, contact the owner for access.":
                "위 사이트는 초대된 사용자만 사용이 가능합니다. 접근을 위해서는 관리자에게 연락하세요.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "가입을 완료하려면 이메일의 확인 링크를 클릭하세요. 3분 이내에 도착하지 않으면 스팸 폴더를 확인해주세요!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "{{amount}}일 동안 무료로 사용한 후 {{originalPrice}}로 결제하세요.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "유료 구독자가 되어 모든 뉴스레터에 접근하세요.",
            "Unsubscribe from all emails": "모든 이메일 구독 취소",
            Unsubscribed: "구독 취소 완료",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "이메일 구독 취소는 {{title}}에 대한 유료 구독을 취소하지 않습니다",
            Update: "업데이트",
            "Update your preferences": "설정 업데이트",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "이메일 주소가 올바른지 확인하세요",
            "View plans": "플랜 보기",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "이메일 주소를 찾을 수 없어 구독을 취소할 수 없습니다. 사이트 관리자에게 문의하세요.",
            "Welcome back, {{name}}!":
                "{{name}}님, 다시 돌아오신 것을 환영합니다!",
            "Welcome back!": "다시 돌아오신 것을 환영합니다!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "받는 편지함이 이메일을 받지 못하는 경우 이를 바운스(bounce)라고 합니다. 이는 일시적인 경우가 많지만, 이메일 주소가 잘못되었거나 존재하지 않는 경우 영구적인 실패로 반환될 수도 있습니다.",
            "Why has my email been disabled?": "왜 이메일이 비활성화되었나요?",
            Yearly: "연간",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "현재 무료 멤버십을 사용 중입니다. 유료 구독으로 업그레이드하여 모든 콘텐츠에 접근하세요.",
            "You have been successfully resubscribed":
                "성공적으로 재구독되었습니다",
            "You're currently not receiving emails":
                "현재 이메일을 받지 않고 계십니다",
            "You're not receiving emails": "이메일을 받지 않고 계십니다",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "최근 메시지를 스팸으로 표시했거나 메시지를 제공된 이메일 주소로 전달할 수 없어 이메일을 받지 못하고 계십니다.",
            "You've successfully signed in.": "성공적으로 로그인되었습니다.",
            "You've successfully subscribed to": "",
            "Your account": "계정",
            "Your input helps shape what gets published.":
                "회원님의 의견은 게시물을 제작하는 것에 큰 도움이 됩니다.",
            "Your subscription will expire on {{expiryDate}}":
                "회원님의 구독은 {{expiryDate}}에 만료됩니다",
            "Your subscription will renew on {{renewalDate}}":
                "회원님의 구독은 {{renewalDate}}에 갱신됩니다",
            "Your subscription will start on {{subscriptionStart}}":
                "회원님의 구독은 {{subscriptionStart}}에 시작됩니다",
        },
        S1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "{{discount}}% хямдрал",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "{{trialDays}} өдөр үнэгүй",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Таны имэйл рүү нэвтрэх холбоосыг илгээлээ. Хэрвээ 3 минутын дотор ирэхгүй бол спамаа шалгана уу.",
            Account: "Бүртгэл",
            "Account settings": "Бүртгэлийн тохиргоо",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Үнэгүй туршилтын хугацаа дуусахад таны данснаас сонгосон багцын үнэ хасагдана. Гэвч та өмнө нь цуцлах боломжтой.",
            "Already a member?": "Бүртгэлтэй юу?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Буцах",
            "Back to Log in": "Нэвтрэх хэсэг рүү буцах",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "Захиалгаа цуцлах",
            "Cancellation reason": "Цуцалсан шалтгаан",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "Өөр багц сонгох",
            "Choose your newsletters": "Товхимолоо сонгох",
            "Click here to retry": "",
            Close: "Хаах",
            Comments: "Сэтгэгдлүүд",
            Complimentary: "",
            Confirm: "Баталгаажуулах",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "Үргэлжлүүлэх",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "Бүртгэлээ устгах",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "Бүргэлгүй юу?",
            Edit: "",
            Email: "Имэйл",
            "Email newsletter": "",
            "Email preference updated.": "Имэйлийн тохиргоо шинэчлэгдлээ.",
            "Email preferences": "Имэйлийн тохиргоо",
            Emails: "Имэйлүүд",
            "Emails disabled": "Имэйлийг идэхгүй болгосон",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Тусламж",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment":
                "Хэн нэгэн таны сэтгэгдэлд хариу бичих үед мэдэгдэх",
            "Give feedback on this post": "Энэ нийтлэлд саналаа өгөх",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Таалагдсангүй",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Удирдах",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Сарын",
            "More like this": "Таалагдлаа",
            Name: "Нэр",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Имэйл ирээгүй юу?",
            "Now check your email!": "Одоо имэйлээ шалгана уу!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Үнэ",
            "Re-enable emails": "Имэйлийг дахин идэвхжүүлэх",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Дахин оролдох",
            Save: "Хадгалах",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Нэвтрэх холбоосыг илгээж байна...",
            "Sending...": "Илгээж байна...",
            "Show all": "",
            "Sign in": "Нэвтрэх",
            "Sign out": "",
            "Sign up": "Бүртгүүлэх",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "{{amount}} өдрийн үнэгүй туршилтыг эхлүүлэх",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Саналаа илгээх",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Захиалгыг амжилттай цуцаллаа",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Саналаа илгээсэнд баярлалаа!",
            "That didn't go to plan": "",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "Энэхүү сайт руу зөвхөн урилгаар нэвтрэх боломжтой тул та админд нь хандана уу.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Тан руу илгээсэн баталгаажуулах холбоос дээр дарж бүртгэлээ дуусгана уу. Хэрвээ 3 минутын дотор ирэхгүй бол спамаа шалгана уу!",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails": "Бүх имэйлийг зогсоох",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Имэйлийг зогсоосон ч таны {{title}} төлбөртэй захиалга цуцлагдахгүй",
            Update: "",
            "Update your preferences": "Тохиргоогоо шинэчлэх",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Энэхүү имэйл хаяг олдоогүй учир захиалгыг цуцлах боломжгүй. Та сайтын админд хандана уу.",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Жилийн",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed":
                "Таны захиалга амжилттай дахин идэвхжлээ",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Таны имэйл хүлээж авахгүй байгаа шалтгаан нь нэг бол та аль нэг имэйлийг спам гэж тэмдэглэсэн, эсвэл таны хаяг имэйл хүлээж авах боломжгүй байна.",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "Таны бүртгэл",
            "Your input helps shape what gets published.":
                "Таны санал дараа дараагийн нийтлэлийг илүү чанартай болгоход туслана",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        E1 = {
            "{{amount}} days free": "Percuma {{amount}} hari",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} potongan untuk {{number}} bulan pertama.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} potongan untuk {{period}} pertama.",
            "{{amount}} off forever.": "{{amount}} potongan selama-lamanya.",
            "{{discount}}% discount": "{{discount}}% diskaun",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} tidak akan menerima newsletter {{newsletterName}} lagi.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} tidak akan menerima email apabila seseorang membalas komen anda.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} tidak akan menerima newsletter ini lagi.",
            "{{trialDays}} days free": "Percuma {{trialDays}} hari",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Pautan log masuk telah dihantar ke peti masuk anda. Jika ia tidak sampai dalam masa 3 minit, pastikan anda menyemak folder spam anda.",
            Account: "Akaun",
            "Account settings": "Tetapan akaun",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Selepas tempoh percubaan percuma tamat, anda akan dicaj harga biasa untuk peringkat yang anda pilih. Anda sentiasa boleh membatalkan sebelum itu.",
            "Already a member?": "Sudah menjadi ahli?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Ralat yang tidak dijangka berlaku. Sila cuba lagi atau <a>hubungi sokongan</a> jika ralat berterusan.",
            Back: "Kembali",
            "Back to Log in": "Kembali ke Log masuk",
            "Billing info": "Maklumat bil",
            "Black Friday": "",
            "Cancel anytime.": "Batalkan bila-bila masa.",
            "Cancel subscription": "Batalkan langganan",
            "Cancellation reason": "Alasan pembatalan",
            Change: "Ubah",
            "Check spam & promotions folders": "Semak folder spam & promosi",
            "Check with your mail provider": "Semak dengan pembekal mel anda",
            Choose: "Pilih",
            "Choose a different plan": "Pilih pelan yang berbeza",
            "Choose your newsletters": "Pilih newsletter anda",
            "Click here to retry": "Klik di sini untuk cuba semula",
            Close: "Tutup",
            Comments: "Komen",
            Complimentary: "",
            Confirm: "Sahkan",
            "Confirm cancellation": "Sahkan pembatalan",
            "Confirm subscription": "Sahkan langganan",
            "Contact support": "Hubungi sokongan",
            Continue: "Teruskan",
            "Continue subscription": "Teruskan langganan",
            "Could not sign in. Login link expired.":
                "Tidak dapat log masuk. Pautan log masuk tamat tempoh.",
            "Could not update email! Invalid link.":
                "Tidak dapat mengemas kini e-mel! Pautan tidak sah.",
            "Create a new contact": "Cipta kenalan baru",
            "Current plan": "Pelam semasa",
            "Delete account": "Padam akaun",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Tidak bermaksud untuk melakukan ini? Urus pilihan anda <butang>di sini</button>.",
            "Don't have an account?": "Tiada akaun?",
            Edit: "Sunting",
            Email: "E-mel",
            "Email newsletter": "Newsletter e-mel",
            "Email preference updated.": "Emel pilihan dikemas kini.",
            "Email preferences": "Emel pilihan",
            Emails: "E-mel",
            "Emails disabled": "E-mel dilumpuhkan",
            "Ends {{offerEndDate}}": "Tamat pada {{offerEndDate}}",
            Error: "Ralat",
            "Expires {{expiryDate}}": "Luput pada {{expiryDate}}",
            Forever: "Selamanya",
            "Free Trial – Ends {{trialEnd}}":
                "Percubaan Percuma – Tamat {{trialEnd}}",
            "Get help": "Dapatkan bantuan",
            "Get in touch for help": "Hubungi untuk mendapatkan bantuan",
            "Get notified when someone replies to your comment":
                "Dapatkan pemberitahuan apabila seseorang membalas komen anda",
            "Give feedback on this post":
                "Berikan maklum balas mengenai pos ini",
            "Help! I'm not receiving emails":
                "Tolong! Saya tidak menerima e-mel",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Jika newsletter ditanda sebagai spam, e-mel akan dilumpuhkan secara automatik untuk alamat tersebut untuk memastikan anda tidak lagi menerima sebarang mesej yang tidak diingini.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Jika aduan spam itu tidak disengajakan, atau anda ingin mula menerima e-mel semula, anda boleh melanggan semula e-mel dengan mengklik butang pada skrin sebelumnya.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Jika anda membatalkan langganan anda sekarang, anda akan terus mendapat akses sehingga {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Jika anda mempunyai akaun e-mel korporat atau kerajaan, hubungi jabatan IT anda dan minta mereka membenarkan e-mel diterima daripada {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Jika anda ingin mula menerima e-mel semula, langkah terbaik seterusnya ialah menyemak alamat e-mel anda pada fail untuk sebarang isu dan kemudian klik langgan semula pada skrin sebelumnya.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Jika anda tidak menerima newsletter e-mel yang anda langgan, berikut adalah beberapa perkara untuk diperiksa.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Jika anda telah menyelesaikan semua semakan ini dan anda masih tidak menerima e-mel, anda boleh menghubungi untuk mendapatkan sokongan dengan menghubungi {{supportAddress}}.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Sekiranya kegagalan kekal diterima semasa cuba menghantar newsletter, e-mel akan dilumpuhkan pada akaun.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Dalam klien e-mel anda tambah {{senderEmail}} pada senarai kenalan anda. Ini memberi isyarat kepada pembekal mel anda bahawa e-mel yang dihantar dari alamat ini harus dipercayai.",
            "Less like this": "Kurang macam ni",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Pastikan e-mel tidak tiba-tiba masuk ke dalam folder Spam atau Promosi peti masuk anda. Jika ya, klik pada "Tandakan sebagai bukan spam" dan/atau "Alih ke peti masuk".',
            Manage: "Urus",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Bulanan",
            "More like this": "Lebih seperti ini",
            Name: "Nama",
            "Need more help? Contact support":
                "Perlukan bantuan lagi? Hubungi sokongan",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Newsletter boleh dilumpuhkan pada akaun anda atas dua sebab: E-mel sebelumnya telah ditandakan sebagai spam atau percubaan menghantar e-mel mengakibatkan kegagalan kekal (bounce).",
            "Not receiving emails?": "Tidak menerima e-mel?",
            "Now check your email!": "Semak e-mel anda sekarang!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Setelah melanggan semula, jika anda masih tidak melihat e-mel dalam peti masuk anda, semak folder spam anda. Sesetengah pembekal peti masuk menyimpan rekod aduan spam sebelumnya dan akan terus membenderakan e-mel. Jika ini berlaku, tandakan surat berita terkini sebagai 'Bukan spam' untuk mengalihkannya kembali ke peti masuk utama anda.",
            "Permanent failure (bounce)": "Kegagalan kekal (bounce)",
            Plan: "Pelan",
            "Plan checkout was cancelled.":
                "Daftar keluar pelan telah dibatalkan.",
            "Plan upgrade was cancelled.": "Naik taraf pelan telah dibatalkan.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields":
                "Sila isikan medan yang diperlukan",
            Price: "Harga",
            "Re-enable emails": "Membolehkan semula e-mel",
            Recommendations: "",
            "Renews at {{price}}.": "Perbaharui pada {{price}}.",
            Retry: "Cuba semula",
            Save: "Simpan",
            "Send an email and say hi!": "Hantar e-mel dan katakan hai!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Hantar e-mel kepada {{senderEmail}} dan katakan hai. Ini juga boleh membantu memberi isyarat kepada pembekal mel anda bahawa e-mel ke dan dari alamat ini harus dipercayai.",
            "Sending login link...": "Menghantar pautan log masuk...",
            "Sending...": "Menghantar...",
            "Show all": "",
            "Sign in": "Log masuk",
            "Sign out": "Log keluar",
            "Sign up": "Daftar",
            "Signup error: Invalid link": "Ralat daftar: Pautan tidak sah",
            "Sorry, that didn’t work.": "Maaf, itu tidak berfungsi.",
            "Spam complaints": "Aduan spam",
            "Start {{amount}}-day free trial":
                "Mulakan percubaan percuma {{amount}} hari",
            "Starting {{startDate}}": "Mulai {{startDate}}",
            "Starting today": "Mulai hari ini",
            "Submit feedback": "Serahkan maklum balas",
            Subscribe: "Langgan",
            Subscribed: "Dilanggan",
            Success: "Berjaya",
            "Success! Check your email for magic link to sign-in.":
                "Berjaya! Semak e-mel anda untuk magic link untuk log masuk.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Berjaya! Akaun anda telah diaktifkan sepenuhnya, anda kini mempunyai akses ke semua kandungan.",
            "Success! Your email is updated.":
                "Berjaya! E-mel anda dikemas kini.",
            "Successfully unsubscribed": "Pemberhentian langganan berjaya",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Terima kasih atas maklum balas!",
            "That didn't go to plan":
                "Itu tidak berjalan sesuai dengan rancangan",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "Alamat e-mel yang kami miliki untuk anda adalah {{memberEmail}} — jika itu tidak betul, anda boleh mengemas kini di <button>ruang tetapan akaun</button> anda.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Terdapat masalah menghantar maklum balas anda. Sila cuba sebentar lagi.",
            "This site is invite-only, contact the owner for access.":
                "Laman web ini hanya untuk jemputan, hubungi pemilik untuk akses.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Untuk melengkapkan pendaftaran, klik pautan pengesahan di peti masuk anda. Jika ia tidak tiba dalam masa 3 minit, semak folder spam anda!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Cuba secara percuma selama {{amount}} hari, kemudian {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Buka akses ke semua newsletter dengan menjadi pelanggan berbayar.",
            "Unsubscribe from all emails":
                "Berhenti langganan dari semua e-mel",
            Unsubscribed: "Langganan diberhentikan",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Memberhentikan langganan dari e-mel tidak akan membatalkan langganan berbayar anda ke {{title}}",
            Update: "Kemas kini",
            "Update your preferences": "Kemas kini keutamaan anda",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Sahkan jika alamat e-mel anda betul",
            "View plans": "Lihat pelan",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Kami tidak dapat membatalkan langganan anda kerana alamat e-mel tidak ditemui. Sila hubungi pemilik laman web.",
            "Welcome back, {{name}}!": "Selamat kembali, {{name}}!",
            "Welcome back!": "Selamat kembali!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Apabila peti masuk gagal menerima e-mel, ia biasanya disebut sebagai bounce. Dalam banyak kes, ini hanya sementara. Walau bagaimanapun, dalam beberapa kes, e-mel bounce boleh dikembalikan sebagai kegagalan kekal apabila alamat e-mel tidak sah atau tidak wujud.",
            "Why has my email been disabled?":
                "Mengapa e-mel saya telah dilumpuhkan?",
            Yearly: "Tahunan",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Anda kini mempunyai keahlian percuma, naik taraf ke langganan berbayar untuk akses penuh.",
            "You have been successfully resubscribed":
                "Anda telah berjaya melanggan semula",
            "You're currently not receiving emails":
                "Anda kini tidak menerima e-mel",
            "You're not receiving emails": "Anda tidak menerima e-mel",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Anda tidak menerima e-mel kerana anda sama ada menandai mesej terkini sebagai spam, atau kerana mesej tidak dapat dihantar ke alamat e-mel yang diberikan.",
            "You've successfully signed in.": "Anda telah berjaya log masuk.",
            "You've successfully subscribed to": "",
            "Your account": "Akaun anda",
            "Your input helps shape what gets published.":
                "Input anda membantu membentuk apa yang diterbitkan.",
            "Your subscription will expire on {{expiryDate}}":
                "Langganan anda akan tamat tempoh pada {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Langganan anda akan diperbaharui pada {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Langganan anda akan bermula pada {{subscriptionStart}}",
        },
        C1 = {
            "{{amount}} days free": "{{amount}} dagen gratis",
            "{{amount}} off": "{{amount}} korting",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} korting voor de eerste {{number}} maanden.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} korting voor de eerste {{period}}.",
            "{{amount}} off forever.": "{{amount}} korting voor altijd.",
            "{{discount}}% discount": "{{discount}}% korting",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "{{trialDays}} dagen gratis",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Je hebt een email met een login link ontvangen. Check je spamfolder als hij niet binnen de 3 minuten aankomt.",
            Account: "Account",
            "Account settings": "Gegevens",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Na de proefperiode zal het normale tarief in rekening worden gebracht voor het door jou gekozen abonnement.",
            "Already a member?": "Al lid?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Terug",
            "Back to Log in": "Terug naar inloggen",
            "Billing info": "Betaalgegevens",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Altijd opzegbaar.",
            "Cancel subscription": "Abonnement opzeggen",
            "Cancellation reason": "Reden voor opzegging",
            Change: "Wijzigen",
            "Check spam & promotions folders": "Check je spam folders",
            "Check with your mail provider": "Check bij je e-mail provider",
            Choose: "Kies",
            "Choose a different plan": "Kies een ander abonnement",
            "Choose your newsletters": "Kies jouw nieuwsbrieven",
            "Click here to retry": "Click hier om opnieuw te proberen",
            Close: "Sluiten",
            Comments: "Reacties",
            Complimentary: "Gratis",
            Confirm: "Bevestigen",
            "Confirm cancellation": "Bevestig opzegging",
            "Confirm subscription": "Bevestig abonnement",
            "Contact support": "",
            Continue: "Doorgaan",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "Huidig abonnement",
            "Delete account": "Account verwijderen",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "Heb je nog geen account?",
            Edit: "Bewerken",
            Email: "E-mail",
            "Email newsletter": "Nieuwsbrief",
            "Email preference updated.": "E-mailinstellingen aanpassen",
            "Email preferences": "E-mailinstellingen",
            Emails: "E-mails",
            "Emails disabled": "E-mails zijn uitgeschakeld",
            "Ends {{offerEndDate}}": "Eindigt op {{offerEndDate}}",
            Error: "Fout",
            "Expires {{expiryDate}}": "Verloopt op {{expiryDate}}",
            Forever: "Voor altijd",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Lees meer",
            "Get in touch for help": "Neem contact op voor hulp",
            "Get notified when someone replies to your comment":
                "Blijf op de hoogte als iemand op jouw reactie reageert",
            "Give feedback on this post": "Deel je mening over dit artikel",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Minder hiervan",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Beheer",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Maandelijks",
            "More like this": "Meer hiervan",
            Name: "Naam",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Ontvang je geen e-mails?",
            "Now check your email!": "Check nu je e-mail!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Prijs",
            "Re-enable emails": "E-mails weer inschakelen",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Opnieuw proberen",
            Save: "Opslaan",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Inloglink versturen...",
            "Sending...": "Versturen...",
            "Show all": "",
            "Sign in": "Inloggen",
            "Sign out": "Uitloggen",
            "Sign up": "Registreren",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "Start gratis je {{amount}}-daagse proefperiode",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Deel je feedback",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Succesvol uitgeschreven",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Bedankt voor je feedback!",
            "That didn't go to plan": "Er ging iets mis",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "Deze site is alleen toegankelijk op uitnodiging, neem contact op met de eigenaar.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Klik op de bevestigingslink in de e-mail om je registratie af te ronden. Check ook je spamfolder als hij niet binnen de 3 minuten aankomt.",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails": "Uitschrijven voor alles",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Je betaalde abonnement voor {{title}} wordt niet geannuleerd als je je uitschrijft voor e-mails",
            Update: "",
            "Update your preferences": "Voorkeuren aanpassen",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Het is niet gelukt om je uit te schrijven, omdat je e-mailadres niet is gevonden. Neem contact met ons op.",
            "Welcome back, {{name}}!": "Welkom terug, {{name}}!",
            "Welcome back!": "Welkom terug!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Jaarlijks",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed":
                "Je bent weer succesvol geabonneerd",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Je ontvangt geen e-mails omdat je ofwel een recent bericht als spam had gemarkeerd, of omdat de berichten niet verzonden konden worden naar jouw e-mailadres.",
            "You've successfully signed in.": "Je bent succesvol ingelogd.",
            "You've successfully subscribed to":
                "Je bent succesvol geabonneerd op",
            "Your account": "Jouw account",
            "Your input helps shape what gets published.":
                "Jouw mening helpt bepalen wat er gepubliceerd wordt.",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        $1 = {
            "{{amount}} days free": "{{amount}} dagar gratis",
            "{{amount}} off": "avslag",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} dei første {{number}} månadane.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} avslag den første {{period}}.",
            "{{amount}} off forever.": "{{amount}} avslag for alltid.",
            "{{discount}}% discount": "% rabatt",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} vil ikkje lenger motta {{newsletterName}} nyheitsbrev.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} vil ikkje lenger motta e-post når nokon svarar på kommentarar.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} vil ikkje lenger motta dette nyheitsbrevet.",
            "{{trialDays}} days free": "{{trialDays}} dagar gratis",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Ei innlogginslenke har blitt sendt til innboksen din. Sjekk søppelposten din om lenka ikkje kjem innan 3 minutt.",
            Account: "Brukar",
            "Account settings": "Brukarinnstillingar",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Når den gratis prøveperioden er over vil du bli belasta den normale prisen for abonnementet du har vald. Du kan alltids avslutta abonnementet au.",
            "Already a member?": "Allereie medlem?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Ein uventa feil har skjedd. Ver gild å prøv igjen eller <a>ta kontakt</a> viss feilen fortset.",
            Back: "Tilbake",
            "Back to Log in": "Tilbake til innlogginga",
            "Billing info": "Betalingsinfo",
            "Black Friday": "",
            "Cancel anytime.": "Kanseller kor tid som helst.",
            "Cancel subscription": "Avslutt abonnement",
            "Cancellation reason": "Grunn for avslutting",
            Change: "Endra",
            "Check spam & promotions folders": "Sjekk søppelpostmappa di",
            "Check with your mail provider": "Sjekk med e-postleverandøren din",
            Choose: "Vel",
            "Choose a different plan": "Vel eit anna abonnement",
            "Choose your newsletters": "Vel nyheitsbrevet ditt",
            "Click here to retry": "Klikk her for å prøva på ny",
            Close: "Lukk",
            Comments: "Kommentarar",
            Complimentary: "Gåve",
            Confirm: "Bekreft",
            "Confirm cancellation": "Bekreft avslutting",
            "Confirm subscription": "Bekreft abonnement",
            "Contact support": "Få hjelp",
            Continue: "Fortset",
            "Continue subscription": "Fortset abonnement",
            "Could not sign in. Login link expired.":
                "Kunne ikkje logga inn. Innlogginslenka er utgått.",
            "Could not update email! Invalid link.":
                "Kunne ikkje oppdatera e-post! Ugyldig lenke.",
            "Create a new contact": "Lag ein ny kontakt",
            "Current plan": "Noverande abonnement",
            "Delete account": "Slett brukar",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Var det ikkje meininga å gjera dette? Du kan endra preferansane dine <button>her</button>.",
            "Don't have an account?": "Har du ikkje ein brukar?",
            Edit: "Endra",
            Email: "E-post",
            "Email newsletter": "E-post nyheitsbrev",
            "Email preference updated.":
                "E-post preferansane dine er oppdatert.",
            "Email preferences": "E-post preferansar.",
            Emails: "E-postar.",
            "Emails disabled": "E-postar skrudd av",
            "Ends {{offerEndDate}}": "Sluttar {{offerEndDate}}",
            Error: "Feil",
            "Expires {{expiryDate}}": "Går ut {{expiryDate}}",
            Forever: "For evig",
            "Free Trial – Ends {{trialEnd}}":
                "Gratis prøveperiode – sluttar {{trialEnd}}",
            "Get help": "Få hjelp",
            "Get in touch for help": "Ta kontakt for å få hjelp",
            "Get notified when someone replies to your comment":
                "Få varsler når nokon svarar på kommenten din",
            "Give feedback on this post":
                "Gje tilbakemeldinger på denne artikkelen",
            "Help! I'm not receiving emails": "Hjelp! Eg får ikkje e-postar",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Viss eit nyheitsbrev er markert som søppelpost vil dei automatisk bli avslutta for den adressa, slik at du ikkje får uønska e-postar.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Viss søppelpost-klagen var med eit uhell, eller du ønsker å byrja å få e-postar frå oss igjen, kan du abonnera på nyheitsbrev igjen ved å klikka knappen på førre skjerm.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Vis du avslutter abonnementet no, vil du framleis ha tilgang fram til {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Viss du har har e-post hos ein bedrift kan du spørra IT-avdelinga om dei kan tillata e-postar frå {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Viss du vil få e-postar igjen, er det enklaste å sjekka e-postadressa du har gitt oss for feil, og så abonnera igjen ved å klikka resubscribe på førre skjerm.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Viss du ikkje mottar nyheitsbrevet du har abonnert på, kan du prøva dette. ",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Viss du har fullført desse stega og framleis ikkje får nyheitsbrev, kan du ta kontakt med oss på {{supportAddress}}.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "I tilfelle ein permanent feil mottas ved forøsk på å senda eit nyheitsbrev vil e-poster bli deaktivert på kontoen.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Legg til {{senderEmail}} til e-posten din si kontaktliste. Dette signaliserer til leverandøren din at e-poster frå denne adressa er til å stola på.",
            "Less like this": "Mindre som dette",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Pass på at e-postane ikkje ender opp i spam-mappa. Viss dei gjer, marker dei anten som "Dette er ikkje spam" og/eller "Flytt til innboks".',
            Manage: "Innstillinger",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Månadleg",
            "More like this": "Meir som dette",
            Name: "Namn",
            "Need more help? Contact support":
                "Treng du meir hjelp? Ta kontakt med brukarstøtte",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Nyheitsbrev kan bli skrudd av for brukaren din av to grunner: Ein tidlegare e-post har blitt markert som spam. Eller så har eit forsøk på å senda ein e-post resultert i ein permanent feil.",
            "Not receiving emails?": "Får du ikkje e-postar?",
            "Now check your email!": "Sjekk e-posten din!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Sjekk spam-mappa di om du framleis ikkje ser e-postane etter å ha abonnert på ny. Nokon e-postleverandørar kan flagga e-postar som spam basert på tidlegare e-postar. Viss dette skjer, marker den siste du mottok i spam-mappa som 'ikkje spam' og flytt tilbake til innboksen din.",
            "Permanent failure (bounce)": "Permanent feil",
            Plan: "Abonnement",
            "Plan checkout was cancelled.": "Betaling kansellert.",
            "Plan upgrade was cancelled.": "Oppgradering kansellert.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields":
                "Ver gilde og fyll inn dei obligatoriske felta",
            Price: "Pris",
            "Re-enable emails": "Aktiver e-postar på ny",
            Recommendations: "",
            "Renews at {{price}}.": "Forynast til {{price}}.",
            Retry: "Prøv på ny",
            Save: "Lagra",
            "Send an email and say hi!": "Send ein e-post og sei hei!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Send ein e-post til {{senderEmail}} og sei hallo. Dette kan også hjelpa å signalisera for leverandøren at denne e-postadressa er trygg.",
            "Sending login link...": "Sender innloggingslenke...",
            "Sending...": "Sender...",
            "Show all": "",
            "Sign in": "Logg inn",
            "Sign out": "Logg ut",
            "Sign up": "Registrer deg",
            "Signup error: Invalid link": "Registreringsfeil: Ugyldig lenke",
            "Sorry, that didn’t work.": "Beklagar, det verka ikkje.",
            "Spam complaints": "Spamklagar",
            "Start {{amount}}-day free trial":
                "Start {{amount}}-dagar gratis prøveperiode",
            "Starting {{startDate}}": "Starter {{startDate}}",
            "Starting today": "Starter idag",
            "Submit feedback": "Gje oss tilbakemeldinger",
            Subscribe: "Abonner",
            Subscribed: "Abonnert",
            Success: "Vellykka",
            "Success! Check your email for magic link to sign-in.":
                "Vellykka! Sjekk e-posten din for ei innlogginslenke.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Vellykka! Brukaren din er aktivert, du har no tilgang til alt innhald.",
            "Success! Your email is updated.":
                "Vellykka! E-posten din er oppdatert.",
            "Successfully unsubscribed": "Vellykka kansellering.",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Takk for tilbakemeldingen!",
            "That didn't go to plan": "Det gjekk ikkje etter planen",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "E-postadressa me har på deg er {{memberEmail}} – viss det ikkje er riktig, kan du oppdatera i <button>brukarinnstillingane</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Det var eit problem med å senda tilbakemeldinga di. Vennligst prøv igjen litt seinare.",
            "This site is invite-only, contact the owner for access.":
                "Denne sida er kun for inviterte, ta kontakt med eigaren for tilgang.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Klikk på bekreftelseslenka i innboksen din for å fullføra registreringa. Sjekk spam-mappa di om lenka ikkje har kome innan 3 minutt.",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Prøv gratis i {{amount}} dagar, deretter {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Få tilgang til alle nyheitsbreva med å bli ein betalande abonnent.",
            "Unsubscribe from all emails": "Slutt å motta e-postar",
            Unsubscribed: "Abonnement avslutta",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Å avslutta e-postabonnementa vil ikkje kansellera det betalta abonnementet ditt til {{title}}",
            Update: "Oppdater",
            "Update your preferences": "Oppdater preferansane dine",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Bekreft at e-posten din er riktig",
            "View plans": "Sjå abonnementa",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Me kunne ikkje avslutta abonnementet ditt då me ikkje fann e-postadressa di. Vennligst ta kontakt med eigaren av sida.",
            "Welcome back, {{name}}!": "Velkommen tilbake, {{name}}!",
            "Welcome back!": "Velkommen tilbake!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Når ein innboks ikkje klarar å akseptera ein e-post blir det kalla ein bounce. I nokre tilfelle blir ein bounce registrert som ein permanent feil når ein e-postadresse er ugyldig eller ikkje eksisterer.",
            "Why has my email been disabled?":
                "Kvifor har e-posten min blitt deaktivert?",
            Yearly: "Årleg",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "For augneblikket har du eit gratis medlemsskap. Oppgrader til eit betalande for å få full tilgang.",
            "You have been successfully resubscribed": "No abonnerer du igjen",
            "You're currently not receiving emails":
                "For augneblikket mottek du ingen e-postar",
            "You're not receiving emails": "Du mottek ikkje e-postar",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Du mottar ikkje e-postar. Anten fordi du har markert dei som spame, eller fordi dei ikkje kan bli levert til e-posten du har gitt oss.",
            "You've successfully signed in.": "Vellykka innlogging.",
            "You've successfully subscribed to": "",
            "Your account": "Din brukar",
            "Your input helps shape what gets published.":
                "Dine tilbakemeldinger hjelper oss å forma tilbodet vårt.",
            "Your subscription will expire on {{expiryDate}}":
                "Ditt abonnement går ut den {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Ditt abonnement vil fornyast den {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Ditt abonnement vil byrja den {{subscriptionStart}}",
        },
        j1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "{{discount}}% rabatt",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "{{trialDays}} dager gratis",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "En påloggingslenke har blitt sendt til innboksen din. Hvis den ikke kommer innen 3 minutter, må du sjekke søppelposten din.",
            Account: "Konto",
            "Account settings": "Kontoinnstillinger",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Etter at en gratis prøveperiode er over, vil du bli belastet den vanlige prisen for nivået du har valgt. Du kan alltid avbryte før det.",
            "Already a member?": "Allerede medlem?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Tilbake",
            "Back to Log in": "Tilbake til innlogging",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "Avbryt abonnement",
            "Cancellation reason": "Grunn til avbryting",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "Velg et annet nivå",
            "Choose your newsletters": "Velg dine nyhetsbrev",
            "Click here to retry": "",
            Close: "Lukk",
            Comments: "Kommentarer",
            Complimentary: "",
            Confirm: "Bekreft",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "Fortsett",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "Slett konto",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "Har du ikke konto?",
            Edit: "",
            Email: "Epost",
            "Email newsletter": "",
            "Email preference updated.": "Innstillinger for epost oppdatert",
            "Email preferences": "Innstillinger for epost",
            Emails: "Epost",
            "Emails disabled": "Epost deaktivert",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Få hjelp",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment":
                "Få varsel dersom noen svarer på kommentaren din",
            "Give feedback on this post":
                "Gi tilbakemelding på dette innlegget",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Mindre som dette",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Administrer",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Månedlig",
            "More like this": "Mer som dette",
            Name: "Navn",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Mottar du ikke epost?",
            "Now check your email!": "Sjekk eposten din!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Pris",
            "Re-enable emails": "Re-aktiver epost",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Prøv på nytt",
            Save: "Lagre",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Sender påloggingslenke",
            "Sending...": "Sender...",
            "Show all": "",
            "Sign in": "Logg inn",
            "Sign out": "",
            "Sign up": "Opprett bruker",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "Start gratis prøveperiode på {{amount}} dager",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Send tilbakemelding",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Avmelding vellykket",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Takk for tilbakemeldingen!",
            "That didn't go to plan": "Det gikk ikke som planlagt",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "Denne siten er kun fo inviterte. Kontakt eieren for invitasjon.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "For å fullføre registreringen, klikk på bekreftelseslenken i innboksen din. Hvis den ikke kommer innen 3 minutter, må du sjekke søppelposten din!",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails": "Meld deg av mottak av all epost",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Å melde seg av e-poster vil ikke avbryte abonnementet ditt på {{title}}",
            Update: "",
            "Update your preferences": "Oppdater dine valg",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Vi kunne ikke melde deg av siden e-postadressen ikke ble funnet. Vennligst kontakt nettstedseieren.",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Årlig",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed":
                "Du har blitt meldt på igjen",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Du mottar ikke e-post fordi du enten nylig har merket en melding som spam, eller fordi meldinger ikke kunne leveres til den oppgitte e-postadressen din.",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "Din konto",
            "Your input helps shape what gets published.":
                "Din tilbakemelding bidrar til å forme hva som blir publisert.",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        P1 = {
            "{{amount}} days free": "{{amount}} dni za darmo",
            "{{amount}} off": "Rabat {{amount}}",
            "{{amount}} off for first {{number}} months.":
                "Rabat {{amount}} na pierwsze {{number}} miesiące.",
            "{{amount}} off for first {{period}}.":
                "Rabat {{amount}} na pierwszy {{period}}.",
            "{{amount}} off forever.": "Rabat {{amount}} na zawsze",
            "{{discount}}% discount": "Rabat {{discount}}%",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} nie będzie już otrzymywać newslettera {{newsletterName}}.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} nie będzie już otrzymywać wiadomości, gdy ktoś odpowie na Twój komentarz.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} nie będzie już otrzymywać tego newslettera.",
            "{{trialDays}} days free": "{{trialDays}} darmowych dni",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Link do logowania został wysłany do twojej skrzynki odbiorczej. Jeśli nie dotrze w ciągu 3 minut, sprawdź swój folder spamu.",
            Account: "Konto",
            "Account settings": "Ustawienia konta",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Po zakończeniu okresu próbnego zostanie naliczona regularna opłata za wybrany poziom subskrypcji. Zawsze możesz anulować subskrypcję zanim to nastąpi.",
            "Already a member?": "Masz już konto?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Wystąpił nieoczekiwany błąd. Spróbuj ponownie lub <a>skontaktuj z pomocą techniczną</a> jeśli błąd będzie nadal występował.",
            Back: "Wstecz",
            "Back to Log in": "Wróć do logowania",
            "Billing info": "Informacje rozliczeniowe",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Anuluj w dowolnej chwili.",
            "Cancel subscription": "Anuluj subskrypcję",
            "Cancellation reason": "Powód anulowania",
            Change: "Zmień",
            "Check spam & promotions folders":
                "Sprawdź foldery spamu i promocji",
            "Check with your mail provider": "Skontaktuj się z dostawcą poczty",
            Choose: "Wybierz",
            "Choose a different plan": "Wybierz inny plan",
            "Choose your newsletters": "Wybierz swoje newslettery",
            "Click here to retry": "Kliknij tu żeby potwierdzić",
            Close: "Zamknij",
            Comments: "Komentarze",
            Complimentary: "Za darmo",
            Confirm: "Potwierdź",
            "Confirm cancellation": "Potwierdź rezygnację",
            "Confirm subscription": "Potwierdź subskrypcję",
            "Contact support": "Kontakt z pomocą techniczną",
            Continue: "Kontynuuj",
            "Continue subscription": "Kontynuuj subskrypcję",
            "Could not sign in. Login link expired.":
                "Nie można się zalogować. Link do logowania wygasł.",
            "Could not update email! Invalid link.":
                "Nie można zaktualizować adresu email! Nieprawidłowy link.",
            "Create a new contact": "Utwórz nowy kontakt",
            "Current plan": "Obecny plan",
            "Delete account": "Skasuj konto",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Nie chcesz tego robić? Zarządzaj preferencjami <button>tutaj</button>.",
            "Don't have an account?": "Nie masz jeszcze konta?",
            Edit: "Edytuj",
            Email: "Email",
            "Email newsletter": "Newsletter email",
            "Email preference updated.": "Ustawienia email zaktualizowane",
            "Email preferences": "Ustawienia email",
            Emails: "Emaile",
            "Emails disabled": "Wysyłanie emaili zablokowane",
            "Ends {{offerEndDate}}": "Kończy się {{offerEndDate}}",
            Error: "Błąd",
            "Expires {{expiryDate}}": "Wygasa {{expiryDate}}",
            Forever: "Na zawsze",
            "Free Trial – Ends {{trialEnd}}":
                "Bezpłatny okres próbny - Koniec {{trialEnd}}",
            "Get help": "Uzyskaj pomoc",
            "Get in touch for help": "Skontaktuj się, aby uzyskać pomoc",
            "Get notified when someone replies to your comment":
                "Otrzymaj powiadomienie gdy ktoś odpowie na twój komentarz",
            "Give feedback on this post": "Oceń ten wpis",
            "Help! I'm not receiving emails": "Pomocy! Nie otrzymuję emaili",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Jeśli newsletter zostanie oznaczony jako spam, wiadomości email są automatycznie wyłączane dla tego adresu, aby upewnić się, że nie otrzymujesz już żadnych niechcianych wiadomości.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Jeśli skarga dotycząca spamu była przypadkowa lub chcesz ponownie zacząć otrzymywać wiadomości, możesz raz jeszcze zasubskrybować, klikając przycisk na poprzednim ekranie.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Jeśli anulujesz subskrypcję teraz, będziesz mieć do niej dostęp do  {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Jeśli masz firmowe lub rządowe konto emial, skontaktuj się z działem IT i poproś o zezwolenie na odbieranie wiadomości od {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Jeśli chcesz ponownie zacząć otrzymywać wiadomości, najlepiej sprawdź poprawność swojego adres email, a następnie kliknij przycisk ponownej subskrypcji na poprzednim ekranie.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Jeśli nie otrzymujesz subskrybowanego newsletter, oto kilka rzeczy do sprawdzenia.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Jeśli wykonałeś wszystkie te czynności i nadal nie otrzymujesz wiadomości, możesz skontaktować się z pomocą techniczną pod tym adresem {{supportAddress}}.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "W przypadku trwałego niepowodzenia podczas próby wysłania newslettera wiadomości email zostaną wyłączone na koncie.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "W kliencie poczty dodaj {{senderEmail}} do listy kontaktów. Sygnalizuje to dostawcy poczty, że wiadomości wysyłane z tego adresu powinny być zaufane.",
            "Less like this": "Mniej podobnych",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Upewnij się, że emaile nie trafiają przypadkowo do folderów Spam lub Promocje w skrzynce odbiorczej. Jeśli tak jest, kliknij na "Oznacz jako nie spam" i/lub "Przenieś do skrzynki odbiorczej".',
            Manage: "Zarządzaj",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Miesięcznie",
            "More like this": "Więcej podobnych",
            Name: "Imię",
            "Need more help? Contact support":
                "Potrzebujesz pomocy? Skontaktuj się z pomocą techniczną",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Newslettery mogą zostać wyłączone na Twoim koncie z dwóch powodów: poprzedni email został oznaczony jako spam lub próba wysłania wiadomości zakończyła się niepowodzeniem (odesłaniem).",
            "Not receiving emails?": "Nie dostajesz emaili?",
            "Now check your email!": "Teraz sprawdź swoją pocztę!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "Trwała awaria (odesłanie emaila",
            Plan: "Plan",
            "Plan checkout was cancelled.": "Opłata za plan została anulowana.",
            "Plan upgrade was cancelled.":
                "Aktualizacja planu została anulowana.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "Wyśli maila pod adres {{supportAddress}} aby dostosować bezpłatną subskrypcję.",
            "Please fill in required fields": "Wypełnij wymagane pola",
            Price: "Cena",
            "Re-enable emails": "Włącz ponownie emaile",
            Recommendations: "",
            "Renews at {{price}}.": "Odnowi się w cenie {{price}}.",
            Retry: "Powtórz",
            Save: "Zapisz",
            "Send an email and say hi!": "Wyślij email i przywitaj się!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Wyślij email na adres {{senderEmail}} i przywitaj się. Może to również pomóc w zasygnalizowaniu dostawcy poczty, że wiadomości email wysyłane z i na ten adres powinny być zaufane.",
            "Sending login link...": "Wysyłanie linku do logowania...",
            "Sending...": "Wysyłanie...",
            "Show all": "",
            "Sign in": "Zaloguj się",
            "Sign out": "Wyloguj się",
            "Sign up": "Zarejestruj się",
            "Signup error: Invalid link":
                "Błąd rejestracji: Nieprawidłowy link",
            "Sorry, that didn’t work.": "Przepraszamy, to nie zadziałało.",
            "Spam complaints": "Skargi dotyczące spamu",
            "Start {{amount}}-day free trial":
                "Rozpocznij {{amount}}-dniowy okres próbny",
            "Starting {{startDate}}": "Rozpoczyna się od {{startDate}}",
            "Starting today": "Rozpoczyna się od dziś",
            "Submit feedback": "Wyślij ocenę",
            Subscribe: "Subskrybuj",
            Subscribed: "Zasubskrybowane",
            Success: "Sukces",
            "Success! Check your email for magic link to sign-in.":
                "Sukces! Sprawdź swój email, aby uzyskać link do logowania.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Sukces! Twoje konto zostało w pełni aktywowane, masz teraz dostęp do serwisu.",
            "Success! Your email is updated.":
                "Sukces! Twój email został zaktualizowany.",
            "Successfully unsubscribed": "Wypisanie udane",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Dziękujemy za ocenę!",
            "That didn't go to plan": "Coś poszło nie tak",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "Adres email, który mamy to {{memberEmail}} — jeśli nie jest poprawny, możesz go zaktualizować w swoich <button>ustawieniach konta</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Wystąpił problem z przesłaniem opinii. Spróbuj ponownie nieco później.",
            "This site is invite-only, contact the owner for access.":
                "Ta strona jest tylko na zaproszenie. Skontaktuj się z właścicielem, aby uzyskać dostęp.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Aby dokończyć rejestrację, kliknij w link przesłany na twoją skrzynkę pocztową. Jeśli nie dotrze  w ciągu 3 minut, sprawdź folder spamu!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Wypróbuj za darmo przez {{amount}} dnia, później {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Odblokuj dostęp do wszystkich biuletynów, zostając płatnym subskrybentem.",
            "Unsubscribe from all emails": "Wypisz się w wszystkich emaili",
            Unsubscribed: "Niezasubskrybowany",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Wypisanie się z otrzymywania emaili nie powoduje anulowania płatnej subskrypcji {{title}}",
            Update: "Zaktualizuj",
            "Update your preferences": "Zaktualizuj preferencje",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Sprawdź, czy Twój email jest poprawny",
            "View plans": "Zobacz plany",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Nie udało się wypisać, bo nie znaleziono adresu email. Skontaktuj się w właścicielem strony.",
            "Welcome back, {{name}}!": "Witamy ponownie, {{name}}!",
            "Welcome back!": "Witamy ponownie!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Gdy skrzynka odbiorcza nie akceptuje wiadomości email, jest to powszechnie nazywane odrzuceniem. W wielu przypadkach może to być tymczasowe. Jednak w niektórych przypadkach odesłana email może zostać zwrócony jako trwałe niepowodzenie, gdy adres jest nieprawidłowy lub nie istnieje.",
            "Why has my email been disabled?":
                "Dlaczego mój email został zablokowany?",
            Yearly: "Rocznie",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Obecnie posiadasz bezpłatny plan, uaktualnij do płatnej subskrypcji, aby uzyskać pełny dostęp",
            "You have been successfully resubscribed":
                "Zostałeś ponownie zapisany",
            "You're currently not receiving emails":
                "Obecnie nie otrzymujesz emaili",
            "You're not receiving emails": "Nie otrzymujesz emaili",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Nie otrzymujesz email, ponieważ oznaczyłeś ostatnią wiadomość jako spam lub nie udało się dostarczyć wiadomości na podany adres email.",
            "You've successfully signed in.": "Logowanie powiodło się.",
            "You've successfully subscribed to": "Pomyślnie zasubskrybowano",
            "Your account": "Twoje konto",
            "Your input helps shape what gets published.":
                "Twoja ocena pomoże nam lepiej kształtować nasz publikacje.",
            "Your subscription will expire on {{expiryDate}}":
                "Subskrypcja wygaśnie w dniu {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Subskrypcja zostanie odnowiona w dniu {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Subskrypcja rozpocznie się w dniu {{subscriptionStart}}",
        },
        _1 = {
            "{{amount}} days free": "{{amount}} dias gratuitos",
            "{{amount}} off": "Desconto de {{amount}}",
            "{{amount}} off for first {{number}} months.":
                "Desconto de {{amount}} nos primeiros {{number}} meses.",
            "{{amount}} off for first {{period}}.":
                "Desconto de {{amount}} durante o primeiro {{period}}.",
            "{{amount}} off forever.": "Desconto de {{amount}} para sempre.",
            "{{discount}}% discount": "{{discount}}% de desconto",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} deixará de receber a newsletter {{newsletterName}}.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} deixará de receber emails quando alguém responder aos seus comentários.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} deixará de receber esta newsletter.",
            "{{trialDays}} days free": "{{trialDays}} dias grátis",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Um link de acesso foi enviado para o teu email. Se o email não chegar dentro de 3 minutos, verifica a pasta de spam/lixo do teu email.",
            Account: "Conta",
            "Account settings": "Definições de conta",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Após o fim do teste grátis, será cobrado o valor normal para o nível escolhido. Podes sempre cancelar até esse momento para evitar ser cobrado.",
            "Already a member?": "Já és membro?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Ocorreu um erro inesperado. Por favor tente novamente ou <a>contacte o suporte</a> se o erro persistir.",
            Back: "Voltar",
            "Back to Log in": "Voltar ao login",
            "Billing info": "Informações de faturação",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Cancela a qualquer momento.",
            "Cancel subscription": "Cancelar subscrição",
            "Cancellation reason": "Motivo para o cancelamento",
            Change: "Alterar",
            "Check spam & promotions folders":
                "Verifique a pasta de spam e promoções",
            "Check with your mail provider":
                "Verifique com o seu serviço de email",
            Choose: "Escolher",
            "Choose a different plan": "Escolhe um plano diferente",
            "Choose your newsletters": "Escolhe as tuas newsletters",
            "Click here to retry": "Clique aqui para tentar novamente",
            Close: "Fechar",
            Comments: "Comentários",
            Complimentary: "Cortesia",
            Confirm: "Confirmar",
            "Confirm cancellation": "Confirmar cancelamento",
            "Confirm subscription": "Confirmar subscrição",
            "Contact support": "Contactar suporte",
            Continue: "Continuar",
            "Continue subscription": "Continuar subscrição",
            "Could not sign in. Login link expired.":
                "Não foi possível entrar. O ligação de login expirou.",
            "Could not update email! Invalid link.":
                "Não foi possível atualizar o email! Link inválido.",
            "Create a new contact": "Criar novo contacto",
            "Current plan": "Plano atual",
            "Delete account": "Eliminar a conta",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Não era essa a intenção? Gerir preferências <button>aqui</button>.",
            "Don't have an account?": "Não tem conta?",
            Edit: "Editar",
            Email: "Email",
            "Email newsletter": "",
            "Email preference updated.": "Preferências de email atualizadas.",
            "Email preferences": "Preferências de email",
            Emails: "Emails",
            "Emails disabled": "Email desativado",
            "Ends {{offerEndDate}}": "",
            Error: "Erro",
            "Expires {{expiryDate}}": "Expira {{expiryDate}}",
            Forever: "Para sempre",
            "Free Trial – Ends {{trialEnd}}":
                "Período de Teste Gratuito - Termina {{trialEnd}}",
            "Get help": "Obter ajuda",
            "Get in touch for help": "Entre em contacto para obter ajuda",
            "Get notified when someone replies to your comment":
                "Ser notificado quando alguém responde a um comentário teu",
            "Give feedback on this post": "Dar feedback a este artigo",
            "Help! I'm not receiving emails":
                "Ajuda! Não estou a receber emails",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Se uma newsletter for marcada como spam, os emails serão automaticamente desativados para esse endereço para garantir que não receberá mais mensagens indesejadas.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Se a queixa de spam foi acidental, ou se gostaria de começar a receber emails novamente, pode voltar a subscrever os emails clicando no botão na tela anterior.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Se cancelar a sua subscrição agora, continuará a ter acesso até {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Se tem uma conta de email corporativa ou governamental, contacte o seu departamento de TI e peça-lhes para permitir a receção de emails de {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Se gostaria de começar a receber emails novamente, os próximos passos são verificar o seu endereço de email registado para verificar se há algum problema e, em seguida, clicar para voltar a subscrever na tela anterior.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Se não está a receber a newsletter por email a que subscreveu, aqui estão algumas coisas a verificar.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Se completou todas estas verificações e ainda não está a receber emails, pode contactar {{supportAddress}} para obter apoio.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "No caso de uma falha permanente ser recebida ao tentar enviar uma newsletter, os emails serão desativados na conta.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "No seu cliente de email, adicione {{senderEmail}} à sua lista de contactos. Isso indica ao seu fornecedor de email que os emails enviados a partir deste endereço devem ser confiáveis.",
            "Less like this": "Menos como este",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Certifique-se de que os emails não estão a acabar acidentalmente nas pastas de Spam ou Promoções da sua caixa de entrada. Se estiverem, clique em "Marcar como não spam" e/ou "Mover para a caixa de entrada".',
            Manage: "Gerir",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Mensalmente",
            "More like this": "Mais como este",
            Name: "Nome",
            "Need more help? Contact support":
                "Precisa de mais ajuda? Contacte o suporte",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "As newsletters podem ser desativadas na sua conta por dois motivos: um email anterior foi marcado como spam, ou a tentativa de enviar um email resultou numa falha permanente (bounce).",
            "Not receiving emails?": "Não está a receber emails?",
            "Now check your email!": "Verifica o teu email agora!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Depois de se inscrever novamente, se você ainda não vir emails na sua caixa de entrada, verifique sua pasta de spam. Alguns provedores de caixa de entrada mantêm um registro de reclamações anteriores de spam e continuarão a sinalizar Emails. Se isso acontecer, marque a newsletter mais recente como 'Não é spam' para movê-la de volta para sua caixa de entrada principal.",
            "Permanent failure (bounce)": "Falha permanente (bounce)",
            Plan: "Plano",
            "Plan checkout was cancelled.": "Plano de checkout foi cancelado.",
            "Plan upgrade was cancelled.": "Melhoria de plano foi cancelado.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "Preencha os campos obrigatórios",
            Price: "Preço",
            "Re-enable emails": "Reativar emails",
            Recommendations: "",
            "Renews at {{price}}.": "Renova por {{price}}",
            Retry: "Tentar novamente",
            Save: "Guardar",
            "Send an email and say hi!": "Envie um email e diga olá!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Envie um email para {{senderEmail}} e diga olá. Isso também pode ajudar a sinalizar ao seu provedor de email que os emails de e para este endereço devem ser confiáveis.",
            "Sending login link...": "A enviar ligação de acesso...",
            "Sending...": "A enviar...",
            "Show all": "",
            "Sign in": "Entrar",
            "Sign out": "Sair",
            "Sign up": "Registar",
            "Signup error: Invalid link": "Erro de inscrição: ligação inválida",
            "Sorry, that didn’t work.": "Desculpe, isso não funcionou.",
            "Spam complaints": "Reclamações de spam",
            "Start {{amount}}-day free trial":
                "Iniciar teste grátis de {{amount}} dias",
            "Starting {{startDate}}": "Começando {{startDate}}",
            "Starting today": "Começando hoje",
            "Submit feedback": "Enviar avaliação",
            Subscribe: "Inscrever-se",
            Subscribed: "Inscrito",
            Success: "Sucesso",
            "Success! Check your email for magic link to sign-in.":
                "Sucesso! Verifique seu email para o link mágico de acesso.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Sucesso! Sua conta está totalmente ativada, agora você tem acesso a todo o conteúdo.",
            "Success! Your email is updated.":
                "Sucesso! Seu email foi atualizado.",
            "Successfully unsubscribed": "Subscrição cancelada com sucesso",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Obrigado pela avaliação!",
            "That didn't go to plan": "Algo não correu como planeado",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "O endereço de email que temos para você é {{memberEmail}} — se isso não estiver correto, você pode atualizá-lo na sua <button>área de configurações da conta</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Houve um problema ao enviar sua avaliação. Tente novamente mais tarde.",
            "This site is invite-only, contact the owner for access.":
                "O acesso a este site é feito apenas por convite. Contate o proprietário para obter acesso.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Para completar o registo, clique no link de confirmação enviado para sua caixa de entrada. Se não o receberes detro de 3 minutos, verifica a pasta de spam!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Experimente grátis por {{amount}} dias, depois {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Desbloqueie o acesso a todas as newsletters se tornando um assinante pago.",
            "Unsubscribe from all emails":
                "Cancelar subscrição de todos os emails",
            Unsubscribed: "Subscrição cancelada",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Cancelar a subscrição dos emails não cancelará sua assinatura paga em {{title}}",
            Update: "Atualizar",
            "Update your preferences": "Atualizar as tuas preferências",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Verifique se o endereço de email está correto",
            "View plans": "Ver planos",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Não conseguimos cancelar sua inscrição já que o email não foi encontrado. Por favor, entre em contato com o proprietário do site.",
            "Welcome back, {{name}}!": "Bem-vindo de volta, {{name}}!",
            "Welcome back!": "Bem-vindo de volta!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Quando uma caixa de entrada falha ao aceitar um Email, isso é comumente chamado de bounce. Em muitos casos, isso pode ser temporário. No entanto, em alguns casos, um email com falha pode ser retornado como uma falha permanente quando um endereço de email é inválido ou não existe.",
            "Why has my email been disabled?":
                "Por que meu email foi desativado?",
            Yearly: "Anualmente",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Você atualmente tem uma assinatura gratuita, faça um upgrade para uma assinatura paga para ter acesso completo.",
            "You have been successfully resubscribed":
                "A tua subscrição foi renovada com sucesso",
            "You're currently not receiving emails":
                "Você não está recebendo emails no momento",
            "You're not receiving emails": "Você não está recebendo Emails",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Não está a receber emails porque, ou classificou uma mensagem recente como spam, ou as mensagens não puderam ser entregues no endereço de email que você forneceu.",
            "You've successfully signed in.": "Você entrou com sucesso.",
            "You've successfully subscribed to": "",
            "Your account": "A tua conta",
            "Your input helps shape what gets published.":
                "O teu feedback ajuda a decidir o conteúdo que será publicado no futuro.",
            "Your subscription will expire on {{expiryDate}}":
                "Sua assinatura expirará em {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Sua assinatura será renovada em {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Sua assinatura começará em {{subscriptionStart}}",
        },
        N1 = {
            "{{amount}} days free": "{{amount}} dias grátis",
            "{{amount}} off": "{{amount}} de desconto",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} de desconto nos primeiros {{number}} meses.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} de desconto nos primeiros {{period}}.",
            "{{amount}} off forever.": "{{amount}} de desconto para sempre.",
            "{{discount}}% discount": "{{discount}}% de desconto",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} não receberá mais a newsletter {{newsletterName}}.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} não receberá mais e-mails quando alguém responder seus comentários.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} não receberá mais esta newsletter.",
            "{{trialDays}} days free": "{{trialDays}} dias grátis",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Um link de acesso foi enviado para o seu e-mail. Se a mensagem não chegar dentro de 3 minutos, verifique sua pasta de spam.",
            Account: "Conta",
            "Account settings": "Configurações de conta",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Quando o teste grátis acabar, será cobrado o preço normal do plano que você escolheu. Você sempre pode cancelar antes.",
            "Already a member?": "Já é membro?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Ocorreu um erro inesperado. Tente novamente ou <a>entre em contato com o suporte</a> se o erro persistir.",
            Back: "Voltar",
            "Back to Log in": "Voltar para login",
            "Billing info": "Informações de cobrança",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Cancele quando quiser.",
            "Cancel subscription": "Cancelar inscrição",
            "Cancellation reason": "Motivo do cancelamento",
            Change: "Alterar",
            "Check spam & promotions folders":
                "Verificar pastas de spam e promoções",
            "Check with your mail provider":
                "Verificar com seu provedor de e-mail",
            Choose: "Escolher",
            "Choose a different plan": "Escolher um plano diferente",
            "Choose your newsletters": "Escolher suas newsletters",
            "Click here to retry": "Clique aqui para tentar novamente",
            Close: "Fechar",
            Comments: "Comentários",
            Complimentary: "Cortesia",
            Confirm: "Confirmar",
            "Confirm cancellation": "Confirmar cancelamento",
            "Confirm subscription": "Confirmar inscrição",
            "Contact support": "Contatar suporte",
            Continue: "Continuar",
            "Continue subscription": "Continuar inscrição",
            "Could not sign in. Login link expired.":
                "Não foi possível fazer login. O link de acesso expirou.",
            "Could not update email! Invalid link.":
                "Não foi possível atualizar o e-mail! Link inválido.",
            "Create a new contact": "Criar um novo contato",
            "Current plan": "Plano atual",
            "Delete account": "Excluir conta",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Não era isso que você queria? Gerencie suas preferências <button>aqui</button>.",
            "Don't have an account?": "Não tem uma conta?",
            Edit: "Editar",
            Email: "E-mail",
            "Email newsletter": "Newsletter por e-mail",
            "Email preference updated.": "Preferências de e-mail atualizadas.",
            "Email preferences": "Preferências de e-mail",
            Emails: "E-mails",
            "Emails disabled": "E-mails desativados",
            "Ends {{offerEndDate}}": "Termina em {{offerEndDate}}",
            Error: "Erro",
            "Expires {{expiryDate}}": "Expira em {{expiryDate}}",
            Forever: "Para sempre",
            "Free Trial – Ends {{trialEnd}}":
                "Teste grátis – Termina em {{trialEnd}}",
            "Get help": "Obter ajuda",
            "Get in touch for help": "Entre em contato para obter ajuda",
            "Get notified when someone replies to your comment":
                "Receber notificação quando alguém responder seu comentário",
            "Give feedback on this post": "Enviar feedback sobre esta postagem",
            "Help! I'm not receiving emails":
                "Ajuda! Não estou recebendo e-mails",
            "Here are a few other sites you may enjoy.":
                "Aqui estão alguns outros sites que você pode gostar.",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Se uma newsletter for marcada como spam, os e-mails são automaticamente desativados para esse endereço para garantir que você não receba mais mensagens indesejadas.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Se a reclamação de spam foi acidental ou se você deseja começar a receber e-mails novamente, pode se inscrever novamente para receber e-mails clicando no botão na tela anterior.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Se você cancelar sua inscrição agora, continuará tendo acesso até {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Se você tiver uma conta de e-mail corporativa ou governamental, entre em contato com o departamento de TI e peça para permitir que os e-mails sejam recebidos de {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Se você deseja começar a receber e-mails novamente, os próximos passos são verificar seu endereço de e-mail no arquivo para verificar se há problemas e, em seguida, clicar em se inscrever novamente na tela anterior.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Se você não estiver recebendo a newsletter por e-mail à qual se inscreveu, verifique algumas coisas.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Se você concluiu todas essas verificações e ainda não está recebendo e-mails, pode entrar em contato para obter suporte entrando em contato com {{supportAddress}}.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "No caso de uma falha permanente ser recebida ao tentar enviar uma newsletter, os e-mails serão desativados na conta.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "No seu cliente de e-mail, adicione {{senderEmail}} à sua lista de contatos. Isso sinaliza ao seu provedor de e-mail que os e-mails enviados deste endereço devem ser confiáveis.",
            "Less like this": "Menos como este",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Verifique se os e-mails não estão indo parar acidentalmente nas pastas Spam ou Promoções da sua caixa de entrada. Se estiverem, clique em "Marcar como não spam" e/ou "Mover para a caixa de entrada".',
            Manage: "Gerenciar",
            "Maybe later": "Talvez mais tarde",
            "Memberships unavailable, contact the owner for access.":
                "Assinaturas indisponíveis, entre em contato para obter acesso.",
            Monthly: "Mensal",
            "More like this": "Relacionados",
            Name: "Nome",
            "Need more help? Contact support":
                "Precisa de mais ajuda? Contate o suporte",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "As newsletters podem ser desativadas na sua conta por dois motivos: um e-mail anterior foi marcado como spam ou a tentativa de enviar um e-mail resultou em uma falha permanente (bounce).",
            "Not receiving emails?": "Não está recebendo e-mails?",
            "Now check your email!": "Agora veja seu e-mail!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Depois de se inscrever novamente, se você ainda não vir e-mails na sua caixa de entrada, verifique sua pasta de spam. Alguns provedores de caixa de entrada mantêm um registro de reclamações anteriores de spam e continuarão a sinalizar e-mails. Se isso acontecer, marque a newsletter mais recente como 'Não é spam' para movê-la de volta para sua caixa de entrada principal.",
            "Permanent failure (bounce)": "Falha permanente (bounce)",
            Plan: "Plano",
            "Plan checkout was cancelled.": "Plano de checkout foi cancelado.",
            "Plan upgrade was cancelled.": "Upgrade de plano foi cancelado.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "Entre em contato com {{supportAddress}} para ajustar sua assinatura.",
            "Please fill in required fields": "Preencha os campos obrigatórios",
            Price: "Preço",
            "Re-enable emails": "Reativar e-mails",
            Recommendations: "Recomendações",
            "Renews at {{price}}.": "Renova por {{price}}",
            Retry: "Tentar de novo",
            Save: "Salvar",
            "Send an email and say hi!": "Envie um e-mail e diga oi!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Envie um e-mail para {{senderEmail}} e diga olá. Isso também pode ajudar a sinalizar ao seu provedor de e-mail que os e-mails de e para este endereço devem ser confiáveis.",
            "Sending login link...": "Enviando link de acesso...",
            "Sending...": "Enviando...",
            "Show all": "Mostre tudo",
            "Sign in": "Entrar",
            "Sign out": "Sair",
            "Sign up": "Cadastrar",
            "Signup error: Invalid link": "Erro de inscrição: link inválido",
            "Sorry, that didn’t work.": "Desculpe, isso não funcionou.",
            "Spam complaints": "Reclamações de spam",
            "Start {{amount}}-day free trial":
                "Começar teste grátis de {{amount}} dias",
            "Starting {{startDate}}": "Começando {{startDate}}",
            "Starting today": "Começando hoje",
            "Submit feedback": "Enviar avaliação",
            Subscribe: "Inscrever-se",
            Subscribed: "Inscrito",
            Success: "Sucesso",
            "Success! Check your email for magic link to sign-in.":
                "Sucesso! Verifique seu e-mail para o link mágico de acesso.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Sucesso! Sua conta está totalmente ativada, agora você tem acesso a todo o conteúdo.",
            "Success! Your email is updated.":
                "Sucesso! Seu e-mail foi atualizado.",
            "Successfully unsubscribed": "Inscrição cancelada com sucesso",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "Obrigado por se inscrever. Antes de começar a ler, abaixo estão alguns outros sites que você pode gostar.",
            "Thanks for the feedback!": "Obrigado pela avaliação!",
            "That didn't go to plan": "Algo não saiu como planejado",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "O endereço de e-mail que temos para você é {{memberEmail}} — se isso não estiver correto, você pode atualizá-lo na sua <button>área de configurações da conta</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Houve um problema ao enviar sua avaliação. Tente novamente mais tarde.",
            "This site is invite-only, contact the owner for access.":
                "Este site é apenas para convidados. Contate o proprietário para obter acesso.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Para completar o cadastro, clique no link de confirmação enviado para sua caixa de entrada. Se o link não chegar dentro de 3 minutos, confira a pasta de spam!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Experimente grátis por {{amount}} dias, depois {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Desbloqueie o acesso a todas as newsletters se tornando um assinante pago.",
            "Unsubscribe from all emails":
                "Cancelar inscrição em todos os e-mails",
            Unsubscribed: "Cancelado",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Cancelar a inscrição nos e-mails não cancelará sua assinatura paga em {{title}}",
            Update: "atualizar",
            "Update your preferences": "Atualizar preferências",
            "Verification link sent, check your inbox":
                "Link de verificação enviado, verifique sua caixa de entrada",
            "Verify your email address is correct":
                "Verifique se o endereço de e-mail está correto",
            "View plans": "Ver planos",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Não conseguimos cancelar sua inscrição já que o e-mail não foi encontrado. Por favor, entre em contato com o proprietário do site.",
            "Welcome back, {{name}}!": "Bem-vindo de volta, {{name}}!",
            "Welcome back!": "Bem-vindo de volta!",
            "Welcome to {{siteTitle}}": "Bem-vindo ao {{siteTitle}}",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Quando uma caixa de entrada falha ao aceitar um e-mail, isso é comumente chamado de bounce. Em muitos casos, isso pode ser temporário. No entanto, em alguns casos, um e-mail com falha pode ser retornado como uma falha permanente quando um endereço de e-mail é inválido ou não existe.",
            "Why has my email been disabled?":
                "Por que meu e-mail foi desativado?",
            Yearly: "Anualmente",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Você atualmente tem uma assinatura gratuita, faça um upgrade para uma assinatura paga para ter acesso completo.",
            "You have been successfully resubscribed":
                "Você foi reinscrito com sucesso",
            "You're currently not receiving emails":
                "Você não está recebendo e-mails no momento",
            "You're not receiving emails": "Você não está recebendo e-mails",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Você não está recebendo e-mails porque, ou classificou uma mensagem recente como spam, ou as mensagens não puderam ser entregues no endereço de e-mail que você forneceu.",
            "You've successfully signed in.": "Você entrou com sucesso.",
            "You've successfully subscribed to":
                "Você se inscreveu com sucesso",
            "Your account": "Sua conta",
            "Your input helps shape what gets published.":
                "Sua resposta ajuda a moldar o que será publicado.",
            "Your subscription will expire on {{expiryDate}}":
                "Sua assinatura expirará em {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Sua assinatura será renovada em {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Sua assinatura começará em {{subscriptionStart}}",
        },
        T1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "Reducere de {{discount}}%",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "{{trialDays}} zile gratuite",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Un link de autentificare a fost trimis în inbox-ul tău. Dacă nu ajunge în 3 minute, asigură-te că verifici folderul de spam.",
            Account: "Cont",
            "Account settings": "Setări cont",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "După ce expiră perioada de încercare gratuită, vei fi taxat la prețul obișnuit pentru nivelul pe care l-ai ales. Poți anula în orice moment înainte de aceasta.",
            "Already a member?": "Ești deja membru?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Înapoi",
            "Back to Log in": "Înapoi la Autentificare",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "Anulează abonamentul",
            "Cancellation reason": "Motivul anulării",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "Alege un plan diferit",
            "Choose your newsletters": "Alege-ți newsletterele",
            "Click here to retry": "",
            Close: "Închide",
            Comments: "Comentarii",
            Complimentary: "",
            Confirm: "Confirmă",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "Continuă",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "Șterge contul",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "Nu ai un cont?",
            Edit: "",
            Email: "Email",
            "Email newsletter": "",
            "Email preference updated.":
                "Preferințele de email au fost actualizate.",
            "Email preferences": "Preferințe de email",
            Emails: "Emailuri",
            "Emails disabled": "Emailuri dezactivate",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Obține ajutor",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment":
                "Primește notificare când cineva răspunde la comentariul tău",
            "Give feedback on this post": "Oferă feedback despre acest articol",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Mai puțin de genul acesta",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Administrează",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Lunar",
            "More like this": "Mai multe de genul acesta",
            Name: "Nume",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Nu primești emailuri?",
            "Now check your email!": "Acum verifică-ți emailul!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Preț",
            "Re-enable emails": "Activează din nou emailurile",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Reîncearcă",
            Save: "Salvează",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Se trimite link-ul de autentificare...",
            "Sending...": "Se trimite...",
            "Show all": "",
            "Sign in": "Autentificare",
            "Sign out": "",
            "Sign up": "Înregistrare",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "Începe perioada gratuită de {{amount}} zile",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Trimite feedback",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Dezabonare realizată cu succes",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Mulțumim pentru feedback!",
            "That didn't go to plan": "Asta nu a mers conform planului",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "Acest site este disponibil doar pe bază de invitație, contactează proprietarul pentru acces.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Pentru a finaliza înregistrarea, apasă pe link-ul de confirmare din inbox-ul tău. Dacă nu ajunge în 3 minute, verifică folderul de spam!",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails":
                "Dezabonează-te de la toate emailurile",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Dezabonarea de la emailuri nu va anula abonamentul plătit la {{title}}",
            Update: "",
            "Update your preferences": "Actualizează-ți preferințele",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Nu am putut să te dezabonăm deoarece adresa de email nu a fost găsită. Te rugăm să contactezi proprietarul site-ului.",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Anual",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed":
                "Te-ai reabonat cu succes",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Nu primești emailuri deoarece fie ai marcat un mesaj recent ca spam, fie pentru că mesajele nu pot fi livrate la adresa ta de email furnizată.",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "Contul tău",
            "Your input helps shape what gets published.":
                "Contribuția ta ajută la conturarea a ceea ce se publică.",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        I1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "Скидка {{discount}}%",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "{{trialDays}} дня(-ей) бесплатно",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Ссылка для входа была отправлена вам на email. Если письмо долго не приходит, проверьте папку Спам.",
            Account: "Аккаунт",
            "Account settings": "Настройки аккаунта",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "После окончания бесплатного периода с вас будут взиматься регулярные платежи по выбранному тарифу. До этого момента вы можете отменить подписку в любое время.",
            "Already a member?": "Уже есть аккаунт?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Назад",
            "Back to Log in": "Вернуться ко входу",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "Отменить подписку",
            "Cancellation reason": "Причина отмены",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "Выберите другой план",
            "Choose your newsletters": "Выберите рассылки",
            "Click here to retry": "",
            Close: "Закрыть",
            Comments: "Комментарии",
            Complimentary: "",
            Confirm: "Подтвердить",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "Продолжить",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "Удалить аккаунт",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "У вас нет аккаунта?",
            Edit: "",
            Email: "Email",
            "Email newsletter": "",
            "Email preference updated.":
                "Настройки электронной почты обновлены.",
            "Email preferences": "Настройки электронной почты",
            Emails: "Письма",
            "Emails disabled": "Письма отключены",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Получить помощь",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment":
                "Оповещать, когда кто-то отвечает на ваш комментарий",
            "Give feedback on this post": "Оставить отзыв на эту публикацию",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Меньше подобного",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Управление",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Ежемесячно",
            "More like this": "Больше подобного",
            Name: "Имя",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Не получаете письма?",
            "Now check your email!": "Теперь проверьте свою электронную почту!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Цена",
            "Re-enable emails": "Снова включить письма",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Повторить попытку",
            Save: "Сохранить",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Отправка ссылки для входа...",
            "Sending...": "Отправка...",
            "Show all": "",
            "Sign in": "Войти",
            "Sign out": "",
            "Sign up": "Зарегистрироваться",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "Начать {{amount}}-дневный пробный период",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Отправить отзыв",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Подписка успешно отменена",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Спасибо за отзыв!",
            "That didn't go to plan": "Что-то пошло не так",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "Этот сайт доступен только по приглашениям, свяжитесь с владельцем для получения доступа.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Чтобы завершить регистрацию, нажмите на ссылку подтверждения в вашем почтовом ящике. Если она не придет в течение 3 минут, проверьте папку Спам!",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails": "Отписаться от всех писем",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Отключение рассылки не отменит вашу платную подписку на {{title}}",
            Update: "",
            "Update your preferences": "Обновить настройки",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Мы не смогли отменить вашу подписку, так как адрес электронной почты не найден. Пожалуйста, свяжитесь с владельцем сайта.",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Ежегодно",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed":
                "Вы снова подписаны на рассылку",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Вы не получаете письма, так как либо вы пометили недавнее сообщение как спам, либо сообщения не могут быть доставлены на указанный вами email.",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "Ваш аккаунт",
            "Your input helps shape what gets published.":
                "Ваш отзыв поможет решить, что будет опубликовано дальше.",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        z1 = {
            "{{amount}} days free": "දින {{amount}} ක් නොමිලයේ",
            "{{amount}} off": "{{amount}} ක වට්ටමක්",
            "{{amount}} off for first {{number}} months.":
                "පළමු මාස {{number}} සඳහා {{amount}} ක වට්ටමක්",
            "{{amount}} off for first {{period}}.":
                "පළමු {{period}} සඳහා {{amount}} ක වට්ටමක්",
            "{{amount}} off forever.": "හැමදාටම {{amount}} ක වට්ටමක්",
            "{{discount}}% discount": "{{discount}}% ක වට්ටමක්",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} වෙත තවදුරටත් {{newsletterName}} newsletter නොලැබෙනු ඇත.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "ඔබගේ comments සඳහා කිසිවෙකු reply කළ විට {{memberEmail}} වෙත තවදුරටත් email මඟින් දැනුම්දීමක් නොකෙරෙනු ඇත.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "මෙම newsletter එක {{memberEmail}} වෙත තවදුරටත් නොලැබෙනු ඇත.",
            "{{trialDays}} days free": "දින {{trialDays}} ක් දක්වා නොමිලේ",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "වෙබ් අඩවියට පිවිසීම සඳහා link එකක් ඔබගේ email ලිපිනය වෙත යවා ඇත. එය විනාඩි 3ක් ඇතුළත නොපැමිණියේ නම් spam ෆෝල්ඩරය පරීක්ෂා කරන්න.",
            Account: "ගිණුම",
            "Account settings": "ගිණුම් සැකසුම්",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "නොමිලයේ ලබාදෙන අත්හදාබැලීමේ කාලය අවසන් වූ පසුව, ඔබ තෝරාගන්නා ලද tier එක අනුව එහි සාමාන්‍යය මිල ගණන් අය වනු ඇත. ඊට පෙර ඕනෑම අවස්ථාවක මෙය අවලංගු කිරීමට ඔබට හැකියාව ඇත.",
            "Already a member?": "දැනටමත් සාමාජිකයෙක්ද?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "එම උත්සාහය අසාර්ථක විය. තව ටික වේලාවකින් නැවත උත්සාහ කරන්න, මෙම ගැටළුව තවදුරටත් පවතින්නේ නම්, <a>සහායක අංශය සම්බන්ධ කරගන්න</a>.",
            Back: "ආපසු",
            "Back to Log in": "නැවත log in වීම සඳහා",
            "Billing info": "බිල්පත් පිළිබඳ තොරතුරු",
            "Black Friday": "",
            "Cancel anytime.": "ඕනෑම අවස්ථාවකදී අවලංගු කළ හැක.",
            "Cancel subscription": "Subscription එක අවලංගු කරන්න",
            "Cancellation reason": "අවලංගු කිරිමට හේතුව",
            Change: "වෙනස් කරන්න",
            "Check spam & promotions folders":
                "Spam සහ promotions folders පරීක්ෂා කරන්න",
            "Check with your mail provider":
                "ඔබගේ email සේවා සපයන්නා සමඟින් පරීක්ෂා කර බලන්න",
            Choose: "තෝරන්න",
            "Choose a different plan": "වෙනත් plan එකක් තෝරන්න",
            "Choose your newsletters": "ඔබගේ newsletter වර්ගය තෝරන්න",
            "Click here to retry": "නැවත උත්සාහ කිරීම සඳහා මෙහි click කරන්න",
            Close: "වසන්න",
            Comments: "ප්‍රතිචාර",
            Complimentary: "ස්තුතිපූර්වක",
            Confirm: "තහවුරු කරන්න",
            "Confirm cancellation": "අවලංගු කිරීම තහවුරු කරන්න",
            "Confirm subscription": "subscribe කිරීම තහවුරු කරන්න",
            "Contact support": "සහායක අංශය සම්බන්ධ කරගන්න",
            Continue: "ඉදිරියට යන්න",
            "Continue subscription": "Subscription එක පවත්වාගෙන යන්න",
            "Could not sign in. Login link expired.":
                "Sign in වීමට නොහැකි විය. Login link එක කල් ඉකුත් වී ඇත.",
            "Could not update email! Invalid link.":
                "Email ලිපිනය update කළ නොහැකි විය. වැරදි link එකකි.",
            "Create a new contact": "අලුත් contact එකක් නිර්මාණය කරන්න",
            "Current plan": "දැනට පවතින plan එක",
            "Delete account": "ගිණුම Delete කරන්න",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "මෙය සිදු කිරීමට අදහස් නොකලේ ද? <button>මේ හරහා</button> ඔබගේ preferences manage කරගන්න.",
            "Don't have an account?": "ගිණුමක් නොමැතිද?",
            Edit: "Edit කරන්න",
            Email: "Email",
            "Email newsletter": "Email newsletter",
            "Email preference updated.": "Email preference update කරන ලදී.",
            "Email preferences": "Email preferences",
            Emails: "ඊමේල්",
            "Emails disabled": "Emails නවත්වා ඇත",
            "Ends {{offerEndDate}}": "{{offerEndDate}} දී අවසන් වනු ඇත",
            Error: "Error එකක්",
            "Expires {{expiryDate}}": "{{expiryDate}} දින අවසන් වෙයි",
            Forever: "හැමදාටම",
            "Free Trial – Ends {{trialEnd}}":
                "අත්හදාබැලීමේ කාලසීමාව {{trialEnd}} දින අවසන් වෙයි",
            "Get help": "සහාය ලබාගන්න",
            "Get in touch for help": "සහාය ලබාගැනීම සඳහා සම්බන්ධ වෙන්න",
            "Get notified when someone replies to your comment":
                "ඔබේ ප්‍රතිචාරයට යම් අයෙකු පිළිතුරු දුන් විට දැනුම් දෙන්න",
            "Give feedback on this post": "මෙම post එකට ඔබේ අදහස එක් කරන්න",
            "Help! I'm not receiving emails":
                "සහාය අවශ්‍යයයි! මට emails ලැබෙන්නේ නැහැ.",
            "Here are a few other sites you may enjoy.":
                "ඔබට රසවිඳිය හැකි තවත් වෙබ් අඩවි කිහිපයක් මෙන්න.",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Newsletter එකක් spam ලෙස flag වුවහොත්, එම email ලිපිනයට emails ලැබීම ස්ව්‍යංක්‍රීයවම අක්‍රීය කිරීම හරහා ඔබට අනව්‍යශ්‍යය messages ලැබීම නතර වන බව සහතික කෙරෙනු ඇත.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Spam සඳහා කළ පැමිණිල්ල අත්වැරදීමකින් සිදු වූවක් හෝ, ඔබ නැවතත් emails ලබාගැනීමට කැමැත්තෙන් සිටින්නේ නම්, පෙර screen එකේ ඇති button එක හරහා emails වලට නැවත subscribe කිරීමේ හැකියාව ඇත.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "ඔබගේ subscription එක මෙම මොහොතේ cancel කළහොත්, {{periodEnd}} දක්වා ඔබ‍ගේ access නොවෙනස්ව පවතිනු ඇත.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "ඔබ ව්‍යාපාරික හෝ රාජ්‍යය email ලිපිනයක් භාවිතා කරන්නේ නම්, {{senderEmail}} ලිපිනයෙන් එන emails allow කරන ලෙස ඔබගේ IT department එකට දැනුම් දීමට කටයුතු කරන්න.",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "ඔබ නැවත emails ලබාගැනීමට කැමති නම්, වඩාත්ම සුදුසු මීළඟ පියවර වන්නේ ‍ඔබ භාවිතා කරන email ලිපිනයෙහි යම්කිසි ගැටළුවක් ඇත්දැයි පරීක්ෂා කිරීමෙන් අනතුරුව, පෙර screen එක හරහා resubscribe මත click කිරීමයි.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "ඔබ subscribe කළ newsletters ඔබට නොලැබෙන්නේ නම්, මේ දේවල් පරීක්ෂා කර බලන්න.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "මෙහි සඳහන් සියළුම දේ පරීක්ෂා කිරීමෙන් අනතුරුවත් ඔබට emails නොලැබෙන්නේ නම්, {{supportAddress}} සම්බන්ධ කරගනිමින් සහාය ඉල්ලා සිටින්න.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Newsletter එකක් යැවීමේ අවස්ථාවකදී permanent failure එකක් වාර්ථා වුවහොත්, මෙම ගිණුමෙහි emails අක්‍රීය කෙරෙනු ඇත.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "ඔබගේ email client එකෙහි contact list එකට {{senderEmail}} ලිපිනය add කරගන්න. මෙම ලිපිනය හරහා ලැබෙන emails විශ්වාසදායී බව මේ හරහා ඔබගේ emailසේවා සපයන්නාට සංඥා කෙරෙනු ඇත.",
            "Less like this": "මෙවැනි දෑ අඩුවෙන් පෙන්වන්න",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Spam හෝ inbox එකෙහි ඇති Promotions folder වලට emails අත්වැරදීමකින් හෝ ළඟා වන්නේ ද යන්න සහතික කරගන්න. එසේ වන්නේ නම්, "Mark as not spam" සහ/හෝ "Move to inbox" යන්නෙහි click කරන්න.',
            Manage: "කළමනාකරණය කරන්න",
            "Maybe later": "සමහර විට පසුව",
            "Memberships unavailable, contact the owner for access.":
                "සාමාජිකත්වයන් නොමැත, ප්‍රවේශය සඳහා වෙබ් අඩ​වි හිමිකරු සම්බන්ධ කරගන්​න.",
            Monthly: "මාසිකව",
            "More like this": "මෙවැනි දෑ වැඩියෙන් පෙන්වන්න",
            Name: "නම",
            "Need more help? Contact support":
                "තවදුරටත් සහාය අවශ්‍යයි ද? සහායක සේවාව සම්බන්ධ කරගන්න",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "ඔබගේ ගිණුමෙහි newsletters අක්‍රීය වීමට හේතු දෙකක් දැක්විය හැකිය: පෙර යවන ලද email එකක් spam ලෙස සටහන් කිරීම, හෝ email එකක් යැවීමට උත්සාහ කිරීමේදී permenent faulure (bounce) එකක් වීමක් වාර්ථා වීම.",
            "Not receiving emails?": "Emails ලැබෙන්නේ නැද්ද?",
            "Now check your email!": "දැන් ඔබගේ email එක පරික්ෂා කරන්න!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "නැවත subscribe කළ විටත් ඔබගේ inbox එකට email ලැබෙන්නේ නැතිනම්, spam folder එක පරීක්ෂා කරන්න. ඇතැම් සේවා සපයන්නන් මීට පෙර spam සම්බන්ධව ලැබුණු පැමිණිලි පාදක කරගෙන තවදුරටත් emails spam ලෙස ලකුණු කරනු ලබනවා. එසේ වී ඇත්නම්,  අලුතින්ම ලැබුණු newsletter එක ඔබගේ primary inbox එකට යැවීමට 'Not spam' ලෙස සළකුනු කරන්න.",
            "Permanent failure (bounce)": "Permanent failure (bounce) එකක්",
            Plan: "Plan එක",
            "Plan checkout was cancelled.":
                "Plan එක checkout කිරීම අවලංගු කරන ලදී.",
            "Plan upgrade was cancelled.":
                "Plan එක upgrade කිරීම අවලංගු කරන ලදී.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields":
                "කරුණාකර required files පිරවීමට කටයුතු කරන්න",
            Price: "මිල",
            "Re-enable emails": "ඉමේල් නැවත සක්‍රීය කරන්න",
            Recommendations: "නිර්දේශි​ත",
            "Renews at {{price}}.": "{{price}} ක මුදලකට renew වනු ඇත.",
            Retry: "නැවත උත්සහකරන්න",
            Save: "Save කරන්න",
            "Send an email and say hi!": "Email එකක් send කරමින් hi! කියන්න",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "{{senderEmail}} වෙත hello ලෙස සඳහන් කරමින් email එකක් එවන්න. මේ හරහා එම email ලිපිනයෙන් ලැබෙන සහ ලිපිනයට යවන emails විශ්වාසදායී බව ඔබගේ email සේවා සපයන්නාට සංඥා කෙරෙනු ඇත.",
            "Sending login link...": "Login link එක යවමින්...",
            "Sending...": "යවමින්...",
            "Show all": "සියල්ල පෙන්වන්​න",
            "Sign in": "Sign in වෙන්න",
            "Sign out": "Sign out වෙන්න",
            "Sign up": "ලියාපදිංචි වෙන්න",
            "Signup error: Invalid link":
                "Signup වීම අසාර්ථකයි: වැරදි link එකකි",
            "Sorry, that didn’t work.": "සමාවෙන්න, නමුත් එය සාර්ථක වූයේ නැත.",
            "Spam complaints": "Spam සඳහා වන පැමිණිලි",
            "Start {{amount}}-day free trial":
                "{{amount}}-day free trial එක ආරම්භකරන්න",
            "Starting {{startDate}}": "{{startDate}} සිට ආරම්භ වෙයි",
            "Starting today": "අද සිට ආරම්භ වෙයි",
            "Submit feedback": "ප්‍රතිචාරය යොමුකරන්න",
            Subscribe: "Subscribe කරන්න",
            Subscribed: "Subscribe කරන ලදී",
            Success: "සාර්ථකයි",
            "Success! Check your email for magic link to sign-in.":
                "සාර්ථකයි! sign-in වීමේ magic link එක සඳහා ඔබ‍ෙගේ emails පරීක්ෂා කරන්න.",
            "Success! Your account is fully activated, you now have access to all content.":
                "සාර්ථකයි! ඔබගේ ගිණුම සම්පූර්ණයෙන්ම activate කර ඇති අතර, දැන් ඔබට සියළුම content සඳහා access ලැබී තිබෙනවා.",
            "Success! Your email is updated.":
                "සාර්ථකයි! ඔබගේ email ලිපිනය update කරන ලදී.",
            "Successfully unsubscribed": "සාර්ථකව unsubscribed කර ඇත",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "subscribe කිරී​ම ගැන ඔබට ස්තුතියි. ඔබ කියවීම ආරම්භ කිරීමට පෙර, ඔබට රසවිඳිය හැකි තවත් වෙබ් අඩවි කිහිපයක් පහත දැක්වේ.",
            "Thanks for the feedback!": "ප්‍රතිචාරය සඳහා ස්තූතියි!",
            "That didn't go to plan": "එය සැලැස්මට අනුකූලව සිදු වුණේ නෑ",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "ඔබගේ email ලිපිනය ලෙස අප සතුව තිබෙන්නේ {{memberEmail}} යන email ලිපිනයයි - මෙය වැරදියි නම්, ඔබගේ <button>account settings area එක</button> හරහා update කළ හැක.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "ඔබගේ feedback එක යොමු කිරීමේදී ගැටළුවක් ඇති විය. තව ටික වේලාවකින් නැවත උත්සාහ කරන්න.",
            "This site is invite-only, contact the owner for access.":
                "මෙම වෙබ් අඩවිය ආරාධිතයන් සඳහා පමණි, ප්‍රවේශ වීම සඳහා හිමිකරු අමතන්න.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Signup වීම සම්පූර්ණ කිරීම සඳහා, ඔබ‍ගේ inbox එකට ලැබුණු email එකෙහි ඇති confirmation link එක click කරන්න. එය මිනිත්තු 3ක් ඇතුලත නොපැමිණියේ නම්, spam folder එක පරීක්ෂා කරන්න!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "දින {{amount}}ක් නොමිලයේ භාවිතා කරන්න, ඉන් පසුව {{originalPrice}}ක් පමණි.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Paid subscriber කෙනෙකු වීම හරහා සියළුම newsletters වලට access ලබාගන්න.",
            "Unsubscribe from all emails":
                "සියළුම email වලින් unsubscribe කරන්න",
            Unsubscribed: "Unsubscribe කරන ලදී",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Email වලින් unsubscribe වීමෙන්, {{title}} සඳහා වන ඔබගේ paid subscription එක අවලංගු නොවනු ඇත",
            Update: "Update කරන්න",
            "Update your preferences": "ඔබගේ  preferences update කරන්න",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "ඔබගේ email ලිපිනය නිවැරදි බව තහවුරු කරන්න",
            "View plans": "Plans පෙන්වන්න",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "ඔබගේ email ලිපිනය හමු නොවීම නිසාවෙන් ඔබව unsubscribe කරවීමට නොහැකි විය. කරුණාකර වෙබ් අඩවියෙහි හිමිකරු සම්බන්ධ කරගන්න.",
            "Welcome back, {{name}}!": "{{name}}, ඔබව සාදරයෙන් පිළිගන්නවා!",
            "Welcome back!": "ඔබව සාදරයෙන් පිළිගන්නවා!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "යම් අවස්ථාවකදී email එකක් අදාල email ලිපිනයට ලබාගත නොහැකි නම්, එය පොදුවේ bounce ලෙස හඳුන්වනු ලබනවා. මෙය තාවකාලික තත්ත්වයක් විය හැකයි. කෙසේ නමුත්, ඇතැම් අවස්ථා වලදී අදාල email ලිපිනය වැරදි නම් හෝ එවැනි email ලිපිනයක් නොමැති නම්, bounce email එකක් permanent failure එකක් ලෙස නැවත හරවා යවනු ලැබෙනවා.",
            "Why has my email been disabled?":
                "මගේ emails අක්‍රීය කර ඇත්තේ ඇයි?",
            Yearly: "වාර්ෂිකව",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "ඔබ සතුව දැනට ඇත්තේ free membership එකකි. සම්පූර්ණ access ලබාගැනීම සඳහා එය Paid membership එකකට upgrade කරන්න.",
            "You have been successfully resubscribed":
                "ඔබ සාර්ථකව නැවත subscribe කර ඇත",
            "You're currently not receiving emails":
                "මේ වන විට ඔබට email ලැබෙන්නේ නැත",
            "You're not receiving emails": "ඔබට email ලැබෙන්නේ නැත",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "මෑතකදී ලැබුණු email පණිවිඩයක් spam ලෙස සටහන් කිරීම නිසා හෝ ඔබ ලබාදී ඇති email ලිපිනයට email පණිවිඩ යැවිය නොහැකි නිසාවෙන් ඔබට email ලැබෙන්නේ නැත.",
            "You've successfully signed in.": "ඔබ සාර්ථකව sign in වන ලදී.",
            "You've successfully subscribed to": "ඔබ සාර්ථකව subscribe ක​ර ඇත",
            "Your account": "ඔබගේ ගිණුම",
            "Your input helps shape what gets published.":
                "ඔබගේ අදහස් ඉදිරියේදී සිදු කරන පළකිරීම් වැඩිදියුණු කිරීමට උදව් කරනු ඇත.",
            "Your subscription will expire on {{expiryDate}}":
                "ඔබගේ subscription එක {{expiryDate}} වැනි දින කල් ඉකුත් වනු ඇත",
            "Your subscription will renew on {{renewalDate}}":
                "ඔබගේ subscription එක {{expiryDate}} වැනි දින renew වනු ඇත",
            "Your subscription will start on {{subscriptionStart}}":
                "ඔබගේ subscription එක {{expiryDate}} වැනි දින ආරම්භ වනු ඇත",
        },
        A1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "{{discount}}% popust",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "{{trialDays}} dni brezplačno",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Povezava za prijavo je bila poslana na vašo e-pošto. Če ne prispe v treh minutah, preverite mapo za neželeno pošto.",
            Account: "Račun",
            "Account settings": "Nastavitve računa",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Po koncu brezplačnega preizkusa se vam zaračuna redna cena za izbrano stopnjo. Pred tem jo lahko vedno prekličete.",
            "Already a member?": "Ste že član?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Nazaj",
            "Back to Log in": "Nazaj na prijavo",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "Prekliči naročnino",
            "Cancellation reason": "Razlog za preklic",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "Izberite drug načrt",
            "Choose your newsletters": "Izberite svoje novice",
            "Click here to retry": "",
            Close: "Zapri",
            Comments: "Komentarji",
            Complimentary: "",
            Confirm: "Potrdi",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "Nadaljuj",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "Izbriši račun",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "Nimate računa?",
            Edit: "",
            Email: "E-pošta",
            "Email newsletter": "",
            "Email preference updated.": "E-poštne nastavitve posodobljene",
            "Email preferences": "Nastavitve e-pošte",
            Emails: "E-pošta",
            "Emails disabled": "E-pošta onemogočena",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Pomoč",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment":
                "Prejmite obvestilo, ko nekdo odgovori na vaš komentar",
            "Give feedback on this post":
                "Podajte povratne informacije o tej objavi",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Ni mi všeč",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Upravljanje",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Mesečno",
            "More like this": "Všeč mi je",
            Name: "Ime",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Ne prejemate e-poštnih sporočil?",
            "Now check your email!": "Preverite e-pošto!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Cena",
            "Re-enable emails": "Ponovna vključitev e-poštnih sporočil",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Cena",
            Save: "Shrani",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Pošiljanje povezave za prijavo...",
            "Sending...": "Pošiljanje...",
            "Show all": "",
            "Sign in": "Prijava",
            "Sign out": "",
            "Sign up": "Registracija",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "Začetek {{amount}}-dnevnega brezplačnega preizkusa",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Pošljite povratno informacijo",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Uspešno ste se odjavili",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Hvala za povratne informacije!",
            "That didn't go to plan": "To ni šlo po načrtu",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "To spletno mesto je dostopno samo s povabilom, obrnite se na lastnika.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Dokončatje prijavo s klikom na povezavo, ki ste jo dobili na vaš e-poštni naslov. Če je ne prejmete v treh minutah, preverite mapo za neželeno pošto!",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails": "Odjava od vseh e-poštnih sporočil",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Odjava od e-poštnih sporočil ne bo preklicala vaše plačane naročnine na {{title}}",
            Update: "",
            "Update your preferences": "Posodobite svoje nastavitve",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Nismo vas mogli odjaviti, ker e-poštnega naslova nismo našli. Prosimo, da se obrnete na lastnika spletnega mesta.",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Letno",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed":
                "Uspešno ste bili ponovno naročeni",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Ne prejemate e-poštnih sporočil, ker ste naše sporočilo nedavno označili kot neželeno pošto ali, ker sporočil ni bilo mogoče dostaviti na vaš e-poštni naslov.",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "Vaš račun",
            "Your input helps shape what gets published.":
                "Vaš prispevek se nam pomaga odločati, kaj objavimo.",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        D1 = {
            "{{amount}} days free": "{{amount}} dite falas",
            "{{amount}} off": "{{amount}} zbritje",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} zbritje në {{number}} muajt e parë",
            "{{amount}} off for first {{period}}.":
                "{{amount}} zbritje per {{period}} e parë",
            "{{amount}} off forever.": "{{amount}} zbritje pergjithmone.",
            "{{discount}}% discount": "{{discount}}% zbritje",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} nuk do te marre me buletinin e {{newsletterName}}",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} nuk do të marrë më email kur dikush u përgjigjet komenteve tuaja.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} nuk do te marre me kete buletin.",
            "{{trialDays}} days free": "{{trialDays}} dite falas",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Një lidhje identifikimi është dërguar në kutinë tuaj hyrëse. Nëse nuk arrin për 3 minuta, sigurohuni që të kontrolloni dosjen tuaj të postës së padëshiruar.",
            Account: "Llogaria",
            "Account settings": "Cilësimet e llogarisë",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Pasi të përfundojë një provë falas, ju do të tarifoheni me çmimin e rregullt për nivelin që keni zgjedhur. Mund të anuloni gjithmonë përpara kësaj.",
            "Already a member?": "Tashme nje antar?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Ndodhi një gabim i papritur. Provo sërish ose <a>kontakto mbështetjen</a> nëse gabimi vazhdon.",
            Back: "Kthehu",
            "Back to Log in": "Kthehu tek identifikimi",
            "Billing info": "Te dhenat e faturimit",
            "Black Friday": "E premtja e zeze",
            "Cancel anytime.": "Anullo ne cdo kohe.",
            "Cancel subscription": "Anullo abonimin",
            "Cancellation reason": "Arsyeja e anullimit",
            Change: "Ndrysho",
            "Check spam & promotions folders":
                "Kontrolloni dosjet e postës së padëshiruar dhe promovimeve ",
            "Check with your mail provider":
                "Kontrolloni me ofruesin tuaj të postës",
            Choose: "Zgjidh",
            "Choose a different plan": "Zgjidh nje plan ndryshe",
            "Choose your newsletters": "Zgjidh buletinin tend",
            "Click here to retry": "Kliko ketu per te provuar perseri",
            Close: "Mbyll",
            Comments: "Komentet",
            Complimentary: "Pa pagesë",
            Confirm: "Konfirmo",
            "Confirm cancellation": "Konfirmo anullimin",
            "Confirm subscription": "Konfirmo abonimin",
            "Contact support": "Kontakto suportin",
            Continue: "Vazhdoni",
            "Continue subscription": "Vazhdoni abonimin",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "Shto nje kontakt te ri",
            "Current plan": "Plani aktual",
            "Delete account": "Fshini llogarine",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Nuk doje ta bëje këtë? Menaxho preferencat e tua <button>këtu</button>.",
            "Don't have an account?": "Nuk keni nje llogari?",
            Edit: "Modifiko",
            Email: "Email",
            "Email newsletter": "Buletini i emailit",
            "Email preference updated.": "Preferenca e emailit u përditësua.",
            "Email preferences": "Preferenat e emailit",
            Emails: "Emailet",
            "Emails disabled": "Emailet e çaktivizuara",
            "Ends {{offerEndDate}}": "Perfundon {{offerEndDate}}",
            Error: "Gabim",
            "Expires {{expiryDate}}": "Mbaron",
            Forever: "Pergjithmone",
            "Free Trial – Ends {{trialEnd}}":
                "Prova falas – mbaron {{trialEnd}}",
            "Get help": "Merr ndihme",
            "Get in touch for help": "Kontaktoni për ndihmë",
            "Get notified when someone replies to your comment": "",
            "Give feedback on this post": "Ler nje koment ne kete post",
            "Help! I'm not receiving emails": "Ndihme! Nuk po marr emaile",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Nëse një buletin shënohet si i padëshiruar, emailet çaktivizohen automatikisht për atë adresë për t'u siguruar që nuk do të merrni më mesazhe të padëshiruara.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Nëse ankesa për postën e padëshiruar ishte aksidentale, ose dëshironi të filloni të merrni përsëri email, mund të regjistroheni përsëri në email duke klikuar butonin në ekranin e mëparshëm.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Nëse e anuloni abonimin tuaj tani, do të vazhdoni të keni akses deri në {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Nëse keni një llogari të postës elektronike të korporatës ose të qeverisë, kontaktoni departamentin tuaj të IT dhe kërkojuni që të lejojnë marrjen e emaileve nga {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Nëse dëshironi të filloni të merrni përsëri emaile, hapat më të mirë të metejshem janë të kontrolloni adresën tuaj të emailit në dosje për ndonjë problem dhe më pas klikoni Ri-abonohu në ekranin e mëparshëm.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Nëse nuk po merrni buletinin me email në të cilin jeni abonuar, këtu janë disa gjëra për të kontrolluar.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Nëse i keni përfunduar të gjitha këto kontrolle dhe ende nuk po merrni email, mund të kontaktoni për të marrë mbështetje duke kontaktuar {{supportAddress}}.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Në rast se merret një dështim i përhershëm gjatë përpjekjes për të dërguar një buletin, emailet do të çaktivizohen në llogari.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Në klientin tuaj të postës elektronike shtoni {{senderEmail}} në listën tuaj të kontakteve. Kjo i sinjalizon ofruesit tuaj të postës elektronike që emailet e dërguara nga kjo adresë duhet të jenë të besueshme.",
            "Less like this": "Me pak si kjo",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Sigurohuni që emailet të mos përfundojnë aksidentalisht në dosjet e postës së padëshiruar ose të promovimeve të kutisë suaj hyrëse. Nëse janë, klikoni në "Shëno si jo të padëshiruar" dhe/ose "Lëviz te kutia hyrëse".',
            Manage: "Menaxho",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Mujore",
            "More like this": "Me shume si kjo",
            Name: "Emri",
            "Need more help? Contact support":
                "Te duhet me shume ndihme? Kontakto suportin",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Buletinet mund të çaktivizohen në llogarinë tuaj për dy arsye: Një email i mëparshëm u shënua si i padëshiruar, ose përpjekja për të dërguar një email rezultoi në një dështim të përhershëm (kercim).",
            "Not receiving emails?": "Nuk po merr emaile?",
            "Now check your email!": "Kontrollo emailin tend tani!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Pasi të regjistroheni përsëri, nëse ende nuk i shihni emailet në kutinë tuaj hyrëse, kontrolloni dosjen tuaj të postës së padëshiruar. Disa ofrues të kutisë hyrëse mbajnë një regjistër të ankesave të mëparshme të postës së padëshiruar dhe do të vazhdojnë të raportojnë emailet. Nëse kjo ndodh, shëno buletinin më të fundit si 'Jo e padëshiruar' për ta zhvendosur atë në kutinë hyrëse kryesore.",
            "Permanent failure (bounce)": "Deshtim i perhershem (kercim)",
            Plan: "Plani",
            "Plan checkout was cancelled.": "Pagesa e planit u anullua.",
            "Plan upgrade was cancelled.": "Përmirësimi i planit u anullua.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields":
                "Ju lutem plotesoni fushat e kerkuara",
            Price: "Çmimi",
            "Re-enable emails": "Ri-aktivizo emailet",
            Recommendations: "",
            "Renews at {{price}}.": "Rinovohet per {{price}} ",
            Retry: "Provo perseri",
            Save: "Ruaj",
            "Send an email and say hi!":
                "Dergo nje email dhe thuaj pershendetje!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Dërgo një email te {{senderEmail}} dhe thuaj përshëndetje. Kjo mund të ndihmojë gjithashtu t'i sinjalizojë ofruesit tuaj të postës elektronike se emailet drejt-dhe-nga kjo adresë duhet të jenë të besueshme.",
            "Sending login link...": "Duke derguar linkun e identifikimit...",
            "Sending...": "Duke derguar...",
            "Show all": "",
            "Sign in": "Hyr",
            "Sign out": "Dil",
            "Sign up": "Rregjistrohu",
            "Signup error: Invalid link":
                "Gabim ne rregjistrim: Link i pavlefshem",
            "Sorry, that didn’t work.": "Na vjen keq, kjo nuk funksionoi.",
            "Spam complaints": "Ankesat për mesazhe të padëshiruara",
            "Start {{amount}}-day free trial": "",
            "Starting {{startDate}}": "Duke filluar {{startDate}}",
            "Starting today": "Duke filluar nga sot",
            "Submit feedback": "Dergo komente",
            Subscribe: "Abonohu",
            Subscribed: "Abonuar",
            Success: "Sukses",
            "Success! Check your email for magic link to sign-in.":
                "Sukses! Kontrollo emailin tend per linkun magjik te indentifikimit.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Sukses! Llogaria jote eshte plotesisht e aktivizuar, tashme ju keni akses ne te githe kontentin",
            "Success! Your email is updated.":
                "Sukses! Emaili yt eshte rifreskuar",
            "Successfully unsubscribed": "Çabonuar me sukses",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Faleminderit per komentin!",
            "That didn't go to plan": "Kjo nuk shkoi sipas planit",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Pati një problem me dërgimin e komenteve tuaja. Ju lutemi provoni sërish pak më vonë.",
            "This site is invite-only, contact the owner for access.":
                "Kjo faqe eshte vetem me ftesa, kontaktoni zoteruesin per akses.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Për të përfunduar regjistrimin, klikoni lidhjen e konfirmimit në kutinë tuaj hyrëse. Nëse nuk arrin brenda 3 minutash, kontrolloni dosjen tuaj të postës elektronike!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Provo falas per {{amount}} dite, pastaj {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Zhbllokoni aksesin per te gjitha buletinet duke u bere nje abonues me pagese.",
            "Unsubscribe from all emails": "Çregjistrohu nga të gjitha emailet",
            Unsubscribed: "I çabonuar",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Çregjistrimi nga emailet nuk do ta anulojë abonimin tuaj me pagesë në {{title}}",
            Update: "Rifresko",
            "Update your preferences": "Përditësoni preferencat tuaja",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Verifikoni që adresa juaj e emailit është e saktë",
            "View plans": "Shiko planet",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "",
            "Welcome back, {{name}}!": "Mire se erdhe, {{name}}!",
            "Welcome back!": "Mire se erdhe!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Kur një kuti hyrëse dështon të pranojë një email, zakonisht quhet kthim. Në shumë raste, kjo mund të jetë e përkohshme. Megjithatë, në disa raste, një email i kthyer mund të kthehet si një dështim i përhershëm kur një adresë emaili është e pavlefshme ose nuk ekziston.",
            "Why has my email been disabled?":
                "Pse është çaktivizuar emaili im?",
            Yearly: "Vjetore",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Ju keni aktualisht nje antaresim falas, beni abonimin me pagese per akses te plote. ",
            "You have been successfully resubscribed":
                "Ju jeni ri-abonuar me sukses",
            "You're currently not receiving emails":
                "Aktualisht nuk po merrni emaile",
            "You're not receiving emails": "Ju nuk po merrni emaile",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Ju nuk po merrni email sepse ose keni shënuar një mesazh të fundit si të padëshiruar, ose sepse mesazhet nuk mund të dërgoheshin në adresën tuaj të emailit të dhënë.",
            "You've successfully signed in.": "Ju jeni identifikuar me sukses.",
            "You've successfully subscribed to": "",
            "Your account": "Llogaria juar",
            "Your input helps shape what gets published.":
                "Të dhënat tuaja ndihmojnë në formimin e asaj që publikohet.",
            "Your subscription will expire on {{expiryDate}}":
                "Abonimi juaj do te skadoje ne {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Abonimi juaj to te rinovohet ne {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Abonimi juaj do te filloje ne {{subscriptionStart}}",
        },
        M1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "{{discount}}% popust",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "{{trialDays}} dana besplatno",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Link za logovanje je poslat na Vašu email adresu. Ukoliko ne stigne za 3 minuta proverite spam folder.",
            Account: "Nalog",
            "Account settings": "Podešavanja naloga",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Nakon što probni period istekne, izvršiće se naplata za plan koji ste izabrali. Uvek možete da otkažete pretplatu pre toga.",
            "Already a member?": "Već ste član?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Nazad",
            "Back to Log in": "Nazad na logovanje",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "Otkaži pretplatu",
            "Cancellation reason": "Razlog za otkazivanje",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "Izaberi drugi plan",
            "Choose your newsletters": "Izaberi ",
            "Click here to retry": "",
            Close: "Zatvori",
            Comments: "Komentari",
            Complimentary: "",
            Confirm: "Potvrdi",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "Nastavi",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "Obriši nalog",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "Nemate nalog?",
            Edit: "",
            Email: "Email",
            "Email newsletter": "",
            "Email preference updated.": "Email podešavanja su sačuvana.",
            "Email preferences": "Email podešavanja",
            Emails: "Email-ovi",
            "Emails disabled": "Isključeni email-ovi",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Potražite pomoć",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment":
                "Obavestite me ako neko odgovori na moj komentar:",
            "Give feedback on this post": "Ostavite komentar na ovaj post",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Manje sadržaja kao ovaj",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Podešavanja",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Mesečno",
            "More like this": "Više sadržaja kao ovaj",
            Name: "Ime",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Ne dobijate e-poštu?",
            "Now check your email!": "Proverite Vaš email!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Cena",
            "Re-enable emails": "Omogući email adrese ponovo",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Pokušaj opet",
            Save: "Snimi",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Link za logovanje se šalje...",
            "Sending...": "Slanje...",
            "Show all": "",
            "Sign in": "Prijava",
            "Sign out": "",
            "Sign up": "Registracija",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "Počni {{amount}} dana besplatnu probu",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Pošalji povratne informacije",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Uspešna odjava",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Hvala za povratne informacije!",
            "That didn't go to plan": "Nešto nije kako treba",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "Ovaj sajt je samo za članove, kontaktirajte vlasnika kako bi dobili pristup.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Kliknite na link da biste završili registraciju. Ukoliko ne stigne za 3 minuta proverite spam folder!",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails": "Odjavite se sa svih email-ova",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Odjavljivanjem sa email-ova nećete prekinuti Vašu pretplatu na {{title}}",
            Update: "",
            "Update your preferences": "Izmenite Vaša podešavanja",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Nismo uspeli da odjavimo email. Molimo Vas kontaktirajte vlasnika sajta.",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Godišnje",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed":
                "Uspešno ste se prijavili ponovo",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Ne primate e-poruke zato što ste nedavnu poruku označili kao nepoželjnu ili zato što poruke nisu mogle da se isporuče na adresu e-pošte koju ste naveli.",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "Vaš nalog",
            "Your input helps shape what gets published.":
                "Vaš doprinos pomaže u oblikovanju onoga što se objavljuje.",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        R1 = {
            "{{amount}} days free": "{{amount}} gratisdagar",
            "{{amount}} off": "{{amount}} i rabatt",
            "{{amount}} off for first {{number}} months.":
                "{{amount}} i rabatt de första {{number}} månaderna.",
            "{{amount}} off for first {{period}}.":
                "{{amount}} i rabatt under första {{period}}.",
            "{{amount}} off forever.": "{{amount}} i rabatt tills vidare",
            "{{discount}}% discount": "{{discount}}% rabatt",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} kommer inte längre få utskicket {{newsletterName}}",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} kommer inte längre att få meddelanden när någon svarar på din kommentar",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} kommer inte längre att få det här nyhetsbrevet",
            "{{trialDays}} days free": "{{trialDays}} dagar gratis",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "En inloggningslänk har skickats till din inkorg. Om den inte anländer inom 3 minuter, kontrollera din skräppostmapp.",
            Account: "Konto",
            "Account settings": "Kontoinställningar",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Efter att en gratis provperiod avslutas debiteras du det ordinarie priset för den nivå du har valt. Du kan alltid avbryta innan dess.",
            "Already a member?": "Redan medlem?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Ett oväntat fel inträffade. Försök igen eller <a>kontakta administratören</a> om felet kvarstår.",
            Back: "Tillbaka",
            "Back to Log in": "Tillbaka till inloggning",
            "Billing info": "Betalningsinformation",
            "Black Friday": "Black Friday",
            "Cancel anytime.": "Avsluta när som helst",
            "Cancel subscription": "Avbryt prenumeration",
            "Cancellation reason": "Anledning till avslut",
            Change: "Ändra",
            "Check spam & promotions folders": "Titta i skräppostmappen",
            "Check with your mail provider":
                "Verifirera att e-posten fungerar för ditt konto",
            Choose: "Välj",
            "Choose a different plan": "Välj en annan prenumeration",
            "Choose your newsletters": "Välj dina nyhetsbrev",
            "Click here to retry": "Klicka här för att försöka igen",
            Close: "Stäng",
            Comments: "Kommentarer",
            Complimentary: "Kostnadsfri",
            Confirm: "Bekräfta",
            "Confirm cancellation": "Bekräfta uppsägning",
            "Confirm subscription": "Bekräfta prenumeration",
            "Contact support": "Kontakta supporten",
            Continue: "Fortsätt",
            "Continue subscription": "Förläng prenumeration",
            "Could not sign in. Login link expired.":
                "Kunde inte logga in. Inloggningslänken har slutat gälla.",
            "Could not update email! Invalid link.":
                "Kunde inte uppdatera e-postadressen. Länken fungerande inte.",
            "Create a new contact": "Skapa en ny kontakt",
            "Current plan": "Nuvarande prenumeration",
            "Delete account": "Radera konto",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Ville du inte göra det här? Ändra dina inställningar <button>här</button>",
            "Don't have an account?": "Har du inget konto?",
            Edit: "Editera",
            Email: "E-post",
            "Email newsletter": "Nyhetsbrev via e-post",
            "Email preference updated.":
                "Inställningar för e-post uppdaterade.",
            "Email preferences": "E-postinställningar",
            Emails: "E-postmeddelanden",
            "Emails disabled": "E-post inaktiverad",
            "Ends {{offerEndDate}}": "Avslutas {{offerEndDate}}",
            Error: "Fel",
            "Expires {{expiryDate}}": "Utgår {{expiryDate}}",
            Forever: "Tillsvidare",
            "Free Trial – Ends {{trialEnd}}":
                "Gratispepriod – slutar {{trialEnd}}",
            "Get help": "Få hjälp",
            "Get in touch for help": "Kontakta oss för hjälp",
            "Get notified when someone replies to your comment":
                "Få en avisering när någon svarar på din kommentar",
            "Give feedback on this post": "Ge feedback på det här inlägget",
            "Help! I'm not receiving emails": "Hjälp! Jag får inte e-posten",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Om ett nyhetsbrev markeras som skräppost, stängs utskicken till den e-postadressen av automatiskt för att det inte skall skickas ovälkomna meddelanden.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Om nyhetsbrevet av misstag markerades som skräppost och du vill återuppta utskicken kan du aktivera nyhetsbrevet på föregående sida.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Om du säger upp prenumerationen nu kommer du att ha tillgång till {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Om din organisations e-postlösning blockerar utskicken kan du be administratören att tillåta e-post från adressen {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Om du vill börja ta emot utskicken igen, verifiera att du angett korrekt e-postadress och sedan klickar du på återaktivera utskick på förra sidan.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Om du inte får e-postutskicken från oss finns det några saker du kan göra.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Om det fortfarande inte fungerar efter att du undersökt allt kan du kontakta oss på {{supportAddress}}.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Om e-postutskick till din adress resulterar i ett permanent fel kommer utskicksförsök att upphöra.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Spara {{senderEmail}} som en kontakt i ditt e-postprogram. Det signalerar till din e-postleverantör att e-post från denna är adress är viktig.",
            "Less like this": "Mindre sånt här",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Verifiera att e-postmeddelandena inte hamnat i skräppostmappen. Om de gjort det, flytta dem till inkorgen och/eller markera som "Ej skräppost".',
            Manage: "Hantera",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Månadsvis",
            "More like this": "Mer sånt här",
            Name: "Namn",
            "Need more help? Contact support":
                "Behöver du mer hjälp? Kontakta administratören.",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Nyhetsbrev kan inaktiveras på ditt konto av två anledningar: ett tidigare utskick markerades som spam, eller ett försök att skicka ett e-postmeddelande resulterade i ett permanent fel.",
            "Not receiving emails?": "Får du inga e-postmeddelanden?",
            "Now check your email!": "Kolla nu din e-post!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Om du fortfarande inte ser e-post i din inkorg efter att du återaktiverat utskicken, kontrollera din skräppostmapp. Vissa e-postleverantörer behåller en historik över tidigare spamklagomål och fortsätter att markera e-post som spam. Om detta händer, markera det senaste nyhetsbrevet som 'Inte spam' för att flytta tillbaka det till din huvudsakliga inkorg.",
            "Permanent failure (bounce)":
                "Permanent fel vid e-postutsskick (studs)",
            Plan: "Prenumerationen",
            "Plan checkout was cancelled.": "Köp av prenumeration avbrutet",
            "Plan upgrade was cancelled.":
                "Uppgradering av prenunmeration avbruten",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "Fyll i alla obligatoriska fält",
            Price: "Pris",
            "Re-enable emails": "Återaktivera e-post",
            Recommendations: "",
            "Renews at {{price}}.": "Förnyas till priset {{price}}",
            Retry: "Försök igen",
            Save: "Spara",
            "Send an email and say hi!": "Skicka e-post och säg hej!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Skicka ett e-postmeddelande till {{senderEmail}} och säj hej. Detta blir en signal till din e-postleverantör meddelanden till/från {{senderEmail}} är viktiga.",
            "Sending login link...": "Skickar inloggningslänk...",
            "Sending...": "Skickar...",
            "Show all": "",
            "Sign in": "Logga in",
            "Sign out": "Logga ut",
            "Sign up": "Få uppdateringar",
            "Signup error: Invalid link":
                "Registreringsfel. Länken fungerade inte.",
            "Sorry, that didn’t work.": "Tyvärr, det fungerande inte.",
            "Spam complaints": "Skräppostrapporter",
            "Start {{amount}}-day free trial":
                "Starta {{amount}}-dagars gratis testprenumeration",
            "Starting {{startDate}}": "Startar {{startDate}}",
            "Starting today": "Startar idag",
            "Submit feedback": "Skicka feedback",
            Subscribe: "Anmäl dig",
            Subscribed: "Anmäld",
            Success: "Det gick bra",
            "Success! Check your email for magic link to sign-in.":
                "Det gick bra. Titta i din e-post efter ett meddelande från oss med en inloggningslänk.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Det gick bra! Ditt konto är uppdaterat och du har tillgång till allt material.",
            "Success! Your email is updated.":
                "Det gick bra! Din e-postadress är uppdaterad.",
            "Successfully unsubscribed":
                "Prenumerationen avslutades framgångsrikt",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Tack för din feedback!",
            "That didn't go to plan": "Det där fungerade inte som tänkt",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "E-postadressen vi har för dig är {{memberEmail}} — om det inte stämmer kan du uppdatera den i <button>kontoinställningar</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Det fungerande inte att skicka in din feedbak. Försök igen lite senare.",
            "This site is invite-only, contact the owner for access.":
                "Den här sidan är endast för inbjudna, kontakta ägaren för åtkomst.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "För att slutföra registreringen, klicka på bekräftelselänken i din inkorg. Om den inte kommer fram inom 3 minuter, kolla din skräppostmapp!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Prova gratis i {{amount}} dagar, sen betalar du {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Få tillgång till alla nyhetsbrev genom att bli betalande prenumerant",
            "Unsubscribe from all emails":
                "Avregistrera från alla e-postutskick",
            Unsubscribed: "Avregistrerad",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Avregistrering från e-postmeddelanden kommer inte att avbryta din betalda prenumeration på {{title}}",
            Update: "Uppdatera",
            "Update your preferences": "Uppdatera dina inställningar",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Kontrollera att e-postadressen är korrekt",
            "View plans": "Visa prenumerationsalternativ",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Vi kunde inte avsluta kontot eftersom e-postadressen inte hittades. Vänligen kontakta webbplatsens ägare.",
            "Welcome back, {{name}}!": "Välkommen tillbaka, {{name}}!",
            "Welcome back!": "Välkommen tillbaka!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "När en mottagare inte kan ta emot ett e-postmeddelande kallas det vanligtvis för att ett mejl studsar. I många fall kan detta vara tillfälligt. Dock kan i vissa fall ett studsande mejl returneras som ett permanent fel när en e-postadress är ogiltig eller inte existerar.",
            "Why has my email been disabled?":
                "Varför har e-postutskicken stängts av?",
            Yearly: "Årligen",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Du har för närvarande ett gratiskonto. Uppgradera till en betald prenumeration för att full tillgång.",
            "You have been successfully resubscribed": "Du är nu anmäld ",
            "You're currently not receiving emails":
                "Du tar för närvarande inte emot e-post",
            "You're not receiving emails": "Du tar inte emot e-post",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Du får inte e-postmeddelanden eftersom du antingen markerade ett nyligt meddelande som skräppost, eller för att meddelanden inte kunde levereras till din angivna e-postadress.",
            "You've successfully signed in.": "Du är nu inloggad.",
            "You've successfully subscribed to": "",
            "Your account": "Ditt konto",
            "Your input helps shape what gets published.":
                "Din åsikt hjälper till att forma vad som publiceras.",
            "Your subscription will expire on {{expiryDate}}":
                "Din prenumeration avslutas {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Din prenumeration förnyas {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Din prenumeration startar {{subscriptionStart}}",
        },
        L1 = {
            "{{amount}} days free": "{{amount}} gün ücretsiz",
            "{{amount}} off": "{{amount}} indirim",
            "{{amount}} off for first {{number}} months.":
                "İlk {{number}} ay için {{amount}} indirim.",
            "{{amount}} off for first {{period}}.":
                "İlk {{period}} için {{amount}} indirim.",
            "{{amount}} off forever.": "Sonsuza kadar {{amount}} indirim.",
            "{{discount}}% discount": "%{{discount}} indirim",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} artık {{newsletterName}} haber bülteni almayacak.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}}, yorumlarınıza yanıt verildiğinde artık e-posta almayacak.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} artık bu haber bültenini almayacak.",
            "{{trialDays}} days free": "{{trialDays}} gün ücretsiz",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Gelen kutuna bir giriş linki gönderildi. Eğer 3 dakika içinde ulaşmazsa spam klasörünü kontrol ettiğinden emin ol.",
            Account: "Hesap",
            "Account settings": "Hesap ayarları",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Ücretsiz deneme süresi bittikten sonra seçtiğin kategorinin normal fiyatından ücretlendirileceksin. O zamana kadar her an iptal edebilirsin.",
            "Already a member?": "Zaten üye misin?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Beklenmeyen bir hata oluştu. Lütfen tekrar deneyin veya hata devam ederse <a>destek ile iletişime geçin</a>.",
            Back: "Geri dön",
            "Back to Log in": "Giriş ekranına geri dön",
            "Billing info": "Fatura bilgisi",
            "Black Friday": "Muhteşem Cuma",
            "Cancel anytime.": "İstediğiniz zaman iptal edin.",
            "Cancel subscription": "Aboneliği iptal et",
            "Cancellation reason": "İptal sebebi",
            Change: "Değiştir",
            "Check spam & promotions folders":
                "Spam ve promosyonlar klasörlerini kontrol edin",
            "Check with your mail provider":
                "Posta sağlayıcınızla kontrol edin",
            Choose: "Seç",
            "Choose a different plan": "Farklı bir plan seç",
            "Choose your newsletters": "Haber e-postanı seç",
            "Click here to retry": "Tekrar denemek için buraya tıkla",
            Close: "Kapat",
            Comments: "Yorumlar",
            Complimentary: "Ücretsiz",
            Confirm: "Onayla",
            "Confirm cancellation": "İptal İşlemini Onayla",
            "Confirm subscription": "Aboneliği onayla",
            "Contact support": "Desteğe başvurun",
            Continue: "Devam et",
            "Continue subscription": "Aboneliğe devam et",
            "Could not sign in. Login link expired.":
                "Oturum açılamadı. Oturum açma bağlantısının süresi doldu.",
            "Could not update email! Invalid link.":
                "E-posta güncellenemedi! Geçersiz link.",
            "Create a new contact": "Yeni bir kullanıcı oluştur",
            "Current plan": "Mevcut plan",
            "Delete account": "Hesabı sil",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Bunu yapmak istemedin mi? Tercihlerinizi <button>buradan</button> yönetin.",
            "Don't have an account?": "Hesabın yok mu?",
            Edit: "Düzenle",
            Email: "E-posta",
            "Email newsletter": "E-posta bülteni",
            "Email preference updated.": "E-posta tercihi güncellendi.",
            "Email preferences": "E-posta tercihleri",
            Emails: "E-postalar",
            "Emails disabled": "E-postalar devre dışı",
            "Ends {{offerEndDate}}": "{{offerEndDate}} tarihinde bitiyor",
            Error: "Hata",
            "Expires {{expiryDate}}": "{{expiryDate}} tarihinde sona eriyor",
            Forever: "Süresiz",
            "Free Trial – Ends {{trialEnd}}":
                "Ücretsiz Deneme – {{trialEnd}} tarihinde sona erer",
            "Get help": "Yardım al",
            "Get in touch for help": "Yardım için iletişime geçin",
            "Get notified when someone replies to your comment":
                "Birisi yorumuna cevap yazdığında bildirim al",
            "Give feedback on this post": "Gönderiye geri bildirim ver",
            "Help! I'm not receiving emails": "Yardım! e-postası alamıyorum",
            "Here are a few other sites you may enjoy.":
                "İşte keyif alabileceğiniz birkaç diğer site daha.",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Bir haber bülteni spam olarak işaretlenirse, artık istenmeyen mesaj almadığınızdan emin olmak için bu adres için e-postalar otomatik olarak devre dışı bırakılır.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Spam şikayeti yanlışlıkla olduysa veya tekrar e-posta almaya başlamak istiyorsanız, önceki ekrandaki düğmeyi tıklayarak e-postalara yeniden abone olabilirsiniz.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Aboneliğinizi şimdi iptal ederseniz, {{periodEnd}} tarihine kadar erişiminiz devam edecek.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Kurumsal veya devlet e-posta hesabınız varsa BT departmanınıza ulaşın ve {{senderEmail}} adresinden e-posta alınmasına izin vermelerini isteyin.",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Tekrar e-posta almaya başlamak istiyorsanız, bundan sonraki en iyi adım, dosyadaki e-posta adresinizde herhangi bir sorun olup olmadığını kontrol etmek ve ardından önceki ekranda yeniden abone ol'u tıklamaktır.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Abone olduğunuz e-posta bültenini almıyorsanız, kontrol etmeniz gereken birkaç şey var.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Tüm bu kontrolleri tamamlamanıza rağmen hala e-posta almıyorsanız, {{supportAddress}} ile iletişime geçerek destek almak için ulaşabilirsiniz.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Haber bülteni göndermeye çalışırken kalıcı bir hata alınması durumunda, hesapta e-postalar devre dışı bırakılır.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "E-posta istemcinizde {{senderEmail}} adresini kişi listenize ekleyin. Bu, posta sağlayıcınıza bu adresten gönderilen e-postaların güvenilir olması gerektiğini bildirir.",
            "Less like this": "Bunun gibi daha az",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'E-postaların yanlışlıkla gelen kutunuzun Spam veya Promosyonlar klasörlerine düşmediğinden emin olun. Varsa, "Spam değil olarak işaretle" ve/veya "Gelen kutusuna taşı"yı tıklayın.',
            Manage: "Yönet",
            "Maybe later": "Belki daha sonra",
            "Memberships unavailable, contact the owner for access.":
                "Üyelikler müsait değil, erişim için sahibe başvurun.",
            Monthly: "Aylık",
            "More like this": "Bunun gibi daha fazla",
            Name: "İsim",
            "Need more help? Contact support":
                "Daha fazla yardıma mı ihtiyacınız var? Desteğe başvurun",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Bültenler, hesabınızda iki nedenden dolayı devre dışı bırakılabilir: Önceki bir e-posta istenmeyen posta olarak işaretlendi veya bir e-posta gönderilmeye çalışıldığında kalıcı bir başarısızlıkla (geri dönme) sonuçlandı.",
            "Not receiving emails?": "E-posta almıyor musun?",
            "Now check your email!": "Şimdi e-posta kutunu kontrol et!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Yeniden abone olduktan sonra, gelen kutunuzda hala e-posta göremiyorsanız spam klasörünüzü kontrol edin. Bazı gelen kutusu sağlayıcıları, önceki spam şikayetlerinin kaydını tutar ve e-postaları işaretlemeye devam eder. Böyle bir durumda, birincil gelen kutunuza geri taşımak için en son haber bültenini 'Spam değil' olarak işaretleyin.",
            "Permanent failure (bounce)": "Kalıcı başarısızlık (sıçra)",
            Plan: "Plan",
            "Plan checkout was cancelled.": "Plan ödemesi iptal edildi.",
            "Plan upgrade was cancelled.": "Plan yükseltme iptal edildi.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields":
                "Lütfen gerekli alanları doldurunuz",
            Price: "Fiyat",
            "Re-enable emails": "E-postaları yeniden etkinleştir",
            Recommendations: "Tavsiyeler",
            "Renews at {{price}}.": "{{price}} karşılığında yenilenir.",
            Retry: "Tekrar dene",
            Save: "Kaydet",
            "Send an email and say hi!":
                "Bir e-posta gönderin ve merhaba deyin!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "{{senderEmail}} adresine bir e-posta gönderin ve merhaba deyin. Bu, posta sağlayıcınıza bu adresten gelen ve bu adresten gelen e-postalara güvenilmesi gerektiğinin sinyalini de verebilir.",
            "Sending login link...": "Giriş linki gönderiliyor...",
            "Sending...": "Gönderiliyor...",
            "Show all": "Hepsini göster",
            "Sign in": "Giriş yap",
            "Sign out": "Çıkış yap",
            "Sign up": "Kayıt ol",
            "Signup error: Invalid link": "Kayıt hatası: Geçersiz bağlantı",
            "Sorry, that didn’t work.": "Üzgünüm, bu işe yaramadı.",
            "Spam complaints": "Spam şikayetleri",
            "Start {{amount}}-day free trial":
                "{{amount}} gün ücretsiz deneme süresini başlat",
            "Starting {{startDate}}": "{{startDate}} tarihinden itibaren",
            "Starting today": "Bugün başlıyor",
            "Submit feedback": "Geri bildirim gönder",
            Subscribe: "Abone",
            Subscribed: "Abone olundu",
            Success: "Başarılı",
            "Success! Check your email for magic link to sign-in.":
                "Başarılı! Oturum açmak için sihirli bağlantı için e-postanızı kontrol edin.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Başarılı! Hesabınız tamamen etkinleştirildi, artık tüm içeriğe erişebilirsiniz.",
            "Success! Your email is updated.":
                "Başarılı! E-postanız güncellendi.",
            "Successfully unsubscribed": "Abonelikten başarıyla çıkıldı",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Geri bildirim için teşekkürler!",
            "That didn't go to plan": "Bir şeyler ters gitti",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Geri bildiriminiz gönderilirken bir sorun oluştu. Lütfen biraz sonra tekrar deneyin.",
            "This site is invite-only, contact the owner for access.":
                "Bu site sadece davetiyesi olanlar içindir, erişim için site sahibiyle iletişime geç.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Kaydını tamamlamak için gelen kutuna gönderilen onay linkine tıkla. Eğer 3 dakika içinde ulaşmazsa spam klasörünü kontrol et!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "{{amount}} gün ücretsiz deneyin, ardından {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Ücretli bir abone olarak tüm haber bültenlerine erişimin kilidini açın.",
            "Unsubscribe from all emails": "Tüm e-postaların aboneliğinden çık",
            Unsubscribed: "Abonelikten çıkıldı",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "E-postaların aboneliğinden çıkmak, {{title}} sitesine olan ücretli aboneliğini iptal etmeyecek",
            Update: "Güncelle",
            "Update your preferences": "Tercihlerini güncelle",
            "Verification link sent, check your inbox":
                "Doğrulama bağlantısı gönderildi, gelen kutunuzu kontrol edin",
            "Verify your email address is correct":
                "E-posta adresinizin doğru olduğunu doğrulayın",
            "View plans": "Planları göster",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "E-posta adresi bulunamadığı için seni abonelikten çıkaramıyoruz. Lütfen site sahibiyle iletişime geç.",
            "Welcome back, {{name}}!": "Tekrar hoş geldin {{name}}!",
            "Welcome back!": "Tekrar hoşgeldiniz!",
            "Welcome to {{siteTitle}}": "{{siteTitle}} hoş geldiniz",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Bir gelen kutusu bir e-postayı kabul edemediğinde buna genellikle geri dönen denir. Çoğu durumda, bu geçici olabilir. Bununla birlikte, bazı durumlarda, bir e-posta adresi geçersiz olduğunda veya mevcut olmadığında, geri dönen bir e-posta kalıcı bir başarısızlık olarak döndürülebilir.",
            "Why has my email been disabled?":
                "E-postam neden devre dışı bırakıldı?",
            Yearly: "Yıllık",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Şu anda ücretsiz üyeliğiniz var, tam erişim için ücretli aboneliğe yükseltin.",
            "You have been successfully resubscribed":
                "Başarıyla yeniden abone oldun",
            "You're currently not receiving emails":
                "Şu anda e-posta almıyorsunuz",
            "You're not receiving emails": "E-posta almıyorsunuz",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "E-postaları almıyorsun çünkü yakınlarda gönderilen bir mesajı spam olarak işaretledin ya da mesajlar verilen e-posta adresine teslim edilemedi.",
            "You've successfully signed in.": "Başarıyla oturum açtınız.",
            "You've successfully subscribed to": "Başarıyla abone oldunuz",
            "Your account": "Hesabın",
            "Your input helps shape what gets published.":
                "Yorumun yayımlanan içeriklerin şekillenmesine yardımcı olur.",
            "Your subscription will expire on {{expiryDate}}":
                "Aboneliğiniz {{expiryDate}} tarihinde sona erecek",
            "Your subscription will renew on {{renewalDate}}":
                "Aboneliğiniz {{renewalDate}} tarihinde yenilenecek",
            "Your subscription will start on {{subscriptionStart}}":
                "Aboneliğiniz {{subscriptionStart}} tarihinde başlayacak",
        },
        Y1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "Знижка {{discount}}%",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "Безплатно {{trialDays}} дні(-в)",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Посилання для входу було надіслано на твою пошту. Якщо воно не прийде протягом 3 хвилин, перевірь папку спам.",
            Account: "Oбліковий запис",
            "Account settings": "Налаштування облікового запису",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Після закінчення безплатного періоду, з тебе буде стягнена вартість за обраний тариф. Ти завжди можеш скасувати послугу до цього часу.",
            "Already a member?": "Вже зареєстрований?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Назад",
            "Back to Log in": "Повернутись до входу",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "Скасуй підписку",
            "Cancellation reason": "Причина скасування",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "Вибари інший план",
            "Choose your newsletters": "Вибери свої підписки",
            "Click here to retry": "",
            Close: "Закрий",
            Comments: "Коментарі",
            Complimentary: "",
            Confirm: "Підтвердь",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "Далі",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "Видалити обліковий запис",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "Не маєш облікового запису?",
            Edit: "",
            Email: "Електронна пошта",
            "Email newsletter": "",
            "Email preference updated.":
                "Налаштування електронної пошти оновлені.",
            "Email preferences": "Налаштування електронної пошти",
            Emails: "Електронні листи",
            "Emails disabled": "Електронна пошта вимкнена",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Отримати допомогу",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment":
                "Повідомляй коли хтось відповість на твій коментар",
            "Give feedback on this post": "Дати відгук на цю публікацію",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Менше подібних",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Управління",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Місячно",
            "More like this": "Більше подібних",
            Name: "Ім'я",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Не приходять листи?",
            "Now check your email!": "А тепер перевір свою пошту!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Ціна",
            "Re-enable emails": "Знову включити пошту",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Повтори спробу",
            Save: "Збережи",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Відправляється посилання для входу...",
            "Sending...": "Відправляється...",
            "Show all": "",
            "Sign in": "Вхід",
            "Sign out": "",
            "Sign up": "Реєстрація",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "Почни {{amount}}-денний безплатний період",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Вишли відгук",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Підписку успішно скасовано",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Дякуємо за відгук!",
            "That didn't go to plan": "Щось пішло не так",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "Цей сайт доступний тільки за запрошенням, звернись до власника сайта для доступу.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Щоб завершити реєстрацію, натисни посилання в своїй електронній пошті для підтвердження. Якщо електронний лист не прийде протягом 3 хвилин, перевір папку спам!",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails": "Відписатись від усіх листів",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Відписка від листів не скасує твою платну підписку на {{title}}",
            Update: "",
            "Update your preferences": "Онови свої налаштування",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Ми не можемо відписати тебе, оскільки адреса електронної пошти не знайдена. Будь ласка, зв'яжись з власником сайту.",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Річно",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed":
                "Тебе успішно підписано знову",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Не приходять листи, оскільки останній отриманий лист був тобою позначений як спам, або листи не можуть бути доставлені на твою адресу електронної пошти.",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "Твій обліковий запис",
            "Your input helps shape what gets published.":
                "Твій відгук допоможе вирішити що публікувати далі.",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        U1 = {
            "{{amount}} days free": "",
            "{{amount}} off": "",
            "{{amount}} off for first {{number}} months.": "",
            "{{amount}} off for first {{period}}.": "",
            "{{amount}} off forever.": "",
            "{{discount}}% discount": "{{discount}}% chegirma",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "",
            "{{memberEmail}} will no longer receive this newsletter.": "",
            "{{trialDays}} days free": "{{trialDays}} kun bepul",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Kirish havolasi email pochtangizga yuborildi. Agar u 3 daqiqada kelmasa, spam bo'limini tekshiring",
            Account: "Hisob",
            "Account settings": "Hisob sozlamalari",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Bepul sinov muddati tugagandan so'ng, siz tanlagan daraja uchun odatdagi narxdan undiriladi. Undan oldin istalgan vaqtda bekor qilishingiz mumkin.",
            "Already a member?": "Allaqachon a'zomisiz?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "",
            Back: "Orqaga",
            "Back to Log in": "Kirish sahifasiga qaytish",
            "Billing info": "",
            "Black Friday": "",
            "Cancel anytime.": "",
            "Cancel subscription": "Obunani bekor qilish",
            "Cancellation reason": "Bekor qilish sababi",
            Change: "",
            "Check spam & promotions folders": "",
            "Check with your mail provider": "",
            Choose: "",
            "Choose a different plan": "Boshqa rejani tanlang",
            "Choose your newsletters": "Pochta xabarlarini tanlang",
            "Click here to retry": "",
            Close: "Yopmoq",
            Comments: "Izohlar",
            Complimentary: "",
            Confirm: "Tasdiqlamoq",
            "Confirm cancellation": "",
            "Confirm subscription": "",
            "Contact support": "",
            Continue: "Davom etmoq",
            "Continue subscription": "",
            "Could not sign in. Login link expired.": "",
            "Could not update email! Invalid link.": "",
            "Create a new contact": "",
            "Current plan": "",
            "Delete account": "Hisobni o'chirmoq",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "",
            "Don't have an account?": "Hisobingiz yoqmi?",
            Edit: "",
            Email: "Email",
            "Email newsletter": "",
            "Email preference updated.": "Email sozlamalari yangilandi.",
            "Email preferences": "Email sozlamalari",
            Emails: "Elektron xatlar",
            "Emails disabled": "Elektron pochta xabarlari o‘chirilgan",
            "Ends {{offerEndDate}}": "",
            Error: "",
            "Expires {{expiryDate}}": "",
            Forever: "",
            "Free Trial – Ends {{trialEnd}}": "",
            "Get help": "Yordam olmoq",
            "Get in touch for help": "",
            "Get notified when someone replies to your comment":
                "Kimdir sharhingizga javob bersa, bildirishnoma oling",
            "Give feedback on this post": "Ushbu post haqida fikr bildiring",
            "Help! I'm not receiving emails": "",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "",
            "Less like this": "Bu kabi kamroq",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "",
            Manage: "Boshqarmoq",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Oylik",
            "More like this": "Ko'proq shunga o'xshash",
            Name: "Ism",
            "Need more help? Contact support": "",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "",
            "Not receiving emails?": "Elektron xatlar olmayapsizmi?",
            "Now check your email!": "Endi elektron pochtangizni tekshiring!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "",
            "Permanent failure (bounce)": "",
            Plan: "",
            "Plan checkout was cancelled.": "",
            "Plan upgrade was cancelled.": "",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "",
            Price: "Narx",
            "Re-enable emails": "Elektron pochta xabarlarini qayta yoqing",
            Recommendations: "",
            "Renews at {{price}}.": "",
            Retry: "Qayta urinmoq",
            Save: "Saqlamoq",
            "Send an email and say hi!": "",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "",
            "Sending login link...": "Kirish havolasi yuborilmoqda...",
            "Sending...": "Yuborilmoqda...",
            "Show all": "",
            "Sign in": "Kirish",
            "Sign out": "",
            "Sign up": "Ro'yxatdan o'tmoq",
            "Signup error: Invalid link": "",
            "Sorry, that didn’t work.": "",
            "Spam complaints": "",
            "Start {{amount}}-day free trial":
                "{{amount}}-kun sinov muddatini boshlang",
            "Starting {{startDate}}": "",
            "Starting today": "",
            "Submit feedback": "Izoh yuboring",
            Subscribe: "",
            Subscribed: "",
            Success: "",
            "Success! Check your email for magic link to sign-in.": "",
            "Success! Your account is fully activated, you now have access to all content.":
                "",
            "Success! Your email is updated.": "",
            "Successfully unsubscribed": "Obuna muvaffaqiyatli bekor qilindi",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Izoh uchun rahmat!",
            "That didn't go to plan": "Bu rejaga mos kelmadi",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "",
            "There was a problem submitting your feedback. Please try again a little later.":
                "",
            "This site is invite-only, contact the owner for access.":
                "Bu saytda faqat taklif qilinadi, kirish uchun egasiga murojaat qiling.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Ro‘yxatdan o‘tishni yakunlash uchun pochta qutingizdagi tasdiqlash havolasini bosing. Agar u 3 daqiqada kelmasa, spam jildini tekshiring!",
            "Try free for {{amount}} days, then {{originalPrice}}.": "",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "",
            "Unsubscribe from all emails":
                "Barcha elektron pochta xabarlariga obunani bekor qiling",
            Unsubscribed: "",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Elektron pochtalarga obunani bekor qilish {{title}}ga pulli obunanu bekor qilmaydi",
            Update: "",
            "Update your preferences": "Sozlamalarni yangilash",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "",
            "View plans": "",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Email manzili topilmagani uchun obunangizni bekor qila olmadik. Iltimos, sayt egasi bilan bog'laning.",
            "Welcome back, {{name}}!": "",
            "Welcome back!": "",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "",
            "Why has my email been disabled?": "",
            Yearly: "Yillik",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "",
            "You have been successfully resubscribed":
                "Siz muvaffaqiyatli qayta obuna bo'ldingiz",
            "You're currently not receiving emails": "",
            "You're not receiving emails": "",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Siz e-pochta xabarlarini olmayapsiz, chunki siz oxirgi xabarni spam deb belgilagansiz yoki xabarlar taqdim etilgan elektron pochta manzilingizga yetkazilmagan.",
            "You've successfully signed in.": "",
            "You've successfully subscribed to": "",
            "Your account": "Sizning hisobingiz",
            "Your input helps shape what gets published.": "",
            "Your subscription will expire on {{expiryDate}}": "",
            "Your subscription will renew on {{renewalDate}}": "",
            "Your subscription will start on {{subscriptionStart}}": "",
        },
        B1 = {
            "{{amount}} days free": "{{amount}} ngày đọc thử",
            "{{amount}} off": "Giảm {{amount}}",
            "{{amount}} off for first {{number}} months.":
                "Giảm {{amount}} cho {{number}} tháng đầu tiên.",
            "{{amount}} off for first {{period}}.":
                "Giảm {{amount}} cho {{period}} đầu tiên.",
            "{{amount}} off forever.": "Giảm {{amount}} vĩnh viễn.",
            "{{discount}}% discount": "Giảm {{discount}}%",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} sẽ không còn được nhận bản tin {{newsletterName}}.",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} sẽ không còn được nhận email khi ai đó trả lời phản hồi của bạn.",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} sẽ không còn được nhận bản tin này.",
            "{{trialDays}} days free": "{{trialDays}} ngày đọc thử miễn phí",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "Liên kết đăng nhập đã được gửi đến hộp thư của bạn. Sau 3 phút mà chưa thấy, hãy kiểm tra thư hộp thư spam.",
            Account: "Tài khoản",
            "Account settings": "Cài đặt",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "Sau khi hết thời gian đọc thử miễn phí, sẽ áp dụng giá của gói theo dõi mà bạn đã chọn. Bạn có thể hủy trước khi hết thời gian đọc thử.",
            "Already a member?": "Bạn đã là thành viên?",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "Xảy ra lỗi chưa biết. Hãy thử lại hoặc <a>liên hệ hỗ trợ</a> nếu vẫn tiếp tục lỗi.",
            Back: "Quay về",
            "Back to Log in": "Quay về đăng nhập",
            "Billing info": "Thông tin thanh toán",
            "Black Friday": "Ưu Đãi",
            "Cancel anytime.": "Hủy bất cứ lúc nào.",
            "Cancel subscription": "Hủy gói",
            "Cancellation reason": "Lý do hủy gói",
            Change: "Thay đổi",
            "Check spam & promotions folders":
                "Kiểm tra hộp thư spam & quảng cáo",
            "Check with your mail provider":
                "Yêu cầu nhà cung cấp dịch vụ email hỗ trợ",
            Choose: "Chọn",
            "Choose a different plan": "Chọn gói khác",
            "Choose your newsletters": "Chọn bản tin bạn muốn nhận",
            "Click here to retry": "Nhấn vào đây thử lại",
            Close: "Đóng",
            Comments: "Bình luận",
            Complimentary: "Khen tặng",
            Confirm: "Xác nhận",
            "Confirm cancellation": "Xác nhận hủy",
            "Confirm subscription": "Xác nhận theo dõi",
            "Contact support": "Liên hệ hỗ trợ",
            Continue: "Tiếp tục",
            "Continue subscription": "Tiếp tục theo dõi",
            "Could not sign in. Login link expired.":
                "Không đăng nhập được. Liên kết đăng nhập hết hạn.",
            "Could not update email! Invalid link.":
                "Không cập nhật email được. Liên kết không hợp lệ.",
            "Create a new contact": "Tạo liên hệ mới",
            "Current plan": "Gói hiện tại",
            "Delete account": "Xóa tài khoản",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "Không muốn như vậy? Quản lý thiết lập <button>ở đây</button>.",
            "Don't have an account?": "Bạn chưa có tài khoản?",
            Edit: "Chỉnh sửa",
            Email: "Email",
            "Email newsletter": "Email bản tin",
            "Email preference updated.": "Đã cập nhật email.",
            "Email preferences": "Thiết lập email",
            Emails: "Emails",
            "Emails disabled": "Vô hiệu hóa email",
            "Ends {{offerEndDate}}": "Kết thúc vào {{offerEndDate}}",
            Error: "Lỗi",
            "Expires {{expiryDate}}": "Hết hạn vào {{expiryDate}}",
            Forever: "Vĩnh viễn",
            "Free Trial – Ends {{trialEnd}}":
                "Dùng Thử – Hết hạn vào {{trialEnd}}",
            "Get help": "Trợ giúp",
            "Get in touch for help": "Yêu cầu nhận trợ giúp",
            "Get notified when someone replies to your comment":
                "Nhận thông báo khi có ai đó trả lời bình luận",
            "Give feedback on this post": "Phản hồi bài viết này",
            "Help! I'm not receiving emails":
                "Giúp tôi! Tôi không nhận được email",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "Nếu một bản tin bị gắn nhãn thư rác, email sẽ tự động bị vô hiệu hóa đối với địa chỉ đó để đảm bảo bạn không còn nhận được bất kỳ email không mong muốn nào nữa.",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "Nếu khiếu nại về thư rác là vô tình hoặc bạn muốn bắt đầu nhận lại email, bạn có thể đăng ký lại email bằng cách nhấp vào nút trên màn hình trước đó.",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "Nếu bạn hủy đăng ký ngay bây giờ, bạn sẽ tiếp tục có quyền truy cập cho đến {{periodEnd}}.",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "Nếu bạn dùng tài khoản email của công ty hoặc chính phủ, hãy liên hệ với bộ phận IT và yêu cầu họ cho phép nhận email từ {{senderEmail}}",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "Nếu bạn muốn bắt đầu nhận lại email, tốt nhất là kiểm tra địa chỉ email của bạn trong hồ sơ xem có vấn đề gì không và sau đó nhấn vào đăng ký lại trên màn hình trước đó.",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "Nếu bạn không nhận được bản tin email mà bạn đã đăng ký, đây là một số việc cần kiểm tra.",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "Nếu bạn đã hoàn thành tất cả các bước kiểm tra này mà vẫn không nhận được email, hãy liên hệ với {{supportAddress}} để được hỗ trợ.",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "Trong trường hợp nhận được lỗi vĩnh viễn khi cố gắng gửi bản tin, email sẽ bị vô hiệu hóa trên tài khoản.",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "Trong ứng dụng email của bạn, hãy thêm {{senderEmail}} vào danh sách liên hệ của bạn. Điều này báo hiệu cho nhà cung cấp dịch vụ email của bạn rằng các email được gửi từ địa chỉ này là đáng tin cậy.",
            "Less like this": "Không thích lắm",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                'Hãy chắc rằng email không đang trong hộp thư Spam hoặc Quảng cáo. Nếu đang vậy, chọn "Đánh dấu không phải spam" hoặc "Chuyển tới Hộp thư đến".',
            Manage: "Quản lý",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "Hàng tháng",
            "More like this": "Thích bài viết như này",
            Name: "Tên",
            "Need more help? Contact support": "Cần giúp đỡ? Liên hệ hỗ trợ",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "Bản tin có thể bị vô hiệu hóa trên tài khoản của bạn vì hai lý do: Email trước đó đã bị đánh dấu là thư rác hoặc lỗi thất bại vĩnh viễn (thư trả lại).",
            "Not receiving emails?": "Bạn không nhận được email?",
            "Now check your email!": "Kiểm tra hộp thư ngay!",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "Sau khi đăng ký lại, nếu bạn vẫn không thấy email trong hộp thư đến của mình, hãy kiểm tra mục thư rác. Một số nhà cung cấp email lưu giữ hồ sơ về các khiếu nại thư rác trước đây và sẽ tiếp tục gắn nhãn email. Nếu điều này xảy ra, hãy đánh dấu bản tin mới nhất là 'Không phải thư rác' để chuyển nó trở lại hộp thư đến chính của bạn.",
            "Permanent failure (bounce)": "Thất bại vĩnh viễn (thư bị trả lại)",
            Plan: "Gói",
            "Plan checkout was cancelled.": "Đã hủy thanh toán.",
            "Plan upgrade was cancelled.": "Đã hủy nâng cấp gói.",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "Vui lòng điền các mục bắt buộc",
            Price: "Giá",
            "Re-enable emails": "Kích hoạt lại email",
            Recommendations: "",
            "Renews at {{price}}.": "Gia hạn giá {{price}}.",
            Retry: "Thử lại",
            Save: "Lưu",
            "Send an email and say hi!": "Gửi một email và nói xin chào!",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "Gửi email tới {{senderEmail}} và gửi lời chào. Điều này cũng có thể giúp báo hiệu cho nhà cung cấp dịch vụ email của bạn rằng các email đến và đi từ địa chỉ này là đáng tin cậy.",
            "Sending login link...": "Đang gửi liên kết đăng nhập...",
            "Sending...": "Đang gửi...",
            "Show all": "",
            "Sign in": "Đăng nhập",
            "Sign out": "Đăng xuất",
            "Sign up": "Đăng ký",
            "Signup error: Invalid link": "Lỗi đăng ký: Liên kết không hợp lệ",
            "Sorry, that didn’t work.": "Rất tiếc, không dùng được.",
            "Spam complaints": "Than phiền",
            "Start {{amount}}-day free trial":
                "Bắt đầu đọc thử {{amount}} ngày",
            "Starting {{startDate}}": "Bắt đầu vào {{startDate}}",
            "Starting today": "Bắt đầu hôm nay",
            "Submit feedback": "Gửi phản hồi",
            Subscribe: "Theo dõi",
            Subscribed: "Đã theo dõi",
            Success: "Thành công",
            "Success! Check your email for magic link to sign-in.":
                "Xong! Kiểm tra hộp thư để nhận liên kết đăng nhập.",
            "Success! Your account is fully activated, you now have access to all content.":
                "Xong! Đã kích hoạt tài khoản, giờ bạn có toàn quyền truy cập nội dung.",
            "Success! Your email is updated.":
                "Xong! Đã cập nhật email của bạn.",
            "Successfully unsubscribed": "Đã hủy theo dõi thành công",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "Cám ơn phản hồi của bạn!",
            "That didn't go to plan": "Không thực hiện được",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "Địa chỉ email của bạn là {{memberEmail}} — nếu sai, bạn có thể đổi trong <button>cài đặt tài khoản</button>.",
            "There was a problem submitting your feedback. Please try again a little later.":
                "Có vấn đề khi gửi phản hồi. Xin thử lại sau.",
            "This site is invite-only, contact the owner for access.":
                "Trang web này chỉ dành cho những người được mời, hãy liên hệ với chủ sở hữu để cấp quyền truy cập.",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "Để hoàn tất đăng ký, nhấn vào liên kết xác nhận trong hộp thư đến của bạn. Sau 3 phút mà không thấy, hãy kiểm tra hộp thư spam của bạn!",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "Đọc thử {{amount}} ngày, phí sau đọc thử là {{originalPrice}}.",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "Trở thành thành viên trả phí để mở khóa truy cập toàn bộ bản tin.",
            "Unsubscribe from all emails": "Hủy theo dõi tất cả email",
            Unsubscribed: "Đã hủy theo dõi",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "Việc hủy theo dõi qua email sẽ không hủy gói đăng ký trả phí của bạn đối với {{title}}",
            Update: "Cập nhật",
            "Update your preferences": "Cập nhật thiết lập",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct":
                "Xác minh địa chỉ mail của bạn là đúng",
            "View plans": "Xem các gói",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "Chúng tôi không thể hủy theo dõi vì không tìm thấy địa chỉ email. Vui lòng liên hệ với chủ sở hữu trang web.",
            "Welcome back, {{name}}!": "Chào mừng trở lại, {{name}}!",
            "Welcome back!": "Chào mừng trở lại!",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "Khi hộp thư đến không nhận được email, nó thường được gọi là email bị trả lại. Điều này có thể là tạm thời. Tuy nhiên, trong một số trường hợp, email bị trả lại có thể là lỗi vĩnh viễn nếu địa chỉ email không hợp lệ hoặc không tồn tại.",
            "Why has my email been disabled?":
                "Tại sao email của tôi bị vô hiệu hóa?",
            Yearly: "Hàng năm",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "Bạn đang là thành viên thường, hãy nâng cấp gói trả phí để có toàn quyền truy cập.",
            "You have been successfully resubscribed":
                "Bạn đã theo dõi lại thành công",
            "You're currently not receiving emails":
                "Những email bạn không nhận được gần đây",
            "You're not receiving emails": "Bạn không nhận được email",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "Bạn không nhận được email vì bạn đã đánh dấu một email gần đây là thư rác, hoặc vì không thể gửi đến địa chỉ email bạn đã cung cấp.",
            "You've successfully signed in.": "Bạn đã đăng nhập.",
            "You've successfully subscribed to": "",
            "Your account": "Tài khoản của bạn",
            "Your input helps shape what gets published.":
                "Thông tin của bạn giúp định hình nội dung được xuất bản.",
            "Your subscription will expire on {{expiryDate}}":
                "Gói của bạn sẽ hết hạn vào {{expiryDate}}",
            "Your subscription will renew on {{renewalDate}}":
                "Gói của bạn sẽ tự động gia hạn vào {{renewalDate}}",
            "Your subscription will start on {{subscriptionStart}}":
                "Gói của bạn bắt đầu có hiệu lực vào {{subscriptionStart}}",
        },
        F1 = {
            "{{amount}} days free": "{{amount}}天免费",
            "{{amount}} off": "减免{{amount}}",
            "{{amount}} off for first {{number}} months.":
                "前{{number}}月减免{{amount}}",
            "{{amount}} off for first {{period}}.":
                "首{{period}}减免{{amount}}",
            "{{amount}} off forever.": "永久减免{{amount}}",
            "{{discount}}% discount": "{{discount}}% 折扣",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}}将不会再收到{{newsletterName}}的刊物。",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}}将不会再收到评论回复提醒邮件。",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}}将不会再收到本刊物。",
            "{{trialDays}} days free": "{{trialDays}} 天免费试用",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "登录链接已经发送到您的收件箱。如果在3分钟内还没有收到，请务必检查您的垃圾邮件文件夹。",
            Account: "账户",
            "Account settings": "账户设置",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "免费试用结束后，您将被收取所选套餐的标定价格。在此之前，您可以随时取消。",
            "Already a member?": "已经是会员了？",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "遇到意外错误。请重试，若持续出现请<a>联系支持服务</a>。",
            Back: "返回",
            "Back to Log in": "返回登录",
            "Billing info": "账单信息",
            "Black Friday": "黑五促销",
            "Cancel anytime.": "随时取消",
            "Cancel subscription": "取消订阅",
            "Cancellation reason": "取消原因",
            Change: "变更",
            "Check spam & promotions folders": "检查垃圾邮件与促销邮件目录",
            "Check with your mail provider": "与您的邮件服务商确认",
            Choose: "选择",
            "Choose a different plan": "选择其他订阅方案",
            "Choose your newsletters": "选择您的刊物",
            "Click here to retry": "请点此处重试",
            Close: "关闭",
            Comments: "评论",
            Complimentary: "赠送",
            Confirm: "确认",
            "Confirm cancellation": "确认取消",
            "Confirm subscription": "确认订阅",
            "Contact support": "联系支持服务",
            Continue: "继续",
            "Continue subscription": "继续订阅",
            "Could not sign in. Login link expired.":
                "无法登录。登录链接已过期。",
            "Could not update email! Invalid link.":
                "无法更新电子邮件！链接无效。",
            "Create a new contact": "创建新联系",
            "Current plan": "当前订阅",
            "Delete account": "删除账户",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "错误操作？在<button>这里</button>变更您的偏好设定。",
            "Don't have an account?": "还没有账户吗？",
            Edit: "编辑",
            Email: "电子邮件",
            "Email newsletter": "电子邮件快报",
            "Email preference updated.": "电子邮件偏好已更新。",
            "Email preferences": "电子邮件偏好设置",
            Emails: "电子邮件列表",
            "Emails disabled": "关闭电子邮件列表",
            "Ends {{offerEndDate}}": "于{{offerEndDate}}结束",
            Error: "错误",
            "Expires {{expiryDate}}": "于{{expiryDate}}过期",
            Forever: "永久",
            "Free Trial – Ends {{trialEnd}}": "免费试用 - {{trialEnd}}结束",
            "Get help": "获取帮助",
            "Get in touch for help": "联系以获取帮助",
            "Get notified when someone replies to your comment":
                "当有人回复您的评论时，将会收到通知",
            "Give feedback on this post": "对这篇文章提供建议",
            "Help! I'm not receiving emails": "求助！我没有收到电子邮件",
            "Here are a few other sites you may enjoy.":
                "以下是您或许会感兴趣的其他网站。",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "如果有快报被标记为垃圾邮件，则自动拒绝该地址的邮件以确保后续不再接收不想要的消息。",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "如果误标记为垃圾邮件，或者您希望再次开启邮件接收，您可以通过点击上一页的按钮重新订阅。",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "如果现在取消订阅，当前订阅在{{periodEnd}}依旧有效。",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "如果您使用公司或者政府邮件账户，请联系相应IT部门以允许从{{senderEmail}}接收邮件。",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "如果您希望重新开始接收邮件，接下来最好先检查存档的电子邮件地址，然后在之前的页面点击重新订阅。",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "如果没有收到订阅快报，请检查以下事项。",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "如果您已经完成全部检查项目却依旧没有收到邮件，您可以联系{{supportAddress}}获取支持。",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "当尝试发送快报时遇到永久错误，向该账户的发送邮件的功能将被禁用。",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "在您的电子邮件客户端将 {{senderEmail}} 加入联系人列表。这将向您的邮件供应商表明来自该地址的邮件是可信的。",
            "Less like this": "不喜欢",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "确保邮件没有被意外标记为垃圾或者促销邮件。如果是，点击“非垃圾邮件”或者“移动到收件箱”。",
            Manage: "管理",
            "Maybe later": "之后再说",
            "Memberships unavailable, contact the owner for access.":
                "会员资格不可用，请联系网站所有者获取访问权限。",
            Monthly: "月付",
            "More like this": "喜欢",
            Name: "名字",
            "Need more help? Contact support": "需要更多帮助？联系支持服务",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "您账户的快报被禁用的可能原因有两个：先前的电子邮件被标记为垃圾邮件，或者发送邮件遇到永久错误 (bounce)",
            "Not receiving emails?": "无法收到电子邮件？",
            "Now check your email!": "现在请检查您的电子邮件！",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "重新订阅后在收件箱依旧没有看到邮件，请检查您的垃圾邮件箱。一些服务商会保留之前的垃圾邮件记录并持续标记。如果是这样，请将最新的快报标记为“非垃圾邮件”并将其移动到收件箱。",
            "Permanent failure (bounce)": "永久错误 (bounce)",
            Plan: "订阅计划",
            "Plan checkout was cancelled.": "订阅付款已取消。",
            "Plan upgrade was cancelled.": "订阅升级已取消。",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "请联系 {{supportAddress}} 调整您的免费订阅。",
            "Please fill in required fields": "请填写必须项目",
            Price: "价格",
            "Re-enable emails": "重启电子邮件",
            Recommendations: "",
            "Renews at {{price}}.": "以{{price}}的价格续费。",
            Retry: "重试",
            Save: "保存",
            "Send an email and say hi!": "发送邮件问好！",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "发送邮件到{{senderEmail}}问好。这有助于您的邮件服务商将该地址的往来邮件判定为可信邮件。",
            "Sending login link...": "正在发送登录链接...",
            "Sending...": "发送中...",
            "Show all": "显示全部",
            "Sign in": "登录",
            "Sign out": "退出",
            "Sign up": "注册",
            "Signup error: Invalid link": "注册错误：链接无效",
            "Sorry, that didn’t work.": "抱歉，该操作无法完成。",
            "Spam complaints": "垃圾邮件",
            "Start {{amount}}-day free trial": "开始 {{amount}}-天免费试用",
            "Starting {{startDate}}": "从{{startDate}}开始",
            "Starting today": "从今天开始",
            "Submit feedback": "提交建议",
            Subscribe: "订阅",
            Subscribed: "已订阅",
            Success: "成功",
            "Success! Check your email for magic link to sign-in.":
                "成功！检查您的电子邮箱以获取登录链接。",
            "Success! Your account is fully activated, you now have access to all content.":
                "成功！您的账户已经完全激活，您现在可以访问全部内容了。",
            "Success! Your email is updated.": "成功！您的电子邮件已更新。",
            "Successfully unsubscribed": "成功取消订阅",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "感谢您的订阅。在开始阅读之前，以下是您可能会喜欢的一些其他网站。",
            "Thanks for the feedback!": "感谢您的建议！",
            "That didn't go to plan": "似乎出错了",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "您的电子邮件地址是 {{memberEmail}} - 如果该邮箱不正确，您可以在<button>帐户设置区域</button>中更新它。",
            "There was a problem submitting your feedback. Please try again a little later.":
                "提交您的反馈时遇到错误。请稍后重试。",
            "This site is invite-only, contact the owner for access.":
                "此网站仅限邀请，联系网站所有者以获取访问",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "要完成注册，请点击您收件箱中的确认链接。如果在3分钟内没有收到，请检查一下您的垃圾邮件文件夹！",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "{{amount}}天免费试用，之后{{originalPrice}}。",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "成为付费订阅用户以解锁全部快报。",
            "Unsubscribe from all emails": "取消所有邮件订阅",
            Unsubscribed: "取消订阅",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "取消邮件订阅不会取消您对 {{title}} 的付费订阅。",
            Update: "更新",
            "Update your preferences": "更新您的偏好设置",
            "Verification link sent, check your inbox":
                "验证链接已发送，请检查您的收件箱",
            "Verify your email address is correct":
                "确认您的电子邮件地址是正确的",
            "View plans": "查阅订阅计划",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "我们无法取消您的订阅，因为找不到该电子邮件地址。请联系网站所有者。",
            "Welcome back, {{name}}!": "欢迎回来，{{name}}！",
            "Welcome back!": "欢迎回来！",
            "Welcome to {{siteTitle}}": "欢迎来到 {{siteTitle}}",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "收件箱无法接收邮件时称为“反弹”。大多数时候这是临时的。但是某些情况下，无效或者不存在的邮件地址反弹的邮件会被认定为永久错误。",
            "Why has my email been disabled?": "为什么我的邮件功能被禁用了？",
            Yearly: "年付",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "您当前为免费用户，升级为付费订阅以获取全部内容。",
            "You have been successfully resubscribed": "您已成功重新订阅",
            "You're currently not receiving emails": "您当前不会接收电子邮件。",
            "You're not receiving emails": "您当前不会接收电子邮件。",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "您收不到电子邮件是因为您可能将最近的某个消息标记为垃圾邮件，或者无法将消息发送到您提供的电子邮件地址。",
            "You've successfully signed in.": "您已成功登录。",
            "You've successfully subscribed to": "您已成功订阅",
            "Your account": "您的账户",
            "Your input helps shape what gets published.":
                "您的建议将使我们变得更好。",
            "Your subscription will expire on {{expiryDate}}":
                "您的订阅将在{{expiryDate}}到期",
            "Your subscription will renew on {{renewalDate}}":
                "您的订阅将在{{renewalDate}}续费",
            "Your subscription will start on {{subscriptionStart}}":
                "您的订阅将于{{subscriptionStart}}开始",
        },
        O1 = {
            "{{amount}} days free": "{{amount}} 天免費",
            "{{amount}} off": "{{amount}} 元優惠",
            "{{amount}} off for first {{number}} months.":
                "前 {{number}} 個月有 {{amount}} 元折扣優惠",
            "{{amount}} off for first {{period}}.":
                "首{{period}}享 {{amount}} 元折扣優惠",
            "{{amount}} off forever.": "永久享 {{amount}} 元折扣優惠",
            "{{discount}}% discount": "{{discount}}% 折扣",
            "{{memberEmail}} will no longer receive {{newsletterName}} newsletter.":
                "{{memberEmail}} 將不再收到{{newsletterName}}的電子報。",
            "{{memberEmail}} will no longer receive emails when someone replies to your comments.":
                "{{memberEmail}} 將不再收到他人回覆您的評論時的通知。",
            "{{memberEmail}} will no longer receive this newsletter.":
                "{{memberEmail}} 將不再收到此電子報。",
            "{{trialDays}} days free": "{{trialDays}} 天免費試用",
            "A login link has been sent to your inbox. If it doesn't arrive in 3 minutes, be sure to check your spam folder.":
                "登入連結已經發送到您的收件匣。如果在 3 分鐘內未收到，請務必檢查您的垃圾郵件。",
            Account: "帳號",
            "Account settings": "帳號設定",
            "After a free trial ends, you will be charged the regular price for the tier you've chosen. You can always cancel before then.":
                "免費試用結束後，您將支付所選方案的定價金額。在此之前，您可以隨時取消。",
            "Already a member?": "已經是會員了？",
            "An unexpected error occured. Please try again or <a>contact support</a> if the error persists.":
                "發生了意外錯誤，請再試一次。如果錯誤持續出現，請<a>聯繫客服</a>。",
            Back: "返回上一頁",
            "Back to Log in": "返回登入畫面",
            "Billing info": "帳單內容",
            "Black Friday": "黑色星期五促銷",
            "Cancel anytime.": "隨時取消",
            "Cancel subscription": "取消訂閱",
            "Cancellation reason": "取消原因",
            Change: "變更",
            "Check spam & promotions folders": "檢查垃圾郵件或促銷郵件",
            "Check with your mail provider": "請向您的電子信箱服務提供商確認",
            Choose: "選擇",
            "Choose a different plan": "選擇其他訂閱方案",
            "Choose your newsletters": "選擇您的電子報",
            "Click here to retry": "點擊重試",
            Close: "關閉",
            Comments: "留言",
            Complimentary: "贈送",
            Confirm: "確認",
            "Confirm cancellation": "確認取消",
            "Confirm subscription": "確認訂閱",
            "Contact support": "聯繫客服",
            Continue: "繼續",
            "Continue subscription": "繼續訂閱",
            "Could not sign in. Login link expired.":
                "無法登入。登入連結已過期。",
            "Could not update email! Invalid link.":
                "無法更新 email。連結無效。",
            "Create a new contact": "建立新的聯絡人",
            "Current plan": "目前方案",
            "Delete account": "刪除帳號",
            "Didn't mean to do this? Manage your preferences <button>here</button>.":
                "不小心按到？在<button>這裡</button>可以變更您的偏好設定。",
            "Don't have an account?": "還沒有帳號嗎？",
            Edit: "編輯",
            Email: "email",
            "Email newsletter": "電子報",
            "Email preference updated.": "email 偏好已更新。",
            "Email preferences": "email 偏好設定",
            Emails: "電子報",
            "Emails disabled": "已停止接收電子報",
            "Ends {{offerEndDate}}": "於 {{offerEndDate}} 結束",
            Error: "錯誤",
            "Expires {{expiryDate}}": "於 {{expiryDate}} 過期",
            Forever: "永久",
            "Free Trial – Ends {{trialEnd}}": "免費試用──於 {{trialEnd}} 结束",
            "Get help": "取得協助",
            "Get in touch for help": "聯繫以取得協助",
            "Get notified when someone replies to your comment":
                "當有人回覆我的留言時通知我",
            "Give feedback on this post": "為這篇文章提供意見",
            "Help! I'm not receiving emails": "求救！我沒有收到 email",
            "Here are a few other sites you may enjoy.": "",
            "If a newsletter is flagged as spam, emails are automatically disabled for that address to make sure you no longer receive any unwanted messages.":
                "如果有電子報被標記為垃圾郵件，您的 email 地址將自動停止接收該電子報，以確保您不再收到任何不需要的訊息。",
            "If the spam complaint was accidental, or you would like to begin receiving emails again, you can resubscribe to emails by clicking the button on the previous screen.":
                "如果您不小心將電子報標示成垃圾郵件，或者您希望重新開始接收電子報，您可以點擊前一個畫面上的按鈕以重新訂閱電子報。",
            "If you cancel your subscription now, you will continue to have access until {{periodEnd}}.":
                "如果現在取消訂閱，您在 {{periodEnd}} 之前仍可存取內容。",
            "If you have a corporate or government email account, reach out to your IT department and ask them to allow emails to be received from {{senderEmail}}":
                "如果您有企業或政府郵件帳戶，請聯繫相關 IT 部門，要求他們允許來自 {{senderEmail}} 的郵件。",
            "If you would like to start receiving emails again, the best next steps are to check your email address on file for any issues and then click resubscribe on the previous screen.":
                "如果您希望重新開始接收郵件，最好的方法是檢查您註冊的 email 地址是否正常運作，然後在前一個畫面點擊重新訂閱。",
            "If you're not receiving the email newsletter you've subscribed to, here are few things to check.":
                "如果您沒有收到您訂閱的電子報，請檢查以下幾個事項。",
            "If you've completed all these checks and you're still not receiving emails, you can reach out to get support by contacting {{supportAddress}}.":
                "如果您已經完成了上述所有檢查項目，但仍然沒有收到電子報，您可以透過聯繫 {{supportAddress}} 取得協助。",
            "In the event a permanent failure is received when attempting to send a newsletter, emails will be disabled on the account.":
                "要是系統發送電子報時遇到永久失敗的情形，該帳號將停止接收電子報。",
            "In your email client add {{senderEmail}} to your contacts list. This signals to your mail provider that emails sent from this address should be trusted.":
                "在您的 email 系統中將 {{senderEmail}} 加入您的聯絡人列表中。如此一來，您的 email 系統就會知道可以信任從該地址發送的郵件。",
            "Less like this": "不感興趣",
            'Make sure emails aren\'t accidentally ending up in the Spam or Promotions folders of your inbox. If they are, click on "Mark as not spam" and/or "Move to inbox".':
                "請確保郵件沒有意外地被歸類為垃圾郵件或促銷郵件。如果發生這類情形，請點擊「標記為非垃圾郵件」或「移至收件匣」。",
            Manage: "管理",
            "Maybe later": "",
            "Memberships unavailable, contact the owner for access.": "",
            Monthly: "每月",
            "More like this": "感興趣",
            Name: "名字",
            "Need more help? Contact support": "需要更多協助？聯繫客服",
            "Newsletters can be disabled on your account for two reasons: A previous email was marked as spam, or attempting to send an email resulted in a permanent failure (bounce).":
                "您的帳號可能會因為兩個原因而停止接收電子報：先前的郵件被標記為垃圾郵件，或者嘗試發送郵件時出現永久失敗（郵件遭到退回）。",
            "Not receiving emails?": "沒有收到 email？",
            "Now check your email!": "立即檢查您的 email。",
            "Once resubscribed, if you still don't see emails in your inbox, check your spam folder. Some inbox providers keep a record of previous spam complaints and will continue to flag emails. If this happens, mark the latest newsletter as 'Not spam' to move it back to your primary inbox.":
                "重新訂閱後，如果您在收件夾中仍然看不到郵件，請檢查您的垃圾郵件匣。一些 email 服務商會保留先前的垃圾郵件記錄並持續標記此類郵件。如果發生這種情況，請將最新的電子報標記為「非垃圾郵件」，將其移回您的主要收件匣。",
            "Permanent failure (bounce)": "永久錯誤 (郵件遭到退回)",
            Plan: "訂閱方案",
            "Plan checkout was cancelled.": "訂閱付款已取消。",
            "Plan upgrade was cancelled.": "訂閱升級已取消。",
            "Please contact {{supportAddress}} to adjust your complimentary subscription.":
                "",
            "Please fill in required fields": "請填寫必填項目",
            Price: "價格",
            "Re-enable emails": "重新啟用 email",
            Recommendations: "",
            "Renews at {{price}}.": "以 {{price}} 的價格續約。",
            Retry: "重試",
            Save: "儲存",
            "Send an email and say hi!": "發送 email 問好！",
            "Send an email to {{senderEmail}} and say hello. This can also help signal to your mail provider that emails to-and-from this address should be trusted.":
                "向 {{senderEmail}} 發送 email 並問好。這也有助於讓您的 email 供應商了解這個地址的往來郵件應該受到信任。",
            "Sending login link...": "正在發送登入連結...",
            "Sending...": "發送中...",
            "Show all": "",
            "Sign in": "登入",
            "Sign out": "登出",
            "Sign up": "註冊",
            "Signup error: Invalid link": "註冊錯誤：連結無效",
            "Sorry, that didn’t work.": "抱歉，該操作無法完成。",
            "Spam complaints": "垃圾郵件",
            "Start {{amount}}-day free trial": "開始 {{amount}} 天免費試用",
            "Starting {{startDate}}": "從 {{startDate}} 開始",
            "Starting today": "從今天開始",
            "Submit feedback": "提交意見",
            Subscribe: "訂閱",
            Subscribed: "已訂閱",
            Success: "成功",
            "Success! Check your email for magic link to sign-in.":
                "成功了！請檢查您的 email 以取得快速登入連結。",
            "Success! Your account is fully activated, you now have access to all content.":
                "成功了！您的帳號已完全啟用，您現在可以存取所有內容。",
            "Success! Your email is updated.": "成功了！您的 email 已更新。",
            "Successfully unsubscribed": "成功取消訂閱",
            "Thank you for subscribing. Before you start reading, below are a few other sites you may enjoy.":
                "",
            "Thanks for the feedback!": "感謝您的意見！",
            "That didn't go to plan": "發生錯誤",
            "The email address we have for you is {{memberEmail}} — if that's not correct, you can update it in your <button>account settings area</button>.":
                "就我們所知，您的 email 地址是 {{memberEmail}}。如果有誤，您可以在<button>帳號設定區塊</button>進行更新。",
            "There was a problem submitting your feedback. Please try again a little later.":
                "提交您的意見時遇到問題。請稍後再試。",
            "This site is invite-only, contact the owner for access.":
                "此網站僅限受邀請者觀看，請聯繫網站擁有者取得存取權限。",
            "To complete signup, click the confirmation link in your inbox. If it doesn't arrive within 3 minutes, check your spam folder!":
                "要完成註冊，請點擊您收件匣中的確認連結。如果在 3 分鐘內沒有收到，請檢查您的垃圾郵件。",
            "Try free for {{amount}} days, then {{originalPrice}}.":
                "免費試用 {{amount}} 天，然後以 {{originalPrice}} 開始訂閱。",
            "Unlock access to all newsletters by becoming a paid subscriber.":
                "成為付費會員以解鎖所有電子報內容。",
            "Unsubscribe from all emails": "取消所有電子報訂閱",
            Unsubscribed: "未訂閱",
            "Unsubscribing from emails will not cancel your paid subscription to {{title}}":
                "取消接收電子報不會取消您對 {{title}} 的付費訂閱。",
            Update: "更新",
            "Update your preferences": "更新您的偏好設定",
            "Verification link sent, check your inbox": "",
            "Verify your email address is correct": "確認你的 email 地址無誤",
            "View plans": "查詢訂閱方案",
            "We couldn't unsubscribe you as the email address was not found. Please contact the site owner.":
                "我們無法取消您的訂閱，因為找不到該 email 地址。請聯繫網站擁有者。",
            "Welcome back, {{name}}!": "歡迎回來，{{name}}！",
            "Welcome back!": "歡迎回來！",
            "Welcome to {{siteTitle}}": "",
            "When an inbox fails to accept an email it is commonly called a bounce. In many cases, this can be temporary. However, in some cases, a bounced email can be returned as a permanent failure when an email address is invalid or non-existent.":
                "當收件匣無法接收郵件時，通常稱之為退信。在許多情況下，這可能是暫時的。然而，在某些情況下，當郵件地址無效或不存在時，退回的郵件可能會被視為永久失敗。",
            "Why has my email been disabled?": "為什麼我的 email 被停用了？",
            Yearly: "年付",
            "You currently have a free membership, upgrade to a paid subscription for full access.":
                "您目前是免費會員，升級至付費訂閱以獲得完整存取權。",
            "You have been successfully resubscribed": "您已成功重新訂閱",
            "You're currently not receiving emails": "您目前無法接收郵件。",
            "You're not receiving emails": "您無法接收郵件。",
            "You're not receiving emails because you either marked a recent message as spam, or because messages could not be delivered to your provided email address.":
                "您無法接收郵件，可能是因為您最近將某個郵件標記為垃圾郵件，或者郵件無法發送到您提供的 email 地址。",
            "You've successfully signed in.": "您已成功登入。",
            "You've successfully subscribed to": "",
            "Your account": "您的帳號",
            "Your input helps shape what gets published.":
                "您的建議有助於改善我們的內容。",
            "Your subscription will expire on {{expiryDate}}":
                "您的訂閱將於 {{expiryDate}} 到期",
            "Your subscription will renew on {{renewalDate}}":
                "您的訂閱將於 {{renewalDate}} 自動續訂",
            "Your subscription will start on {{subscriptionStart}}":
                "您的訂閱將於 {{subscriptionStart}} 開始",
        };
    var Xf;
    function Zf() {
        return (
            Xf ||
            (Xf = {
                "/ghost/i18n/locales/af/portal.json": function () {
                    return i1;
                },
                "/ghost/i18n/locales/bg/portal.json": function () {
                    return o1;
                },
                "/ghost/i18n/locales/ca/portal.json": function () {
                    return s1;
                },
                "/ghost/i18n/locales/cs/portal.json": function () {
                    return l1;
                },
                "/ghost/i18n/locales/da/portal.json": function () {
                    return c1;
                },
                "/ghost/i18n/locales/de/portal.json": function () {
                    return u1;
                },
                "/ghost/i18n/locales/en/portal.json": function () {
                    return d1;
                },
                "/ghost/i18n/locales/eo/portal.json": function () {
                    return m1;
                },
                "/ghost/i18n/locales/es/portal.json": function () {
                    return p1;
                },
                "/ghost/i18n/locales/fi/portal.json": function () {
                    return h1;
                },
                "/ghost/i18n/locales/fr/portal.json": function () {
                    return f1;
                },
                "/ghost/i18n/locales/hr/portal.json": function () {
                    return g1;
                },
                "/ghost/i18n/locales/hu/portal.json": function () {
                    return b1;
                },
                "/ghost/i18n/locales/id/portal.json": function () {
                    return y1;
                },
                "/ghost/i18n/locales/is/portal.json": function () {
                    return k1;
                },
                "/ghost/i18n/locales/it/portal.json": function () {
                    return v1;
                },
                "/ghost/i18n/locales/ja/portal.json": function () {
                    return w1;
                },
                "/ghost/i18n/locales/ko/portal.json": function () {
                    return x1;
                },
                "/ghost/i18n/locales/mn/portal.json": function () {
                    return S1;
                },
                "/ghost/i18n/locales/ms/portal.json": function () {
                    return E1;
                },
                "/ghost/i18n/locales/nl/portal.json": function () {
                    return C1;
                },
                "/ghost/i18n/locales/nn/portal.json": function () {
                    return $1;
                },
                "/ghost/i18n/locales/no/portal.json": function () {
                    return j1;
                },
                "/ghost/i18n/locales/pl/portal.json": function () {
                    return P1;
                },
                "/ghost/i18n/locales/pt/portal.json": function () {
                    return _1;
                },
                "/ghost/i18n/locales/pt-BR/portal.json": function () {
                    return N1;
                },
                "/ghost/i18n/locales/ro/portal.json": function () {
                    return T1;
                },
                "/ghost/i18n/locales/ru/portal.json": function () {
                    return I1;
                },
                "/ghost/i18n/locales/si/portal.json": function () {
                    return z1;
                },
                "/ghost/i18n/locales/sl/portal.json": function () {
                    return A1;
                },
                "/ghost/i18n/locales/sq/portal.json": function () {
                    return D1;
                },
                "/ghost/i18n/locales/sr/portal.json": function () {
                    return M1;
                },
                "/ghost/i18n/locales/sv/portal.json": function () {
                    return R1;
                },
                "/ghost/i18n/locales/tr/portal.json": function () {
                    return L1;
                },
                "/ghost/i18n/locales/uk/portal.json": function () {
                    return Y1;
                },
                "/ghost/i18n/locales/uz/portal.json": function () {
                    return U1;
                },
                "/ghost/i18n/locales/vi/portal.json": function () {
                    return B1;
                },
                "/ghost/i18n/locales/zh/portal.json": function () {
                    return F1;
                },
                "/ghost/i18n/locales/zh-Hant/portal.json": function () {
                    return O1;
                },
            })
        );
    }
    function H1(e) {
        function t(n) {
            var a = eg(n, e);
            if (a !== null) return Zf()[a]();
            throw new Error(
                'Could not dynamically require "' +
                    n +
                    '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.'
            );
        }
        return (
            (t.resolve = function (n) {
                var a = eg(n, e);
                return a !== null ? a : require.resolve(n);
            }),
            t
        );
    }
    function eg(e, t) {
        var n = V1(e);
        e = Uo(e);
        var a;
        e[0] === "/" && (t = "");
        for (
            var r = Zf(), i = ["", ".js", ".json"];
            n ? (a = Uo(t + "/node_modules/" + e)) : (a = Uo(t + "/" + e)),
                !a.endsWith("/..");

        ) {
            for (var o = 0; o < i.length; o++) {
                var s = a + i[o];
                if (r[s]) return s;
            }
            if (!n) break;
            var l = Uo(t + "/..");
            if (l === t) break;
            t = l;
        }
        return null;
    }
    function V1(e) {
        var t = e[0];
        if (t === "/" || t === "\\") return !1;
        var n = e[1],
            a = e[2];
        return !(
            (t === "." && (!n || n === "/" || n === "\\")) ||
            (t === "." && n === "." && (!a || a === "/" || a === "\\")) ||
            (n === ":" && (a === "/" || a === "\\"))
        );
    }
    function Uo(e) {
        e = e.replace(/\\/g, "/");
        for (var t = e.split("/"), n = t[0] === "", a = 1; a < t.length; a++)
            (t[a] === "." || t[a] === "") && t.splice(a--, 1);
        for (var a = 1; a < t.length; a++)
            t[a] === ".." &&
                a > 0 &&
                t[a - 1] !== ".." &&
                t[a - 1] !== "." &&
                (t.splice(--a, 2), a--);
        return (
            (e = t.join("/")),
            n && e[0] !== "/" ? (e = "/" + e) : e.length === 0 && (e = "."),
            e
        );
    }
    var iu = { exports: {} };
    const W1 = {
        type: "logger",
        log(e) {
            this.output("log", e);
        },
        warn(e) {
            this.output("warn", e);
        },
        error(e) {
            this.output("error", e);
        },
        output(e, t) {
            console && console[e] && console[e].apply(console, t);
        },
    };
    class Bo {
        constructor(t) {
            let n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : {};
            this.init(t, n);
        }
        init(t) {
            let n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : {};
            (this.prefix = n.prefix || "i18next:"),
                (this.logger = t || W1),
                (this.options = n),
                (this.debug = n.debug);
        }
        log() {
            for (var t = arguments.length, n = new Array(t), a = 0; a < t; a++)
                n[a] = arguments[a];
            return this.forward(n, "log", "", !0);
        }
        warn() {
            for (var t = arguments.length, n = new Array(t), a = 0; a < t; a++)
                n[a] = arguments[a];
            return this.forward(n, "warn", "", !0);
        }
        error() {
            for (var t = arguments.length, n = new Array(t), a = 0; a < t; a++)
                n[a] = arguments[a];
            return this.forward(n, "error", "");
        }
        deprecate() {
            for (var t = arguments.length, n = new Array(t), a = 0; a < t; a++)
                n[a] = arguments[a];
            return this.forward(n, "warn", "WARNING DEPRECATED: ", !0);
        }
        forward(t, n, a, r) {
            return r && !this.debug
                ? null
                : (typeof t[0] == "string" &&
                      (t[0] = `${a}${this.prefix} ${t[0]}`),
                  this.logger[n](t));
        }
        create(t) {
            return new Bo(this.logger, {
                prefix: `${this.prefix}:${t}:`,
                ...this.options,
            });
        }
        clone(t) {
            return (
                (t = t || this.options),
                (t.prefix = t.prefix || this.prefix),
                new Bo(this.logger, t)
            );
        }
    }
    var st = new Bo();
    class Fo {
        constructor() {
            this.observers = {};
        }
        on(t, n) {
            return (
                t.split(" ").forEach((a) => {
                    (this.observers[a] = this.observers[a] || []),
                        this.observers[a].push(n);
                }),
                this
            );
        }
        off(t, n) {
            if (this.observers[t]) {
                if (!n) {
                    delete this.observers[t];
                    return;
                }
                this.observers[t] = this.observers[t].filter((a) => a !== n);
            }
        }
        emit(t) {
            for (
                var n = arguments.length,
                    a = new Array(n > 1 ? n - 1 : 0),
                    r = 1;
                r < n;
                r++
            )
                a[r - 1] = arguments[r];
            this.observers[t] &&
                [].concat(this.observers[t]).forEach((o) => {
                    o(...a);
                }),
                this.observers["*"] &&
                    [].concat(this.observers["*"]).forEach((o) => {
                        o.apply(o, [t, ...a]);
                    });
        }
    }
    function jr() {
        let e, t;
        const n = new Promise((a, r) => {
            (e = a), (t = r);
        });
        return (n.resolve = e), (n.reject = t), n;
    }
    function tg(e) {
        return e == null ? "" : "" + e;
    }
    function q1(e, t, n) {
        e.forEach((a) => {
            t[a] && (n[a] = t[a]);
        });
    }
    function ou(e, t, n) {
        function a(o) {
            return o && o.indexOf("###") > -1 ? o.replace(/###/g, ".") : o;
        }
        function r() {
            return !e || typeof e == "string";
        }
        const i = typeof t != "string" ? [].concat(t) : t.split(".");
        for (; i.length > 1; ) {
            if (r()) return {};
            const o = a(i.shift());
            !e[o] && n && (e[o] = new n()),
                Object.prototype.hasOwnProperty.call(e, o)
                    ? (e = e[o])
                    : (e = {});
        }
        return r() ? {} : { obj: e, k: a(i.shift()) };
    }
    function ng(e, t, n) {
        const { obj: a, k: r } = ou(e, t, Object);
        a[r] = n;
    }
    function G1(e, t, n, a) {
        const { obj: r, k: i } = ou(e, t, Object);
        (r[i] = r[i] || []), a && (r[i] = r[i].concat(n)), a || r[i].push(n);
    }
    function Oo(e, t) {
        const { obj: n, k: a } = ou(e, t);
        if (n) return n[a];
    }
    function K1(e, t, n) {
        const a = Oo(e, n);
        return a !== void 0 ? a : Oo(t, n);
    }
    function ag(e, t, n) {
        for (const a in t)
            a !== "__proto__" &&
                a !== "constructor" &&
                (a in e
                    ? typeof e[a] == "string" ||
                      e[a] instanceof String ||
                      typeof t[a] == "string" ||
                      t[a] instanceof String
                        ? n && (e[a] = t[a])
                        : ag(e[a], t[a], n)
                    : (e[a] = t[a]));
        return e;
    }
    function ma(e) {
        return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
    }
    var J1 = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;",
    };
    function Q1(e) {
        return typeof e == "string" ? e.replace(/[&<>"'\/]/g, (t) => J1[t]) : e;
    }
    const X1 = [" ", ",", "?", "!", ";"];
    function Z1(e, t, n) {
        (t = t || ""), (n = n || "");
        const a = X1.filter((o) => t.indexOf(o) < 0 && n.indexOf(o) < 0);
        if (a.length === 0) return !0;
        const r = new RegExp(
            `(${a.map((o) => (o === "?" ? "\\?" : o)).join("|")})`
        );
        let i = !r.test(e);
        if (!i) {
            const o = e.indexOf(n);
            o > 0 && !r.test(e.substring(0, o)) && (i = !0);
        }
        return i;
    }
    function Ho(e, t) {
        let n =
            arguments.length > 2 && arguments[2] !== void 0
                ? arguments[2]
                : ".";
        if (!e) return;
        if (e[t]) return e[t];
        const a = t.split(n);
        let r = e;
        for (let i = 0; i < a.length; ++i) {
            if (!r || (typeof r[a[i]] == "string" && i + 1 < a.length)) return;
            if (r[a[i]] === void 0) {
                let o = 2,
                    s = a.slice(i, i + o).join(n),
                    l = r[s];
                for (; l === void 0 && a.length > i + o; )
                    o++, (s = a.slice(i, i + o).join(n)), (l = r[s]);
                if (l === void 0) return;
                if (l === null) return null;
                if (t.endsWith(s)) {
                    if (typeof l == "string") return l;
                    if (s && typeof l[s] == "string") return l[s];
                }
                const u = a.slice(i + o).join(n);
                return u ? Ho(l, u, n) : void 0;
            }
            r = r[a[i]];
        }
        return r;
    }
    function Vo(e) {
        return e && e.indexOf("_") > 0 ? e.replace("_", "-") : e;
    }
    class rg extends Fo {
        constructor(t) {
            let n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : { ns: ["translation"], defaultNS: "translation" };
            super(),
                (this.data = t || {}),
                (this.options = n),
                this.options.keySeparator === void 0 &&
                    (this.options.keySeparator = "."),
                this.options.ignoreJSONStructure === void 0 &&
                    (this.options.ignoreJSONStructure = !0);
        }
        addNamespaces(t) {
            this.options.ns.indexOf(t) < 0 && this.options.ns.push(t);
        }
        removeNamespaces(t) {
            const n = this.options.ns.indexOf(t);
            n > -1 && this.options.ns.splice(n, 1);
        }
        getResource(t, n, a) {
            let r =
                arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : {};
            const i =
                    r.keySeparator !== void 0
                        ? r.keySeparator
                        : this.options.keySeparator,
                o =
                    r.ignoreJSONStructure !== void 0
                        ? r.ignoreJSONStructure
                        : this.options.ignoreJSONStructure;
            let s = [t, n];
            a && typeof a != "string" && (s = s.concat(a)),
                a && typeof a == "string" && (s = s.concat(i ? a.split(i) : a)),
                t.indexOf(".") > -1 && (s = t.split("."));
            const l = Oo(this.data, s);
            return l || !o || typeof a != "string"
                ? l
                : Ho(this.data && this.data[t] && this.data[t][n], a, i);
        }
        addResource(t, n, a, r) {
            let i =
                arguments.length > 4 && arguments[4] !== void 0
                    ? arguments[4]
                    : { silent: !1 };
            const o =
                i.keySeparator !== void 0
                    ? i.keySeparator
                    : this.options.keySeparator;
            let s = [t, n];
            a && (s = s.concat(o ? a.split(o) : a)),
                t.indexOf(".") > -1 &&
                    ((s = t.split(".")), (r = n), (n = s[1])),
                this.addNamespaces(n),
                ng(this.data, s, r),
                i.silent || this.emit("added", t, n, a, r);
        }
        addResources(t, n, a) {
            let r =
                arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : { silent: !1 };
            for (const i in a)
                (typeof a[i] == "string" ||
                    Object.prototype.toString.apply(a[i]) ===
                        "[object Array]") &&
                    this.addResource(t, n, i, a[i], { silent: !0 });
            r.silent || this.emit("added", t, n, a);
        }
        addResourceBundle(t, n, a, r, i) {
            let o =
                    arguments.length > 5 && arguments[5] !== void 0
                        ? arguments[5]
                        : { silent: !1 },
                s = [t, n];
            t.indexOf(".") > -1 &&
                ((s = t.split(".")), (r = a), (a = n), (n = s[1])),
                this.addNamespaces(n);
            let l = Oo(this.data, s) || {};
            r ? ag(l, a, i) : (l = { ...l, ...a }),
                ng(this.data, s, l),
                o.silent || this.emit("added", t, n, a);
        }
        removeResourceBundle(t, n) {
            this.hasResourceBundle(t, n) && delete this.data[t][n],
                this.removeNamespaces(n),
                this.emit("removed", t, n);
        }
        hasResourceBundle(t, n) {
            return this.getResource(t, n) !== void 0;
        }
        getResourceBundle(t, n) {
            return (
                n || (n = this.options.defaultNS),
                this.options.compatibilityAPI === "v1"
                    ? { ...this.getResource(t, n) }
                    : this.getResource(t, n)
            );
        }
        getDataByLanguage(t) {
            return this.data[t];
        }
        hasLanguageSomeTranslations(t) {
            const n = this.getDataByLanguage(t);
            return !!((n && Object.keys(n)) || []).find(
                (r) => n[r] && Object.keys(n[r]).length > 0
            );
        }
        toJSON() {
            return this.data;
        }
    }
    var ig = {
        processors: {},
        addPostProcessor(e) {
            this.processors[e.name] = e;
        },
        handle(e, t, n, a, r) {
            return (
                e.forEach((i) => {
                    this.processors[i] &&
                        (t = this.processors[i].process(t, n, a, r));
                }),
                t
            );
        },
    };
    const og = {};
    class Wo extends Fo {
        constructor(t) {
            let n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : {};
            super(),
                q1(
                    [
                        "resourceStore",
                        "languageUtils",
                        "pluralResolver",
                        "interpolator",
                        "backendConnector",
                        "i18nFormat",
                        "utils",
                    ],
                    t,
                    this
                ),
                (this.options = n),
                this.options.keySeparator === void 0 &&
                    (this.options.keySeparator = "."),
                (this.logger = st.create("translator"));
        }
        changeLanguage(t) {
            t && (this.language = t);
        }
        exists(t) {
            let n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : { interpolation: {} };
            if (t == null) return !1;
            const a = this.resolve(t, n);
            return a && a.res !== void 0;
        }
        extractFromKey(t, n) {
            let a =
                n.nsSeparator !== void 0
                    ? n.nsSeparator
                    : this.options.nsSeparator;
            a === void 0 && (a = ":");
            const r =
                n.keySeparator !== void 0
                    ? n.keySeparator
                    : this.options.keySeparator;
            let i = n.ns || this.options.defaultNS || [];
            const o = a && t.indexOf(a) > -1,
                s =
                    !this.options.userDefinedKeySeparator &&
                    !n.keySeparator &&
                    !this.options.userDefinedNsSeparator &&
                    !n.nsSeparator &&
                    !Z1(t, a, r);
            if (o && !s) {
                const l = t.match(this.interpolator.nestingRegexp);
                if (l && l.length > 0) return { key: t, namespaces: i };
                const u = t.split(a);
                (a !== r || (a === r && this.options.ns.indexOf(u[0]) > -1)) &&
                    (i = u.shift()),
                    (t = u.join(r));
            }
            return typeof i == "string" && (i = [i]), { key: t, namespaces: i };
        }
        translate(t, n, a) {
            if (
                (typeof n != "object" &&
                    this.options.overloadTranslationOptionHandler &&
                    (n =
                        this.options.overloadTranslationOptionHandler(
                            arguments
                        )),
                typeof n == "object" && (n = { ...n }),
                n || (n = {}),
                t == null)
            )
                return "";
            Array.isArray(t) || (t = [String(t)]);
            const r =
                    n.returnDetails !== void 0
                        ? n.returnDetails
                        : this.options.returnDetails,
                i =
                    n.keySeparator !== void 0
                        ? n.keySeparator
                        : this.options.keySeparator,
                { key: o, namespaces: s } = this.extractFromKey(
                    t[t.length - 1],
                    n
                ),
                l = s[s.length - 1],
                u = n.lng || this.language,
                m =
                    n.appendNamespaceToCIMode ||
                    this.options.appendNamespaceToCIMode;
            if (u && u.toLowerCase() === "cimode") {
                if (m) {
                    const w = n.nsSeparator || this.options.nsSeparator;
                    return r
                        ? {
                              res: `${l}${w}${o}`,
                              usedKey: o,
                              exactUsedKey: o,
                              usedLng: u,
                              usedNS: l,
                          }
                        : `${l}${w}${o}`;
                }
                return r
                    ? {
                          res: o,
                          usedKey: o,
                          exactUsedKey: o,
                          usedLng: u,
                          usedNS: l,
                      }
                    : o;
            }
            const p = this.resolve(t, n);
            let d = p && p.res;
            const b = (p && p.usedKey) || o,
                y = (p && p.exactUsedKey) || o,
                v = Object.prototype.toString.apply(d),
                g = ["[object Number]", "[object Function]", "[object RegExp]"],
                h =
                    n.joinArrays !== void 0
                        ? n.joinArrays
                        : this.options.joinArrays,
                f = !this.i18nFormat || this.i18nFormat.handleAsObject;
            if (
                f &&
                d &&
                typeof d != "string" &&
                typeof d != "boolean" &&
                typeof d != "number" &&
                g.indexOf(v) < 0 &&
                !(typeof h == "string" && v === "[object Array]")
            ) {
                if (!n.returnObjects && !this.options.returnObjects) {
                    this.options.returnedObjectHandler ||
                        this.logger.warn(
                            "accessing an object - but returnObjects options is not enabled!"
                        );
                    const w = this.options.returnedObjectHandler
                        ? this.options.returnedObjectHandler(b, d, {
                              ...n,
                              ns: s,
                          })
                        : `key '${o} (${this.language})' returned an object instead of string.`;
                    return r ? ((p.res = w), p) : w;
                }
                if (i) {
                    const w = v === "[object Array]",
                        E = w ? [] : {},
                        S = w ? y : b;
                    for (const $ in d)
                        if (Object.prototype.hasOwnProperty.call(d, $)) {
                            const T = `${S}${i}${$}`;
                            (E[$] = this.translate(T, {
                                ...n,
                                joinArrays: !1,
                                ns: s,
                            })),
                                E[$] === T && (E[$] = d[$]);
                        }
                    d = E;
                }
            } else if (f && typeof h == "string" && v === "[object Array]")
                (d = d.join(h)), d && (d = this.extendTranslation(d, t, n, a));
            else {
                let w = !1,
                    E = !1;
                const S = n.count !== void 0 && typeof n.count != "string",
                    $ = Wo.hasDefaultValue(n),
                    T = S ? this.pluralResolver.getSuffix(u, n.count, n) : "",
                    P =
                        n.ordinal && S
                            ? this.pluralResolver.getSuffix(u, n.count, {
                                  ordinal: !1,
                              })
                            : "",
                    U =
                        n[`defaultValue${T}`] ||
                        n[`defaultValue${P}`] ||
                        n.defaultValue;
                !this.isValidLookup(d) && $ && ((w = !0), (d = U)),
                    this.isValidLookup(d) || ((E = !0), (d = o));
                const le =
                        (n.missingKeyNoValueFallbackToKey ||
                            this.options.missingKeyNoValueFallbackToKey) &&
                        E
                            ? void 0
                            : d,
                    W = $ && U !== d && this.options.updateMissing;
                if (E || w || W) {
                    if (
                        (this.logger.log(
                            W ? "updateKey" : "missingKey",
                            u,
                            l,
                            o,
                            W ? U : d
                        ),
                        i)
                    ) {
                        const he = this.resolve(o, { ...n, keySeparator: !1 });
                        he &&
                            he.res &&
                            this.logger.warn(
                                "Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format."
                            );
                    }
                    let lt = [];
                    const He = this.languageUtils.getFallbackCodes(
                        this.options.fallbackLng,
                        n.lng || this.language
                    );
                    if (
                        this.options.saveMissingTo === "fallback" &&
                        He &&
                        He[0]
                    )
                        for (let he = 0; he < He.length; he++) lt.push(He[he]);
                    else
                        this.options.saveMissingTo === "all"
                            ? (lt = this.languageUtils.toResolveHierarchy(
                                  n.lng || this.language
                              ))
                            : lt.push(n.lng || this.language);
                    const Wt = (he, ct, ha) => {
                        const Go = $ && ha !== d ? ha : le;
                        this.options.missingKeyHandler
                            ? this.options.missingKeyHandler(
                                  he,
                                  l,
                                  ct,
                                  Go,
                                  W,
                                  n
                              )
                            : this.backendConnector &&
                              this.backendConnector.saveMissing &&
                              this.backendConnector.saveMissing(
                                  he,
                                  l,
                                  ct,
                                  Go,
                                  W,
                                  n
                              ),
                            this.emit("missingKey", he, l, ct, d);
                    };
                    this.options.saveMissing &&
                        (this.options.saveMissingPlurals && S
                            ? lt.forEach((he) => {
                                  this.pluralResolver
                                      .getSuffixes(he, n)
                                      .forEach((ct) => {
                                          Wt(
                                              [he],
                                              o + ct,
                                              n[`defaultValue${ct}`] || U
                                          );
                                      });
                              })
                            : Wt(lt, o, U));
                }
                (d = this.extendTranslation(d, t, n, p, a)),
                    E &&
                        d === o &&
                        this.options.appendNamespaceToMissingKey &&
                        (d = `${l}:${o}`),
                    (E || w) &&
                        this.options.parseMissingKeyHandler &&
                        (this.options.compatibilityAPI !== "v1"
                            ? (d = this.options.parseMissingKeyHandler(
                                  this.options.appendNamespaceToMissingKey
                                      ? `${l}:${o}`
                                      : o,
                                  w ? d : void 0
                              ))
                            : (d = this.options.parseMissingKeyHandler(d)));
            }
            return r ? ((p.res = d), p) : d;
        }
        extendTranslation(t, n, a, r, i) {
            var o = this;
            if (this.i18nFormat && this.i18nFormat.parse)
                t = this.i18nFormat.parse(
                    t,
                    { ...this.options.interpolation.defaultVariables, ...a },
                    a.lng || this.language || r.usedLng,
                    r.usedNS,
                    r.usedKey,
                    { resolved: r }
                );
            else if (!a.skipInterpolation) {
                a.interpolation &&
                    this.interpolator.init({
                        ...a,
                        interpolation: {
                            ...this.options.interpolation,
                            ...a.interpolation,
                        },
                    });
                const u =
                    typeof t == "string" &&
                    (a &&
                    a.interpolation &&
                    a.interpolation.skipOnVariables !== void 0
                        ? a.interpolation.skipOnVariables
                        : this.options.interpolation.skipOnVariables);
                let m;
                if (u) {
                    const d = t.match(this.interpolator.nestingRegexp);
                    m = d && d.length;
                }
                let p =
                    a.replace && typeof a.replace != "string" ? a.replace : a;
                if (
                    (this.options.interpolation.defaultVariables &&
                        (p = {
                            ...this.options.interpolation.defaultVariables,
                            ...p,
                        }),
                    (t = this.interpolator.interpolate(
                        t,
                        p,
                        a.lng || this.language,
                        a
                    )),
                    u)
                ) {
                    const d = t.match(this.interpolator.nestingRegexp),
                        b = d && d.length;
                    m < b && (a.nest = !1);
                }
                !a.lng &&
                    this.options.compatibilityAPI !== "v1" &&
                    r &&
                    r.res &&
                    (a.lng = r.usedLng),
                    a.nest !== !1 &&
                        (t = this.interpolator.nest(
                            t,
                            function () {
                                for (
                                    var d = arguments.length,
                                        b = new Array(d),
                                        y = 0;
                                    y < d;
                                    y++
                                )
                                    b[y] = arguments[y];
                                return i && i[0] === b[0] && !a.context
                                    ? (o.logger.warn(
                                          `It seems you are nesting recursively key: ${b[0]} in key: ${n[0]}`
                                      ),
                                      null)
                                    : o.translate(...b, n);
                            },
                            a
                        )),
                    a.interpolation && this.interpolator.reset();
            }
            const s = a.postProcess || this.options.postProcess,
                l = typeof s == "string" ? [s] : s;
            return (
                t != null &&
                    l &&
                    l.length &&
                    a.applyPostProcessor !== !1 &&
                    (t = ig.handle(
                        l,
                        t,
                        n,
                        this.options && this.options.postProcessPassResolved
                            ? { i18nResolved: r, ...a }
                            : a,
                        this
                    )),
                t
            );
        }
        resolve(t) {
            let n =
                    arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : {},
                a,
                r,
                i,
                o,
                s;
            return (
                typeof t == "string" && (t = [t]),
                t.forEach((l) => {
                    if (this.isValidLookup(a)) return;
                    const u = this.extractFromKey(l, n),
                        m = u.key;
                    r = m;
                    let p = u.namespaces;
                    this.options.fallbackNS &&
                        (p = p.concat(this.options.fallbackNS));
                    const d = n.count !== void 0 && typeof n.count != "string",
                        b =
                            d &&
                            !n.ordinal &&
                            n.count === 0 &&
                            this.pluralResolver.shouldUseIntlApi(),
                        y =
                            n.context !== void 0 &&
                            (typeof n.context == "string" ||
                                typeof n.context == "number") &&
                            n.context !== "",
                        v = n.lngs
                            ? n.lngs
                            : this.languageUtils.toResolveHierarchy(
                                  n.lng || this.language,
                                  n.fallbackLng
                              );
                    p.forEach((g) => {
                        this.isValidLookup(a) ||
                            ((s = g),
                            !og[`${v[0]}-${g}`] &&
                                this.utils &&
                                this.utils.hasLoadedNamespace &&
                                !this.utils.hasLoadedNamespace(s) &&
                                ((og[`${v[0]}-${g}`] = !0),
                                this.logger.warn(
                                    `key "${r}" for languages "${v.join(
                                        ", "
                                    )}" won't get resolved as namespace "${s}" was not yet loaded`,
                                    "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"
                                )),
                            v.forEach((h) => {
                                if (this.isValidLookup(a)) return;
                                o = h;
                                const f = [m];
                                if (
                                    this.i18nFormat &&
                                    this.i18nFormat.addLookupKeys
                                )
                                    this.i18nFormat.addLookupKeys(
                                        f,
                                        m,
                                        h,
                                        g,
                                        n
                                    );
                                else {
                                    let w;
                                    d &&
                                        (w = this.pluralResolver.getSuffix(
                                            h,
                                            n.count,
                                            n
                                        ));
                                    const E = `${this.options.pluralSeparator}zero`,
                                        S = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
                                    if (
                                        (d &&
                                            (f.push(m + w),
                                            n.ordinal &&
                                                w.indexOf(S) === 0 &&
                                                f.push(
                                                    m +
                                                        w.replace(
                                                            S,
                                                            this.options
                                                                .pluralSeparator
                                                        )
                                                ),
                                            b && f.push(m + E)),
                                        y)
                                    ) {
                                        const $ = `${m}${this.options.contextSeparator}${n.context}`;
                                        f.push($),
                                            d &&
                                                (f.push($ + w),
                                                n.ordinal &&
                                                    w.indexOf(S) === 0 &&
                                                    f.push(
                                                        $ +
                                                            w.replace(
                                                                S,
                                                                this.options
                                                                    .pluralSeparator
                                                            )
                                                    ),
                                                b && f.push($ + E));
                                    }
                                }
                                let x;
                                for (; (x = f.pop()); )
                                    this.isValidLookup(a) ||
                                        ((i = x),
                                        (a = this.getResource(h, g, x, n)));
                            }));
                    });
                }),
                { res: a, usedKey: r, exactUsedKey: i, usedLng: o, usedNS: s }
            );
        }
        isValidLookup(t) {
            return (
                t !== void 0 &&
                !(!this.options.returnNull && t === null) &&
                !(!this.options.returnEmptyString && t === "")
            );
        }
        getResource(t, n, a) {
            let r =
                arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : {};
            return this.i18nFormat && this.i18nFormat.getResource
                ? this.i18nFormat.getResource(t, n, a, r)
                : this.resourceStore.getResource(t, n, a, r);
        }
        static hasDefaultValue(t) {
            const n = "defaultValue";
            for (const a in t)
                if (
                    Object.prototype.hasOwnProperty.call(t, a) &&
                    n === a.substring(0, n.length) &&
                    t[a] !== void 0
                )
                    return !0;
            return !1;
        }
    }
    function su(e) {
        return e.charAt(0).toUpperCase() + e.slice(1);
    }
    class sg {
        constructor(t) {
            (this.options = t),
                (this.supportedLngs = this.options.supportedLngs || !1),
                (this.logger = st.create("languageUtils"));
        }
        getScriptPartFromCode(t) {
            if (((t = Vo(t)), !t || t.indexOf("-") < 0)) return null;
            const n = t.split("-");
            return n.length === 2 ||
                (n.pop(), n[n.length - 1].toLowerCase() === "x")
                ? null
                : this.formatLanguageCode(n.join("-"));
        }
        getLanguagePartFromCode(t) {
            if (((t = Vo(t)), !t || t.indexOf("-") < 0)) return t;
            const n = t.split("-");
            return this.formatLanguageCode(n[0]);
        }
        formatLanguageCode(t) {
            if (typeof t == "string" && t.indexOf("-") > -1) {
                const n = [
                    "hans",
                    "hant",
                    "latn",
                    "cyrl",
                    "cans",
                    "mong",
                    "arab",
                ];
                let a = t.split("-");
                return (
                    this.options.lowerCaseLng
                        ? (a = a.map((r) => r.toLowerCase()))
                        : a.length === 2
                        ? ((a[0] = a[0].toLowerCase()),
                          (a[1] = a[1].toUpperCase()),
                          n.indexOf(a[1].toLowerCase()) > -1 &&
                              (a[1] = su(a[1].toLowerCase())))
                        : a.length === 3 &&
                          ((a[0] = a[0].toLowerCase()),
                          a[1].length === 2 && (a[1] = a[1].toUpperCase()),
                          a[0] !== "sgn" &&
                              a[2].length === 2 &&
                              (a[2] = a[2].toUpperCase()),
                          n.indexOf(a[1].toLowerCase()) > -1 &&
                              (a[1] = su(a[1].toLowerCase())),
                          n.indexOf(a[2].toLowerCase()) > -1 &&
                              (a[2] = su(a[2].toLowerCase()))),
                    a.join("-")
                );
            }
            return this.options.cleanCode || this.options.lowerCaseLng
                ? t.toLowerCase()
                : t;
        }
        isSupportedCode(t) {
            return (
                (this.options.load === "languageOnly" ||
                    this.options.nonExplicitSupportedLngs) &&
                    (t = this.getLanguagePartFromCode(t)),
                !this.supportedLngs ||
                    !this.supportedLngs.length ||
                    this.supportedLngs.indexOf(t) > -1
            );
        }
        getBestMatchFromCodes(t) {
            if (!t) return null;
            let n;
            return (
                t.forEach((a) => {
                    if (n) return;
                    const r = this.formatLanguageCode(a);
                    (!this.options.supportedLngs || this.isSupportedCode(r)) &&
                        (n = r);
                }),
                !n &&
                    this.options.supportedLngs &&
                    t.forEach((a) => {
                        if (n) return;
                        const r = this.getLanguagePartFromCode(a);
                        if (this.isSupportedCode(r)) return (n = r);
                        n = this.options.supportedLngs.find((i) => {
                            if (i === r) return i;
                            if (
                                !(i.indexOf("-") < 0 && r.indexOf("-") < 0) &&
                                i.indexOf(r) === 0
                            )
                                return i;
                        });
                    }),
                n || (n = this.getFallbackCodes(this.options.fallbackLng)[0]),
                n
            );
        }
        getFallbackCodes(t, n) {
            if (!t) return [];
            if (
                (typeof t == "function" && (t = t(n)),
                typeof t == "string" && (t = [t]),
                Object.prototype.toString.apply(t) === "[object Array]")
            )
                return t;
            if (!n) return t.default || [];
            let a = t[n];
            return (
                a || (a = t[this.getScriptPartFromCode(n)]),
                a || (a = t[this.formatLanguageCode(n)]),
                a || (a = t[this.getLanguagePartFromCode(n)]),
                a || (a = t.default),
                a || []
            );
        }
        toResolveHierarchy(t, n) {
            const a = this.getFallbackCodes(
                    n || this.options.fallbackLng || [],
                    t
                ),
                r = [],
                i = (o) => {
                    o &&
                        (this.isSupportedCode(o)
                            ? r.push(o)
                            : this.logger.warn(
                                  `rejecting language code not found in supportedLngs: ${o}`
                              ));
                };
            return (
                typeof t == "string" &&
                (t.indexOf("-") > -1 || t.indexOf("_") > -1)
                    ? (this.options.load !== "languageOnly" &&
                          i(this.formatLanguageCode(t)),
                      this.options.load !== "languageOnly" &&
                          this.options.load !== "currentOnly" &&
                          i(this.getScriptPartFromCode(t)),
                      this.options.load !== "currentOnly" &&
                          i(this.getLanguagePartFromCode(t)))
                    : typeof t == "string" && i(this.formatLanguageCode(t)),
                a.forEach((o) => {
                    r.indexOf(o) < 0 && i(this.formatLanguageCode(o));
                }),
                r
            );
        }
    }
    let eE = [
            {
                lngs: [
                    "ach",
                    "ak",
                    "am",
                    "arn",
                    "br",
                    "fil",
                    "gun",
                    "ln",
                    "mfe",
                    "mg",
                    "mi",
                    "oc",
                    "pt",
                    "pt-BR",
                    "tg",
                    "tl",
                    "ti",
                    "tr",
                    "uz",
                    "wa",
                ],
                nr: [1, 2],
                fc: 1,
            },
            {
                lngs: [
                    "af",
                    "an",
                    "ast",
                    "az",
                    "bg",
                    "bn",
                    "ca",
                    "da",
                    "de",
                    "dev",
                    "el",
                    "en",
                    "eo",
                    "es",
                    "et",
                    "eu",
                    "fi",
                    "fo",
                    "fur",
                    "fy",
                    "gl",
                    "gu",
                    "ha",
                    "hi",
                    "hu",
                    "hy",
                    "ia",
                    "it",
                    "kk",
                    "kn",
                    "ku",
                    "lb",
                    "mai",
                    "ml",
                    "mn",
                    "mr",
                    "nah",
                    "nap",
                    "nb",
                    "ne",
                    "nl",
                    "nn",
                    "no",
                    "nso",
                    "pa",
                    "pap",
                    "pms",
                    "ps",
                    "pt-PT",
                    "rm",
                    "sco",
                    "se",
                    "si",
                    "so",
                    "son",
                    "sq",
                    "sv",
                    "sw",
                    "ta",
                    "te",
                    "tk",
                    "ur",
                    "yo",
                ],
                nr: [1, 2],
                fc: 2,
            },
            {
                lngs: [
                    "ay",
                    "bo",
                    "cgg",
                    "fa",
                    "ht",
                    "id",
                    "ja",
                    "jbo",
                    "ka",
                    "km",
                    "ko",
                    "ky",
                    "lo",
                    "ms",
                    "sah",
                    "su",
                    "th",
                    "tt",
                    "ug",
                    "vi",
                    "wo",
                    "zh",
                ],
                nr: [1],
                fc: 3,
            },
            {
                lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
                nr: [1, 2, 5],
                fc: 4,
            },
            { lngs: ["ar"], nr: [0, 1, 2, 3, 11, 100], fc: 5 },
            { lngs: ["cs", "sk"], nr: [1, 2, 5], fc: 6 },
            { lngs: ["csb", "pl"], nr: [1, 2, 5], fc: 7 },
            { lngs: ["cy"], nr: [1, 2, 3, 8], fc: 8 },
            { lngs: ["fr"], nr: [1, 2], fc: 9 },
            { lngs: ["ga"], nr: [1, 2, 3, 7, 11], fc: 10 },
            { lngs: ["gd"], nr: [1, 2, 3, 20], fc: 11 },
            { lngs: ["is"], nr: [1, 2], fc: 12 },
            { lngs: ["jv"], nr: [0, 1], fc: 13 },
            { lngs: ["kw"], nr: [1, 2, 3, 4], fc: 14 },
            { lngs: ["lt"], nr: [1, 2, 10], fc: 15 },
            { lngs: ["lv"], nr: [1, 2, 0], fc: 16 },
            { lngs: ["mk"], nr: [1, 2], fc: 17 },
            { lngs: ["mnk"], nr: [0, 1, 2], fc: 18 },
            { lngs: ["mt"], nr: [1, 2, 11, 20], fc: 19 },
            { lngs: ["or"], nr: [2, 1], fc: 2 },
            { lngs: ["ro"], nr: [1, 2, 20], fc: 20 },
            { lngs: ["sl"], nr: [5, 1, 2, 3], fc: 21 },
            { lngs: ["he", "iw"], nr: [1, 2, 20, 21], fc: 22 },
        ],
        tE = {
            1: function (e) {
                return +(e > 1);
            },
            2: function (e) {
                return +(e != 1);
            },
            3: function (e) {
                return 0;
            },
            4: function (e) {
                return e % 10 == 1 && e % 100 != 11
                    ? 0
                    : e % 10 >= 2 &&
                      e % 10 <= 4 &&
                      (e % 100 < 10 || e % 100 >= 20)
                    ? 1
                    : 2;
            },
            5: function (e) {
                return e == 0
                    ? 0
                    : e == 1
                    ? 1
                    : e == 2
                    ? 2
                    : e % 100 >= 3 && e % 100 <= 10
                    ? 3
                    : e % 100 >= 11
                    ? 4
                    : 5;
            },
            6: function (e) {
                return e == 1 ? 0 : e >= 2 && e <= 4 ? 1 : 2;
            },
            7: function (e) {
                return e == 1
                    ? 0
                    : e % 10 >= 2 &&
                      e % 10 <= 4 &&
                      (e % 100 < 10 || e % 100 >= 20)
                    ? 1
                    : 2;
            },
            8: function (e) {
                return e == 1 ? 0 : e == 2 ? 1 : e != 8 && e != 11 ? 2 : 3;
            },
            9: function (e) {
                return +(e >= 2);
            },
            10: function (e) {
                return e == 1 ? 0 : e == 2 ? 1 : e < 7 ? 2 : e < 11 ? 3 : 4;
            },
            11: function (e) {
                return e == 1 || e == 11
                    ? 0
                    : e == 2 || e == 12
                    ? 1
                    : e > 2 && e < 20
                    ? 2
                    : 3;
            },
            12: function (e) {
                return +(e % 10 != 1 || e % 100 == 11);
            },
            13: function (e) {
                return +(e !== 0);
            },
            14: function (e) {
                return e == 1 ? 0 : e == 2 ? 1 : e == 3 ? 2 : 3;
            },
            15: function (e) {
                return e % 10 == 1 && e % 100 != 11
                    ? 0
                    : e % 10 >= 2 && (e % 100 < 10 || e % 100 >= 20)
                    ? 1
                    : 2;
            },
            16: function (e) {
                return e % 10 == 1 && e % 100 != 11 ? 0 : e !== 0 ? 1 : 2;
            },
            17: function (e) {
                return e == 1 || (e % 10 == 1 && e % 100 != 11) ? 0 : 1;
            },
            18: function (e) {
                return e == 0 ? 0 : e == 1 ? 1 : 2;
            },
            19: function (e) {
                return e == 1
                    ? 0
                    : e == 0 || (e % 100 > 1 && e % 100 < 11)
                    ? 1
                    : e % 100 > 10 && e % 100 < 20
                    ? 2
                    : 3;
            },
            20: function (e) {
                return e == 1
                    ? 0
                    : e == 0 || (e % 100 > 0 && e % 100 < 20)
                    ? 1
                    : 2;
            },
            21: function (e) {
                return e % 100 == 1
                    ? 1
                    : e % 100 == 2
                    ? 2
                    : e % 100 == 3 || e % 100 == 4
                    ? 3
                    : 0;
            },
            22: function (e) {
                return e == 1
                    ? 0
                    : e == 2
                    ? 1
                    : (e < 0 || e > 10) && e % 10 == 0
                    ? 2
                    : 3;
            },
        };
    const nE = ["v1", "v2", "v3"],
        aE = ["v4"],
        lg = { zero: 0, one: 1, two: 2, few: 3, many: 4, other: 5 };
    function rE() {
        const e = {};
        return (
            eE.forEach((t) => {
                t.lngs.forEach((n) => {
                    e[n] = { numbers: t.nr, plurals: tE[t.fc] };
                });
            }),
            e
        );
    }
    class iE {
        constructor(t) {
            let n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : {};
            (this.languageUtils = t),
                (this.options = n),
                (this.logger = st.create("pluralResolver")),
                (!this.options.compatibilityJSON ||
                    aE.includes(this.options.compatibilityJSON)) &&
                    (typeof Intl > "u" || !Intl.PluralRules) &&
                    ((this.options.compatibilityJSON = "v3"),
                    this.logger.error(
                        "Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling."
                    )),
                (this.rules = rE());
        }
        addRule(t, n) {
            this.rules[t] = n;
        }
        getRule(t) {
            let n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : {};
            if (this.shouldUseIntlApi())
                try {
                    return new Intl.PluralRules(Vo(t), {
                        type: n.ordinal ? "ordinal" : "cardinal",
                    });
                } catch {
                    return;
                }
            return (
                this.rules[t] ||
                this.rules[this.languageUtils.getLanguagePartFromCode(t)]
            );
        }
        needsPlural(t) {
            let n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : {};
            const a = this.getRule(t, n);
            return this.shouldUseIntlApi()
                ? a && a.resolvedOptions().pluralCategories.length > 1
                : a && a.numbers.length > 1;
        }
        getPluralFormsOfKey(t, n) {
            let a =
                arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : {};
            return this.getSuffixes(t, a).map((r) => `${n}${r}`);
        }
        getSuffixes(t) {
            let n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : {};
            const a = this.getRule(t, n);
            return a
                ? this.shouldUseIntlApi()
                    ? a
                          .resolvedOptions()
                          .pluralCategories.sort((r, i) => lg[r] - lg[i])
                          .map(
                              (r) =>
                                  `${this.options.prepend}${
                                      n.ordinal
                                          ? `ordinal${this.options.prepend}`
                                          : ""
                                  }${r}`
                          )
                    : a.numbers.map((r) => this.getSuffix(t, r, n))
                : [];
        }
        getSuffix(t, n) {
            let a =
                arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : {};
            const r = this.getRule(t, a);
            return r
                ? this.shouldUseIntlApi()
                    ? `${this.options.prepend}${
                          a.ordinal ? `ordinal${this.options.prepend}` : ""
                      }${r.select(n)}`
                    : this.getSuffixRetroCompatible(r, n)
                : (this.logger.warn(`no plural rule found for: ${t}`), "");
        }
        getSuffixRetroCompatible(t, n) {
            const a = t.noAbs ? t.plurals(n) : t.plurals(Math.abs(n));
            let r = t.numbers[a];
            this.options.simplifyPluralSuffix &&
                t.numbers.length === 2 &&
                t.numbers[0] === 1 &&
                (r === 2 ? (r = "plural") : r === 1 && (r = ""));
            const i = () =>
                this.options.prepend && r.toString()
                    ? this.options.prepend + r.toString()
                    : r.toString();
            return this.options.compatibilityJSON === "v1"
                ? r === 1
                    ? ""
                    : typeof r == "number"
                    ? `_plural_${r.toString()}`
                    : i()
                : this.options.compatibilityJSON === "v2" ||
                  (this.options.simplifyPluralSuffix &&
                      t.numbers.length === 2 &&
                      t.numbers[0] === 1)
                ? i()
                : this.options.prepend && a.toString()
                ? this.options.prepend + a.toString()
                : a.toString();
        }
        shouldUseIntlApi() {
            return !nE.includes(this.options.compatibilityJSON);
        }
    }
    function cg(e, t, n) {
        let a =
                arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : ".",
            r =
                arguments.length > 4 && arguments[4] !== void 0
                    ? arguments[4]
                    : !0,
            i = K1(e, t, n);
        return (
            !i &&
                r &&
                typeof n == "string" &&
                ((i = Ho(e, n, a)), i === void 0 && (i = Ho(t, n, a))),
            i
        );
    }
    class oE {
        constructor() {
            let t =
                arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : {};
            (this.logger = st.create("interpolator")),
                (this.options = t),
                (this.format =
                    (t.interpolation && t.interpolation.format) || ((n) => n)),
                this.init(t);
        }
        init() {
            let t =
                arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : {};
            t.interpolation || (t.interpolation = { escapeValue: !0 });
            const n = t.interpolation;
            (this.escape = n.escape !== void 0 ? n.escape : Q1),
                (this.escapeValue =
                    n.escapeValue !== void 0 ? n.escapeValue : !0),
                (this.useRawValueToEscape =
                    n.useRawValueToEscape !== void 0
                        ? n.useRawValueToEscape
                        : !1),
                (this.prefix = n.prefix
                    ? ma(n.prefix)
                    : n.prefixEscaped || "{{"),
                (this.suffix = n.suffix
                    ? ma(n.suffix)
                    : n.suffixEscaped || "}}"),
                (this.formatSeparator = n.formatSeparator
                    ? n.formatSeparator
                    : n.formatSeparator || ","),
                (this.unescapePrefix = n.unescapeSuffix
                    ? ""
                    : n.unescapePrefix || "-"),
                (this.unescapeSuffix = this.unescapePrefix
                    ? ""
                    : n.unescapeSuffix || ""),
                (this.nestingPrefix = n.nestingPrefix
                    ? ma(n.nestingPrefix)
                    : n.nestingPrefixEscaped || ma("$t(")),
                (this.nestingSuffix = n.nestingSuffix
                    ? ma(n.nestingSuffix)
                    : n.nestingSuffixEscaped || ma(")")),
                (this.nestingOptionsSeparator = n.nestingOptionsSeparator
                    ? n.nestingOptionsSeparator
                    : n.nestingOptionsSeparator || ","),
                (this.maxReplaces = n.maxReplaces ? n.maxReplaces : 1e3),
                (this.alwaysFormat =
                    n.alwaysFormat !== void 0 ? n.alwaysFormat : !1),
                this.resetRegExp();
        }
        reset() {
            this.options && this.init(this.options);
        }
        resetRegExp() {
            const t = `${this.prefix}(.+?)${this.suffix}`;
            this.regexp = new RegExp(t, "g");
            const n = `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`;
            this.regexpUnescape = new RegExp(n, "g");
            const a = `${this.nestingPrefix}(.+?)${this.nestingSuffix}`;
            this.nestingRegexp = new RegExp(a, "g");
        }
        interpolate(t, n, a, r) {
            let i, o, s;
            const l =
                (this.options &&
                    this.options.interpolation &&
                    this.options.interpolation.defaultVariables) ||
                {};
            function u(y) {
                return y.replace(/\$/g, "$$$$");
            }
            const m = (y) => {
                if (y.indexOf(this.formatSeparator) < 0) {
                    const f = cg(
                        n,
                        l,
                        y,
                        this.options.keySeparator,
                        this.options.ignoreJSONStructure
                    );
                    return this.alwaysFormat
                        ? this.format(f, void 0, a, {
                              ...r,
                              ...n,
                              interpolationkey: y,
                          })
                        : f;
                }
                const v = y.split(this.formatSeparator),
                    g = v.shift().trim(),
                    h = v.join(this.formatSeparator).trim();
                return this.format(
                    cg(
                        n,
                        l,
                        g,
                        this.options.keySeparator,
                        this.options.ignoreJSONStructure
                    ),
                    h,
                    a,
                    { ...r, ...n, interpolationkey: g }
                );
            };
            this.resetRegExp();
            const p =
                    (r && r.missingInterpolationHandler) ||
                    this.options.missingInterpolationHandler,
                d =
                    r &&
                    r.interpolation &&
                    r.interpolation.skipOnVariables !== void 0
                        ? r.interpolation.skipOnVariables
                        : this.options.interpolation.skipOnVariables;
            return (
                [
                    { regex: this.regexpUnescape, safeValue: (y) => u(y) },
                    {
                        regex: this.regexp,
                        safeValue: (y) =>
                            this.escapeValue ? u(this.escape(y)) : u(y),
                    },
                ].forEach((y) => {
                    for (s = 0; (i = y.regex.exec(t)); ) {
                        const v = i[1].trim();
                        if (((o = m(v)), o === void 0))
                            if (typeof p == "function") {
                                const h = p(t, i, r);
                                o = typeof h == "string" ? h : "";
                            } else if (
                                r &&
                                Object.prototype.hasOwnProperty.call(r, v)
                            )
                                o = "";
                            else if (d) {
                                o = i[0];
                                continue;
                            } else
                                this.logger.warn(
                                    `missed to pass in variable ${v} for interpolating ${t}`
                                ),
                                    (o = "");
                        else
                            typeof o != "string" &&
                                !this.useRawValueToEscape &&
                                (o = tg(o));
                        const g = y.safeValue(o);
                        if (
                            ((t = t.replace(i[0], g)),
                            d
                                ? ((y.regex.lastIndex += o.length),
                                  (y.regex.lastIndex -= i[0].length))
                                : (y.regex.lastIndex = 0),
                            s++,
                            s >= this.maxReplaces)
                        )
                            break;
                    }
                }),
                t
            );
        }
        nest(t, n) {
            let a =
                    arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : {},
                r,
                i,
                o;
            function s(l, u) {
                const m = this.nestingOptionsSeparator;
                if (l.indexOf(m) < 0) return l;
                const p = l.split(new RegExp(`${m}[ ]*{`));
                let d = `{${p[1]}`;
                (l = p[0]), (d = this.interpolate(d, o));
                const b = d.match(/'/g),
                    y = d.match(/"/g);
                ((b && b.length % 2 === 0 && !y) || y.length % 2 !== 0) &&
                    (d = d.replace(/'/g, '"'));
                try {
                    (o = JSON.parse(d)), u && (o = { ...u, ...o });
                } catch (v) {
                    return (
                        this.logger.warn(
                            `failed parsing options string in nesting for key ${l}`,
                            v
                        ),
                        `${l}${m}${d}`
                    );
                }
                return delete o.defaultValue, l;
            }
            for (; (r = this.nestingRegexp.exec(t)); ) {
                let l = [];
                (o = { ...a }),
                    (o =
                        o.replace && typeof o.replace != "string"
                            ? o.replace
                            : o),
                    (o.applyPostProcessor = !1),
                    delete o.defaultValue;
                let u = !1;
                if (
                    r[0].indexOf(this.formatSeparator) !== -1 &&
                    !/{.*}/.test(r[1])
                ) {
                    const m = r[1]
                        .split(this.formatSeparator)
                        .map((p) => p.trim());
                    (r[1] = m.shift()), (l = m), (u = !0);
                }
                if (
                    ((i = n(s.call(this, r[1].trim(), o), o)),
                    i && r[0] === t && typeof i != "string")
                )
                    return i;
                typeof i != "string" && (i = tg(i)),
                    i ||
                        (this.logger.warn(
                            `missed to resolve ${r[1]} for nesting ${t}`
                        ),
                        (i = "")),
                    u &&
                        (i = l.reduce(
                            (m, p) =>
                                this.format(m, p, a.lng, {
                                    ...a,
                                    interpolationkey: r[1].trim(),
                                }),
                            i.trim()
                        )),
                    (t = t.replace(r[0], i)),
                    (this.regexp.lastIndex = 0);
            }
            return t;
        }
    }
    function sE(e) {
        let t = e.toLowerCase().trim();
        const n = {};
        if (e.indexOf("(") > -1) {
            const a = e.split("(");
            t = a[0].toLowerCase().trim();
            const r = a[1].substring(0, a[1].length - 1);
            t === "currency" && r.indexOf(":") < 0
                ? n.currency || (n.currency = r.trim())
                : t === "relativetime" && r.indexOf(":") < 0
                ? n.range || (n.range = r.trim())
                : r.split(";").forEach((o) => {
                      if (!o) return;
                      const [s, ...l] = o.split(":"),
                          u = l
                              .join(":")
                              .trim()
                              .replace(/^'+|'+$/g, "");
                      n[s.trim()] || (n[s.trim()] = u),
                          u === "false" && (n[s.trim()] = !1),
                          u === "true" && (n[s.trim()] = !0),
                          isNaN(u) || (n[s.trim()] = parseInt(u, 10));
                  });
        }
        return { formatName: t, formatOptions: n };
    }
    function pa(e) {
        const t = {};
        return function (a, r, i) {
            const o = r + JSON.stringify(i);
            let s = t[o];
            return s || ((s = e(Vo(r), i)), (t[o] = s)), s(a);
        };
    }
    class lE {
        constructor() {
            let t =
                arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : {};
            (this.logger = st.create("formatter")),
                (this.options = t),
                (this.formats = {
                    number: pa((n, a) => {
                        const r = new Intl.NumberFormat(n, { ...a });
                        return (i) => r.format(i);
                    }),
                    currency: pa((n, a) => {
                        const r = new Intl.NumberFormat(n, {
                            ...a,
                            style: "currency",
                        });
                        return (i) => r.format(i);
                    }),
                    datetime: pa((n, a) => {
                        const r = new Intl.DateTimeFormat(n, { ...a });
                        return (i) => r.format(i);
                    }),
                    relativetime: pa((n, a) => {
                        const r = new Intl.RelativeTimeFormat(n, { ...a });
                        return (i) => r.format(i, a.range || "day");
                    }),
                    list: pa((n, a) => {
                        const r = new Intl.ListFormat(n, { ...a });
                        return (i) => r.format(i);
                    }),
                }),
                this.init(t);
        }
        init(t) {
            const a = (
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : { interpolation: {} }
            ).interpolation;
            this.formatSeparator = a.formatSeparator
                ? a.formatSeparator
                : a.formatSeparator || ",";
        }
        add(t, n) {
            this.formats[t.toLowerCase().trim()] = n;
        }
        addCached(t, n) {
            this.formats[t.toLowerCase().trim()] = pa(n);
        }
        format(t, n, a) {
            let r =
                arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : {};
            return n.split(this.formatSeparator).reduce((s, l) => {
                const { formatName: u, formatOptions: m } = sE(l);
                if (this.formats[u]) {
                    let p = s;
                    try {
                        const d =
                                (r &&
                                    r.formatParams &&
                                    r.formatParams[r.interpolationkey]) ||
                                {},
                            b = d.locale || d.lng || r.locale || r.lng || a;
                        p = this.formats[u](s, b, { ...m, ...r, ...d });
                    } catch (d) {
                        this.logger.warn(d);
                    }
                    return p;
                } else
                    this.logger.warn(`there was no format function for ${u}`);
                return s;
            }, t);
        }
    }
    function cE(e, t) {
        e.pending[t] !== void 0 && (delete e.pending[t], e.pendingCount--);
    }
    class uE extends Fo {
        constructor(t, n, a) {
            let r =
                arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : {};
            super(),
                (this.backend = t),
                (this.store = n),
                (this.services = a),
                (this.languageUtils = a.languageUtils),
                (this.options = r),
                (this.logger = st.create("backendConnector")),
                (this.waitingReads = []),
                (this.maxParallelReads = r.maxParallelReads || 10),
                (this.readingCalls = 0),
                (this.maxRetries = r.maxRetries >= 0 ? r.maxRetries : 5),
                (this.retryTimeout =
                    r.retryTimeout >= 1 ? r.retryTimeout : 350),
                (this.state = {}),
                (this.queue = []),
                this.backend &&
                    this.backend.init &&
                    this.backend.init(a, r.backend, r);
        }
        queueLoad(t, n, a, r) {
            const i = {},
                o = {},
                s = {},
                l = {};
            return (
                t.forEach((u) => {
                    let m = !0;
                    n.forEach((p) => {
                        const d = `${u}|${p}`;
                        !a.reload && this.store.hasResourceBundle(u, p)
                            ? (this.state[d] = 2)
                            : this.state[d] < 0 ||
                              (this.state[d] === 1
                                  ? o[d] === void 0 && (o[d] = !0)
                                  : ((this.state[d] = 1),
                                    (m = !1),
                                    o[d] === void 0 && (o[d] = !0),
                                    i[d] === void 0 && (i[d] = !0),
                                    l[p] === void 0 && (l[p] = !0)));
                    }),
                        m || (s[u] = !0);
                }),
                (Object.keys(i).length || Object.keys(o).length) &&
                    this.queue.push({
                        pending: o,
                        pendingCount: Object.keys(o).length,
                        loaded: {},
                        errors: [],
                        callback: r,
                    }),
                {
                    toLoad: Object.keys(i),
                    pending: Object.keys(o),
                    toLoadLanguages: Object.keys(s),
                    toLoadNamespaces: Object.keys(l),
                }
            );
        }
        loaded(t, n, a) {
            const r = t.split("|"),
                i = r[0],
                o = r[1];
            n && this.emit("failedLoading", i, o, n),
                a && this.store.addResourceBundle(i, o, a),
                (this.state[t] = n ? -1 : 2);
            const s = {};
            this.queue.forEach((l) => {
                G1(l.loaded, [i], o),
                    cE(l, t),
                    n && l.errors.push(n),
                    l.pendingCount === 0 &&
                        !l.done &&
                        (Object.keys(l.loaded).forEach((u) => {
                            s[u] || (s[u] = {});
                            const m = l.loaded[u];
                            m.length &&
                                m.forEach((p) => {
                                    s[u][p] === void 0 && (s[u][p] = !0);
                                });
                        }),
                        (l.done = !0),
                        l.errors.length ? l.callback(l.errors) : l.callback());
            }),
                this.emit("loaded", s),
                (this.queue = this.queue.filter((l) => !l.done));
        }
        read(t, n, a) {
            let r =
                    arguments.length > 3 && arguments[3] !== void 0
                        ? arguments[3]
                        : 0,
                i =
                    arguments.length > 4 && arguments[4] !== void 0
                        ? arguments[4]
                        : this.retryTimeout,
                o = arguments.length > 5 ? arguments[5] : void 0;
            if (!t.length) return o(null, {});
            if (this.readingCalls >= this.maxParallelReads) {
                this.waitingReads.push({
                    lng: t,
                    ns: n,
                    fcName: a,
                    tried: r,
                    wait: i,
                    callback: o,
                });
                return;
            }
            this.readingCalls++;
            const s = (u, m) => {
                    if ((this.readingCalls--, this.waitingReads.length > 0)) {
                        const p = this.waitingReads.shift();
                        this.read(
                            p.lng,
                            p.ns,
                            p.fcName,
                            p.tried,
                            p.wait,
                            p.callback
                        );
                    }
                    if (u && m && r < this.maxRetries) {
                        setTimeout(() => {
                            this.read.call(this, t, n, a, r + 1, i * 2, o);
                        }, i);
                        return;
                    }
                    o(u, m);
                },
                l = this.backend[a].bind(this.backend);
            if (l.length === 2) {
                try {
                    const u = l(t, n);
                    u && typeof u.then == "function"
                        ? u.then((m) => s(null, m)).catch(s)
                        : s(null, u);
                } catch (u) {
                    s(u);
                }
                return;
            }
            return l(t, n, s);
        }
        prepareLoading(t, n) {
            let a =
                    arguments.length > 2 && arguments[2] !== void 0
                        ? arguments[2]
                        : {},
                r = arguments.length > 3 ? arguments[3] : void 0;
            if (!this.backend)
                return (
                    this.logger.warn(
                        "No backend was added via i18next.use. Will not load resources."
                    ),
                    r && r()
                );
            typeof t == "string" &&
                (t = this.languageUtils.toResolveHierarchy(t)),
                typeof n == "string" && (n = [n]);
            const i = this.queueLoad(t, n, a, r);
            if (!i.toLoad.length) return i.pending.length || r(), null;
            i.toLoad.forEach((o) => {
                this.loadOne(o);
            });
        }
        load(t, n, a) {
            this.prepareLoading(t, n, {}, a);
        }
        reload(t, n, a) {
            this.prepareLoading(t, n, { reload: !0 }, a);
        }
        loadOne(t) {
            let n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : "";
            const a = t.split("|"),
                r = a[0],
                i = a[1];
            this.read(r, i, "read", void 0, void 0, (o, s) => {
                o &&
                    this.logger.warn(
                        `${n}loading namespace ${i} for language ${r} failed`,
                        o
                    ),
                    !o &&
                        s &&
                        this.logger.log(
                            `${n}loaded namespace ${i} for language ${r}`,
                            s
                        ),
                    this.loaded(t, o, s);
            });
        }
        saveMissing(t, n, a, r, i) {
            let o =
                    arguments.length > 5 && arguments[5] !== void 0
                        ? arguments[5]
                        : {},
                s =
                    arguments.length > 6 && arguments[6] !== void 0
                        ? arguments[6]
                        : () => {};
            if (
                this.services.utils &&
                this.services.utils.hasLoadedNamespace &&
                !this.services.utils.hasLoadedNamespace(n)
            ) {
                this.logger.warn(
                    `did not save key "${a}" as the namespace "${n}" was not yet loaded`,
                    "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"
                );
                return;
            }
            if (!(a == null || a === "")) {
                if (this.backend && this.backend.create) {
                    const l = { ...o, isUpdate: i },
                        u = this.backend.create.bind(this.backend);
                    if (u.length < 6)
                        try {
                            let m;
                            u.length === 5
                                ? (m = u(t, n, a, r, l))
                                : (m = u(t, n, a, r)),
                                m && typeof m.then == "function"
                                    ? m.then((p) => s(null, p)).catch(s)
                                    : s(null, m);
                        } catch (m) {
                            s(m);
                        }
                    else u(t, n, a, r, s, l);
                }
                !t || !t[0] || this.store.addResource(t[0], n, a, r);
            }
        }
    }
    function ug() {
        return {
            debug: !1,
            initImmediate: !0,
            ns: ["translation"],
            defaultNS: ["translation"],
            fallbackLng: ["dev"],
            fallbackNS: !1,
            supportedLngs: !1,
            nonExplicitSupportedLngs: !1,
            load: "all",
            preload: !1,
            simplifyPluralSuffix: !0,
            keySeparator: ".",
            nsSeparator: ":",
            pluralSeparator: "_",
            contextSeparator: "_",
            partialBundledLanguages: !1,
            saveMissing: !1,
            updateMissing: !1,
            saveMissingTo: "fallback",
            saveMissingPlurals: !0,
            missingKeyHandler: !1,
            missingInterpolationHandler: !1,
            postProcess: !1,
            postProcessPassResolved: !1,
            returnNull: !1,
            returnEmptyString: !0,
            returnObjects: !1,
            joinArrays: !1,
            returnedObjectHandler: !1,
            parseMissingKeyHandler: !1,
            appendNamespaceToMissingKey: !1,
            appendNamespaceToCIMode: !1,
            overloadTranslationOptionHandler: function (t) {
                let n = {};
                if (
                    (typeof t[1] == "object" && (n = t[1]),
                    typeof t[1] == "string" && (n.defaultValue = t[1]),
                    typeof t[2] == "string" && (n.tDescription = t[2]),
                    typeof t[2] == "object" || typeof t[3] == "object")
                ) {
                    const a = t[3] || t[2];
                    Object.keys(a).forEach((r) => {
                        n[r] = a[r];
                    });
                }
                return n;
            },
            interpolation: {
                escapeValue: !0,
                format: (e, t, n, a) => e,
                prefix: "{{",
                suffix: "}}",
                formatSeparator: ",",
                unescapePrefix: "-",
                nestingPrefix: "$t(",
                nestingSuffix: ")",
                nestingOptionsSeparator: ",",
                maxReplaces: 1e3,
                skipOnVariables: !0,
            },
        };
    }
    function dg(e) {
        return (
            typeof e.ns == "string" && (e.ns = [e.ns]),
            typeof e.fallbackLng == "string" &&
                (e.fallbackLng = [e.fallbackLng]),
            typeof e.fallbackNS == "string" && (e.fallbackNS = [e.fallbackNS]),
            e.supportedLngs &&
                e.supportedLngs.indexOf("cimode") < 0 &&
                (e.supportedLngs = e.supportedLngs.concat(["cimode"])),
            e
        );
    }
    function qo() {}
    function dE(e) {
        Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((n) => {
            typeof e[n] == "function" && (e[n] = e[n].bind(e));
        });
    }
    class Pr extends Fo {
        constructor() {
            let t =
                    arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : {},
                n = arguments.length > 1 ? arguments[1] : void 0;
            if (
                (super(),
                (this.options = dg(t)),
                (this.services = {}),
                (this.logger = st),
                (this.modules = { external: [] }),
                dE(this),
                n && !this.isInitialized && !t.isClone)
            ) {
                if (!this.options.initImmediate) return this.init(t, n), this;
                setTimeout(() => {
                    this.init(t, n);
                }, 0);
            }
        }
        init() {
            var t = this;
            let n =
                    arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : {},
                a = arguments.length > 1 ? arguments[1] : void 0;
            typeof n == "function" && ((a = n), (n = {})),
                !n.defaultNS &&
                    n.defaultNS !== !1 &&
                    n.ns &&
                    (typeof n.ns == "string"
                        ? (n.defaultNS = n.ns)
                        : n.ns.indexOf("translation") < 0 &&
                          (n.defaultNS = n.ns[0]));
            const r = ug();
            (this.options = { ...r, ...this.options, ...dg(n) }),
                this.options.compatibilityAPI !== "v1" &&
                    (this.options.interpolation = {
                        ...r.interpolation,
                        ...this.options.interpolation,
                    }),
                n.keySeparator !== void 0 &&
                    (this.options.userDefinedKeySeparator = n.keySeparator),
                n.nsSeparator !== void 0 &&
                    (this.options.userDefinedNsSeparator = n.nsSeparator);
            function i(m) {
                return m ? (typeof m == "function" ? new m() : m) : null;
            }
            if (!this.options.isClone) {
                this.modules.logger
                    ? st.init(i(this.modules.logger), this.options)
                    : st.init(null, this.options);
                let m;
                this.modules.formatter
                    ? (m = this.modules.formatter)
                    : typeof Intl < "u" && (m = lE);
                const p = new sg(this.options);
                this.store = new rg(this.options.resources, this.options);
                const d = this.services;
                (d.logger = st),
                    (d.resourceStore = this.store),
                    (d.languageUtils = p),
                    (d.pluralResolver = new iE(p, {
                        prepend: this.options.pluralSeparator,
                        compatibilityJSON: this.options.compatibilityJSON,
                        simplifyPluralSuffix: this.options.simplifyPluralSuffix,
                    })),
                    m &&
                        (!this.options.interpolation.format ||
                            this.options.interpolation.format ===
                                r.interpolation.format) &&
                        ((d.formatter = i(m)),
                        d.formatter.init(d, this.options),
                        (this.options.interpolation.format =
                            d.formatter.format.bind(d.formatter))),
                    (d.interpolator = new oE(this.options)),
                    (d.utils = {
                        hasLoadedNamespace: this.hasLoadedNamespace.bind(this),
                    }),
                    (d.backendConnector = new uE(
                        i(this.modules.backend),
                        d.resourceStore,
                        d,
                        this.options
                    )),
                    d.backendConnector.on("*", function (b) {
                        for (
                            var y = arguments.length,
                                v = new Array(y > 1 ? y - 1 : 0),
                                g = 1;
                            g < y;
                            g++
                        )
                            v[g - 1] = arguments[g];
                        t.emit(b, ...v);
                    }),
                    this.modules.languageDetector &&
                        ((d.languageDetector = i(
                            this.modules.languageDetector
                        )),
                        d.languageDetector.init &&
                            d.languageDetector.init(
                                d,
                                this.options.detection,
                                this.options
                            )),
                    this.modules.i18nFormat &&
                        ((d.i18nFormat = i(this.modules.i18nFormat)),
                        d.i18nFormat.init && d.i18nFormat.init(this)),
                    (this.translator = new Wo(this.services, this.options)),
                    this.translator.on("*", function (b) {
                        for (
                            var y = arguments.length,
                                v = new Array(y > 1 ? y - 1 : 0),
                                g = 1;
                            g < y;
                            g++
                        )
                            v[g - 1] = arguments[g];
                        t.emit(b, ...v);
                    }),
                    this.modules.external.forEach((b) => {
                        b.init && b.init(this);
                    });
            }
            if (
                ((this.format = this.options.interpolation.format),
                a || (a = qo),
                this.options.fallbackLng &&
                    !this.services.languageDetector &&
                    !this.options.lng)
            ) {
                const m = this.services.languageUtils.getFallbackCodes(
                    this.options.fallbackLng
                );
                m.length > 0 && m[0] !== "dev" && (this.options.lng = m[0]);
            }
            !this.services.languageDetector &&
                !this.options.lng &&
                this.logger.warn(
                    "init: no languageDetector is used and no lng is defined"
                ),
                [
                    "getResource",
                    "hasResourceBundle",
                    "getResourceBundle",
                    "getDataByLanguage",
                ].forEach((m) => {
                    this[m] = function () {
                        return t.store[m](...arguments);
                    };
                }),
                [
                    "addResource",
                    "addResources",
                    "addResourceBundle",
                    "removeResourceBundle",
                ].forEach((m) => {
                    this[m] = function () {
                        return t.store[m](...arguments), t;
                    };
                });
            const l = jr(),
                u = () => {
                    const m = (p, d) => {
                        this.isInitialized &&
                            !this.initializedStoreOnce &&
                            this.logger.warn(
                                "init: i18next is already initialized. You should call init just once!"
                            ),
                            (this.isInitialized = !0),
                            this.options.isClone ||
                                this.logger.log("initialized", this.options),
                            this.emit("initialized", this.options),
                            l.resolve(d),
                            a(p, d);
                    };
                    if (
                        this.languages &&
                        this.options.compatibilityAPI !== "v1" &&
                        !this.isInitialized
                    )
                        return m(null, this.t.bind(this));
                    this.changeLanguage(this.options.lng, m);
                };
            return (
                this.options.resources || !this.options.initImmediate
                    ? u()
                    : setTimeout(u, 0),
                l
            );
        }
        loadResources(t) {
            let a =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : qo;
            const r = typeof t == "string" ? t : this.language;
            if (
                (typeof t == "function" && (a = t),
                !this.options.resources || this.options.partialBundledLanguages)
            ) {
                if (
                    r &&
                    r.toLowerCase() === "cimode" &&
                    (!this.options.preload || this.options.preload.length === 0)
                )
                    return a();
                const i = [],
                    o = (s) => {
                        if (!s || s === "cimode") return;
                        this.services.languageUtils
                            .toResolveHierarchy(s)
                            .forEach((u) => {
                                u !== "cimode" && i.indexOf(u) < 0 && i.push(u);
                            });
                    };
                r
                    ? o(r)
                    : this.services.languageUtils
                          .getFallbackCodes(this.options.fallbackLng)
                          .forEach((l) => o(l)),
                    this.options.preload &&
                        this.options.preload.forEach((s) => o(s)),
                    this.services.backendConnector.load(
                        i,
                        this.options.ns,
                        (s) => {
                            !s &&
                                !this.resolvedLanguage &&
                                this.language &&
                                this.setResolvedLanguage(this.language),
                                a(s);
                        }
                    );
            } else a(null);
        }
        reloadResources(t, n, a) {
            const r = jr();
            return (
                t || (t = this.languages),
                n || (n = this.options.ns),
                a || (a = qo),
                this.services.backendConnector.reload(t, n, (i) => {
                    r.resolve(), a(i);
                }),
                r
            );
        }
        use(t) {
            if (!t)
                throw new Error(
                    "You are passing an undefined module! Please check the object you are passing to i18next.use()"
                );
            if (!t.type)
                throw new Error(
                    "You are passing a wrong module! Please check the object you are passing to i18next.use()"
                );
            return (
                t.type === "backend" && (this.modules.backend = t),
                (t.type === "logger" || (t.log && t.warn && t.error)) &&
                    (this.modules.logger = t),
                t.type === "languageDetector" &&
                    (this.modules.languageDetector = t),
                t.type === "i18nFormat" && (this.modules.i18nFormat = t),
                t.type === "postProcessor" && ig.addPostProcessor(t),
                t.type === "formatter" && (this.modules.formatter = t),
                t.type === "3rdParty" && this.modules.external.push(t),
                this
            );
        }
        setResolvedLanguage(t) {
            if (
                !(!t || !this.languages) &&
                !(["cimode", "dev"].indexOf(t) > -1)
            )
                for (let n = 0; n < this.languages.length; n++) {
                    const a = this.languages[n];
                    if (
                        !(["cimode", "dev"].indexOf(a) > -1) &&
                        this.store.hasLanguageSomeTranslations(a)
                    ) {
                        this.resolvedLanguage = a;
                        break;
                    }
                }
        }
        changeLanguage(t, n) {
            var a = this;
            this.isLanguageChangingTo = t;
            const r = jr();
            this.emit("languageChanging", t);
            const i = (l) => {
                    (this.language = l),
                        (this.languages =
                            this.services.languageUtils.toResolveHierarchy(l)),
                        (this.resolvedLanguage = void 0),
                        this.setResolvedLanguage(l);
                },
                o = (l, u) => {
                    u
                        ? (i(u),
                          this.translator.changeLanguage(u),
                          (this.isLanguageChangingTo = void 0),
                          this.emit("languageChanged", u),
                          this.logger.log("languageChanged", u))
                        : (this.isLanguageChangingTo = void 0),
                        r.resolve(function () {
                            return a.t(...arguments);
                        }),
                        n &&
                            n(l, function () {
                                return a.t(...arguments);
                            });
                },
                s = (l) => {
                    !t && !l && this.services.languageDetector && (l = []);
                    const u =
                        typeof l == "string"
                            ? l
                            : this.services.languageUtils.getBestMatchFromCodes(
                                  l
                              );
                    u &&
                        (this.language || i(u),
                        this.translator.language ||
                            this.translator.changeLanguage(u),
                        this.services.languageDetector &&
                            this.services.languageDetector.cacheUserLanguage &&
                            this.services.languageDetector.cacheUserLanguage(
                                u
                            )),
                        this.loadResources(u, (m) => {
                            o(m, u);
                        });
                };
            return (
                !t &&
                this.services.languageDetector &&
                !this.services.languageDetector.async
                    ? s(this.services.languageDetector.detect())
                    : !t &&
                      this.services.languageDetector &&
                      this.services.languageDetector.async
                    ? this.services.languageDetector.detect.length === 0
                        ? this.services.languageDetector.detect().then(s)
                        : this.services.languageDetector.detect(s)
                    : s(t),
                r
            );
        }
        getFixedT(t, n, a) {
            var r = this;
            const i = function (o, s) {
                let l;
                if (typeof s != "object") {
                    for (
                        var u = arguments.length,
                            m = new Array(u > 2 ? u - 2 : 0),
                            p = 2;
                        p < u;
                        p++
                    )
                        m[p - 2] = arguments[p];
                    l = r.options.overloadTranslationOptionHandler(
                        [o, s].concat(m)
                    );
                } else l = { ...s };
                (l.lng = l.lng || i.lng),
                    (l.lngs = l.lngs || i.lngs),
                    (l.ns = l.ns || i.ns),
                    (l.keyPrefix = l.keyPrefix || a || i.keyPrefix);
                const d = r.options.keySeparator || ".";
                let b;
                return (
                    l.keyPrefix && Array.isArray(o)
                        ? (b = o.map((y) => `${l.keyPrefix}${d}${y}`))
                        : (b = l.keyPrefix ? `${l.keyPrefix}${d}${o}` : o),
                    r.t(b, l)
                );
            };
            return (
                typeof t == "string" ? (i.lng = t) : (i.lngs = t),
                (i.ns = n),
                (i.keyPrefix = a),
                i
            );
        }
        t() {
            return this.translator && this.translator.translate(...arguments);
        }
        exists() {
            return this.translator && this.translator.exists(...arguments);
        }
        setDefaultNamespace(t) {
            this.options.defaultNS = t;
        }
        hasLoadedNamespace(t) {
            let n =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : {};
            if (!this.isInitialized)
                return (
                    this.logger.warn(
                        "hasLoadedNamespace: i18next was not initialized",
                        this.languages
                    ),
                    !1
                );
            if (!this.languages || !this.languages.length)
                return (
                    this.logger.warn(
                        "hasLoadedNamespace: i18n.languages were undefined or empty",
                        this.languages
                    ),
                    !1
                );
            const a = n.lng || this.resolvedLanguage || this.languages[0],
                r = this.options ? this.options.fallbackLng : !1,
                i = this.languages[this.languages.length - 1];
            if (a.toLowerCase() === "cimode") return !0;
            const o = (s, l) => {
                const u = this.services.backendConnector.state[`${s}|${l}`];
                return u === -1 || u === 2;
            };
            if (n.precheck) {
                const s = n.precheck(this, o);
                if (s !== void 0) return s;
            }
            return !!(
                this.hasResourceBundle(a, t) ||
                !this.services.backendConnector.backend ||
                (this.options.resources &&
                    !this.options.partialBundledLanguages) ||
                (o(a, t) && (!r || o(i, t)))
            );
        }
        loadNamespaces(t, n) {
            const a = jr();
            return this.options.ns
                ? (typeof t == "string" && (t = [t]),
                  t.forEach((r) => {
                      this.options.ns.indexOf(r) < 0 && this.options.ns.push(r);
                  }),
                  this.loadResources((r) => {
                      a.resolve(), n && n(r);
                  }),
                  a)
                : (n && n(), Promise.resolve());
        }
        loadLanguages(t, n) {
            const a = jr();
            typeof t == "string" && (t = [t]);
            const r = this.options.preload || [],
                i = t.filter((o) => r.indexOf(o) < 0);
            return i.length
                ? ((this.options.preload = r.concat(i)),
                  this.loadResources((o) => {
                      a.resolve(), n && n(o);
                  }),
                  a)
                : (n && n(), Promise.resolve());
        }
        dir(t) {
            if (
                (t ||
                    (t =
                        this.resolvedLanguage ||
                        (this.languages && this.languages.length > 0
                            ? this.languages[0]
                            : this.language)),
                !t)
            )
                return "rtl";
            const n = [
                    "ar",
                    "shu",
                    "sqr",
                    "ssh",
                    "xaa",
                    "yhd",
                    "yud",
                    "aao",
                    "abh",
                    "abv",
                    "acm",
                    "acq",
                    "acw",
                    "acx",
                    "acy",
                    "adf",
                    "ads",
                    "aeb",
                    "aec",
                    "afb",
                    "ajp",
                    "apc",
                    "apd",
                    "arb",
                    "arq",
                    "ars",
                    "ary",
                    "arz",
                    "auz",
                    "avl",
                    "ayh",
                    "ayl",
                    "ayn",
                    "ayp",
                    "bbz",
                    "pga",
                    "he",
                    "iw",
                    "ps",
                    "pbt",
                    "pbu",
                    "pst",
                    "prp",
                    "prd",
                    "ug",
                    "ur",
                    "ydd",
                    "yds",
                    "yih",
                    "ji",
                    "yi",
                    "hbo",
                    "men",
                    "xmn",
                    "fa",
                    "jpr",
                    "peo",
                    "pes",
                    "prs",
                    "dv",
                    "sam",
                    "ckb",
                ],
                a =
                    (this.services && this.services.languageUtils) ||
                    new sg(ug());
            return n.indexOf(a.getLanguagePartFromCode(t)) > -1 ||
                t.toLowerCase().indexOf("-arab") > 1
                ? "rtl"
                : "ltr";
        }
        static createInstance() {
            let t =
                    arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : {},
                n = arguments.length > 1 ? arguments[1] : void 0;
            return new Pr(t, n);
        }
        cloneInstance() {
            let t =
                    arguments.length > 0 && arguments[0] !== void 0
                        ? arguments[0]
                        : {},
                n =
                    arguments.length > 1 && arguments[1] !== void 0
                        ? arguments[1]
                        : qo;
            const a = t.forkResourceStore;
            a && delete t.forkResourceStore;
            const r = { ...this.options, ...t, isClone: !0 },
                i = new Pr(r);
            return (
                (t.debug !== void 0 || t.prefix !== void 0) &&
                    (i.logger = i.logger.clone(t)),
                ["store", "services", "language"].forEach((s) => {
                    i[s] = this[s];
                }),
                (i.services = { ...this.services }),
                (i.services.utils = {
                    hasLoadedNamespace: i.hasLoadedNamespace.bind(i),
                }),
                a &&
                    ((i.store = new rg(this.store.data, r)),
                    (i.services.resourceStore = i.store)),
                (i.translator = new Wo(i.services, r)),
                i.translator.on("*", function (s) {
                    for (
                        var l = arguments.length,
                            u = new Array(l > 1 ? l - 1 : 0),
                            m = 1;
                        m < l;
                        m++
                    )
                        u[m - 1] = arguments[m];
                    i.emit(s, ...u);
                }),
                i.init(r, n),
                (i.translator.options = r),
                (i.translator.backendConnector.services.utils = {
                    hasLoadedNamespace: i.hasLoadedNamespace.bind(i),
                }),
                i
            );
        }
        toJSON() {
            return {
                options: this.options,
                store: this.store,
                language: this.language,
                languages: this.languages,
                resolvedLanguage: this.resolvedLanguage,
            };
        }
    }
    const mg = Pr.createInstance();
    mg.createInstance = Pr.createInstance;
    var mE = mg;
    const pE = mE,
        pg = [
            "af",
            "bg",
            "ca",
            "cs",
            "da",
            "de",
            "en",
            "eo",
            "es",
            "fi",
            "fr",
            "hr",
            "hu",
            "id",
            "is",
            "it",
            "ja",
            "ko",
            "mn",
            "ms",
            "nl",
            "nn",
            "no",
            "pl",
            "pt",
            "pt-BR",
            "ro",
            "ru",
            "si",
            "sl",
            "sq",
            "sr",
            "sv",
            "tr",
            "uk",
            "uz",
            "vi",
            "zh",
            "zh-Hant",
        ];
    (iu.exports = (e = "en", t = "portal") => {
        const n = pE.createInstance();
        return (
            n.init({
                lng: e,
                nsSeparator: !1,
                keySeparator: !1,
                returnEmptyString: !1,
                fallbackLng: !1,
                ns: t,
                defaultNS: t,
                resources: pg.reduce((a, r) => {
                    const i = H1("/ghost/i18n/lib")(
                        `../locales/${r}/${t}.json`
                    );
                    return (
                        (a[r] = {
                            [t]: {
                                ...i,
                                ...(i.default && typeof i.default == "object"
                                    ? i.default
                                    : {}),
                            },
                        }),
                        a
                    );
                }, {}),
            }),
            n
        );
    }),
        (iu.exports.SUPPORTED_LOCALES = pg);
    var hE = iu.exports,
        fE = hE;
    const gE = Pe(fE),
        bE = {
            showPopup: !0,
            site: da,
            member: Yo.free,
            page: "accountEmail",
            ...jS(),
            pageData: Jf,
        };
    function yE({ site: e, children: t }) {
        const { portal_sentry: n } = e || {};
        return n && n.dsn
            ? c.jsx(Ic, { children: t })
            : c.jsx(c.Fragment, { children: t });
    }
    class kE extends R.Component {
        constructor(t) {
            super(t),
                this.setupCustomTriggerButton(t),
                (this.state = {
                    site: null,
                    member: null,
                    page: "loading",
                    showPopup: !1,
                    action: "init:running",
                    initStatus: "running",
                    lastPage: null,
                    customSiteUrl: t.customSiteUrl,
                });
        }
        componentDidMount() {
            this.initSetup();
        }
        componentDidUpdate(t, n) {
            var a, r, i;
            if (n.showPopup !== this.state.showPopup) {
                this.handleCustomTriggerClassUpdate();
                try {
                    this.state.showPopup
                        ? ((this.bodyScroll =
                              (i =
                                  (r =
                                      (a = window.document) == null
                                          ? void 0
                                          : a.body) == null
                                      ? void 0
                                      : r.style) == null
                                  ? void 0
                                  : i.overflow),
                          (window.document.body.style.overflow = "hidden"))
                        : (window.document.body.style.overflow =
                              this.bodyScroll || "");
                } catch {}
            }
            if (
                this.state.initStatus === "success" &&
                n.initStatus !== this.state.initStatus
            ) {
                const { siteUrl: o } = this.props,
                    s = this.getContextFromState();
                this.sendPortalReadyEvent(),
                    r1({ siteUrl: o, site: s.site, member: s.member });
            }
        }
        componentWillUnmount() {
            clearTimeout(this.timeoutId),
                this.customTriggerButtons &&
                    this.customTriggerButtons.forEach((t) => {
                        t.removeEventListener("click", this.clickHandler);
                    }),
                window.removeEventListener("hashchange", this.hashHandler, !1);
        }
        sendPortalReadyEvent() {
            window.self !== window.parent &&
                window.parent.postMessage(
                    { type: "portal-ready", payload: {} },
                    "*"
                );
        }
        setupCustomTriggerButton() {
            this.clickHandler = (a) => {
                a.preventDefault();
                const r = a.currentTarget,
                    i = r && r.dataset.portal,
                    {
                        page: o,
                        pageQuery: s,
                        pageData: l,
                    } = this.getPageFromLinkPath(i) || {};
                this.state.initStatus === "success" &&
                    (s && s !== "free"
                        ? this.handleSignupQuery({
                              site: this.state.site,
                              pageQuery: s,
                          })
                        : this.dispatchAction("openPopup", {
                              page: o,
                              pageQuery: s,
                              pageData: l,
                          }));
            };
            const t = "[data-portal]",
                n = "gh-portal-close";
            (this.customTriggerButtons = document.querySelectorAll(t) || []),
                this.customTriggerButtons.forEach((a) => {
                    a.classList.add(n),
                        a.removeEventListener("click", this.clickHandler),
                        a.addEventListener("click", this.clickHandler);
                });
        }
        handleCustomTriggerClassUpdate() {
            var a;
            const t = "gh-portal-open",
                n = "gh-portal-close";
            (a = this.customTriggerButtons) == null ||
                a.forEach((r) => {
                    const i = this.state.showPopup ? t : n,
                        o = this.state.showPopup ? n : t;
                    r.classList.add(i), r.classList.remove(o);
                });
        }
        async initSetup() {
            try {
                const {
                        site: t,
                        member: n,
                        page: a,
                        showPopup: r,
                        popupNotification: i,
                        lastPage: o,
                        pageQuery: s,
                        pageData: l,
                    } = await this.fetchData(),
                    u = this.props.siteI18nEnabled ? t.locale : "en",
                    m = gE(u, "portal"),
                    p = {
                        site: t,
                        member: n,
                        page: a,
                        lastPage: o,
                        pageQuery: s,
                        showPopup: r,
                        pageData: l,
                        popupNotification: i,
                        t: m.t,
                        action: "init:success",
                        initStatus: "success",
                    };
                if (
                    (this.handleSignupQuery({
                        site: t,
                        pageQuery: s,
                        member: n,
                    }),
                    this.setState(p),
                    (this.hashHandler = () => {
                        this.updateStateForPreviewLinks();
                    }),
                    window.addEventListener("hashchange", this.hashHandler, !1),
                    !n)
                ) {
                    const d = document.querySelectorAll(
                        "[data-lexical-signup-form]"
                    );
                    d.length > 0 &&
                        d.forEach((b) => {
                            b.style.display = "";
                        });
                }
                this.setupRecommendationButtons();
            } catch (t) {
                console.error("[Portal] Failed to initialize:", t),
                    this.setState({
                        action: "init:failed",
                        initStatus: "failed",
                    });
            }
        }
        async fetchData() {
            const { site: t, member: n } = await this.fetchApiData(),
                { site: a, ...r } = this.fetchDevData(),
                { site: i, ...o } = this.fetchLinkData(t),
                { site: s, ...l } = this.fetchPreviewData(),
                { site: u, ...m } = this.fetchNotificationData();
            return {
                member: n,
                page: "",
                site: {
                    ...t,
                    ...i,
                    ...s,
                    ...u,
                    ...a,
                    plans: {
                        ...(a || {}).plans,
                        ...(t || {}).plans,
                        ...(s || {}).plans,
                    },
                },
                ...r,
                ...o,
                ...m,
                ...l,
            };
        }
        fetchDevData() {
            return V(["dev"]) && !this.state.customSiteUrl
                ? bE
                : V(["test"])
                ? {
                      showPopup:
                          this.props.showPopup !== void 0
                              ? this.props.showPopup
                              : !0,
                  }
                : {};
        }
        fetchOfferQueryStrData(t = "") {
            const n = new URLSearchParams(t),
                a = {};
            for (let r of n.entries()) {
                const i = r[0],
                    o = decodeURIComponent(r[1]);
                i === "name"
                    ? (a.name = o || "")
                    : i === "code"
                    ? (a.code = o || "")
                    : i === "display_title"
                    ? (a.display_title = o || "")
                    : i === "display_description"
                    ? (a.display_description = o || "")
                    : i === "type"
                    ? (a.type = o || "")
                    : i === "cadence"
                    ? (a.cadence = o || "")
                    : i === "duration"
                    ? (a.duration = o || "")
                    : i === "duration_in_months" && !isNaN(Number(o))
                    ? (a.duration_in_months = Number(o))
                    : i === "amount" && !isNaN(Number(o))
                    ? (a.amount = Number(o))
                    : i === "currency"
                    ? (a.currency = o || "")
                    : i === "status"
                    ? (a.status = o || "")
                    : i === "tier_id" && (a.tier = { id: o || Jf.tier.id });
            }
            return { page: "offer", pageData: a };
        }
        fetchQueryStrData(t = "") {
            const n = new URLSearchParams(t),
                a = { site: { plans: {} } },
                r = [];
            let i,
                o = null,
                s,
                l,
                u;
            for (let m of n.entries()) {
                const p = m[0],
                    d = decodeURIComponent(m[1]);
                if (p === "button") a.site.portal_button = JSON.parse(d);
                else if (p === "name") a.site.portal_name = JSON.parse(d);
                else if (p === "isFree" && JSON.parse(d)) r.push("free");
                else if (p === "isMonthly" && JSON.parse(d)) r.push("monthly");
                else if (p === "isYearly" && JSON.parse(d)) r.push("yearly");
                else if (p === "portalPrices") i = d ? d.split(",") : [];
                else if (p === "portalProducts") o = d ? d.split(",") : [];
                else if (p === "page" && d) a.page = d;
                else if (p === "accentColor" && (d === "" || d))
                    a.site.accent_color = d;
                else if (p === "buttonIcon" && d) a.site.portal_button_icon = d;
                else if (p === "signupButtonText")
                    a.site.portal_button_signup_text = d || "";
                else if (p === "signupTermsHtml")
                    a.site.portal_signup_terms_html = d || "";
                else if (p === "signupCheckboxRequired")
                    a.site.portal_signup_checkbox_required = JSON.parse(d);
                else if (p === "buttonStyle" && d)
                    a.site.portal_button_style = d;
                else if (p === "monthlyPrice" && !isNaN(Number(d)))
                    (a.site.plans.monthly = Number(d)), (s = Number(d));
                else if (p === "yearlyPrice" && !isNaN(Number(d)))
                    (a.site.plans.yearly = Number(d)), (l = Number(d));
                else if (p === "currency" && d) {
                    const b = d.toUpperCase();
                    (a.site.plans.currency = b),
                        (a.site.plans.currency_symbol = pe(b)),
                        (u = b);
                } else
                    p === "disableBackground"
                        ? (a.site.disableBackground = JSON.parse(d))
                        : p === "allowSelfSignup"
                        ? (a.site.allow_self_signup = JSON.parse(d))
                        : p === "membersSignupAccess" &&
                          d &&
                          (a.site.members_signup_access = d);
            }
            return (
                (a.site.portal_plans = r),
                (a.site.portal_products = o),
                i
                    ? (a.site.portal_plans = i)
                    : s &&
                      l &&
                      u &&
                      (a.site.prices = [
                          {
                              id: "monthly",
                              stripe_price_id: "dummy_stripe_monthly",
                              stripe_product_id: "dummy_stripe_product",
                              active: 1,
                              nickname: "Monthly",
                              currency: u,
                              amount: s,
                              type: "recurring",
                              interval: "month",
                          },
                          {
                              id: "yearly",
                              stripe_price_id: "dummy_stripe_yearly",
                              stripe_product_id: "dummy_stripe_product",
                              active: 1,
                              nickname: "Yearly",
                              currency: u,
                              amount: l,
                              type: "recurring",
                              interval: "year",
                          },
                      ]),
                a
            );
        }
        fetchNotificationData() {
            const {
                type: t,
                status: n,
                duration: a,
                autoHide: r,
                closeable: i,
            } = nf({ billingOnly: !0 }) || {};
            return ["stripe:billing-update"].includes(t)
                ? n === "success"
                    ? {
                          showPopup: !0,
                          popupNotification: K({
                              type: t,
                              status: n,
                              duration: a,
                              closeable: i,
                              autoHide: r,
                              state: this.state,
                              message:
                                  n === "success"
                                      ? "Billing info updated successfully"
                                      : "",
                          }),
                      }
                    : { showPopup: !0 }
                : {};
        }
        fetchLinkData(t) {
            const n = new URLSearchParams(window.location.search);
            if (n.get("uuid") && n.get("action") === "unsubscribe")
                return {
                    showPopup: !0,
                    page: "unsubscribe",
                    pageData: {
                        uuid: n.get("uuid"),
                        newsletterUuid: n.get("newsletter"),
                        comments: n.get("comments"),
                    },
                };
            if (
                Uh({ site: t }) &&
                n.get("action") === "signup" &&
                n.get("success") === "true"
            )
                return {
                    showPopup: !0,
                    page: "recommendations",
                    pageData: { signup: !0 },
                };
            const [a, r] = window.location.hash.substr(1).split("?"),
                i = new URLSearchParams(r ?? ""),
                o = /^(?:(\w+?))?\/monthly$/,
                s = /^(?:(\w+?))?\/yearly$/,
                l = /^offers\/(\w+?)\/?$/,
                u = /^\/portal\/?(?:\/(\w+(?:\/\w+)*))?\/?$/,
                m = /^\/feedback\/(\w+?)\/(\w+?)\/?$/;
            if (a && m.test(a) && i.get("uuid")) {
                const [, p, d] = a.match(m),
                    b = parseInt(d);
                if (b === 1 || b === 0)
                    return {
                        showPopup: !0,
                        page: "feedback",
                        pageData: { uuid: i.get("uuid"), postId: p, score: b },
                    };
            }
            if (a && u.test(a)) {
                const [, p] = a.match(u),
                    {
                        page: d,
                        pageQuery: b,
                        pageData: y,
                    } = this.getPageFromLinkPath(p, t) || {},
                    v = ["accountPlan", "accountProfile"].includes(d)
                        ? "accountHome"
                        : null;
                return {
                    showPopup: !(
                        ["monthly", "yearly"].includes(b) ||
                        o.test(b) ||
                        s.test(b) ||
                        l.test(b)
                    ),
                    ...(d ? { page: d } : {}),
                    ...(b ? { pageQuery: b } : {}),
                    ...(y ? { pageData: y } : {}),
                    ...(v ? { lastPage: v } : {}),
                };
            }
            return {};
        }
        fetchPreviewData() {
            const [, t] = window.location.hash.substr(1).split("?");
            if (V(["preview"])) {
                let n = {};
                return (
                    V(["offerPreview"])
                        ? (n = this.fetchOfferQueryStrData(t))
                        : (n = this.fetchQueryStrData(t)),
                    { ...n, showPopup: !0 }
                );
            }
            return {};
        }
        getColorOverride() {
            const t = document.querySelector("script[data-ghost]");
            return t && t.dataset.accentColor ? t.dataset.accentColor : !1;
        }
        async fetchApiData() {
            const {
                siteUrl: t,
                customSiteUrl: n,
                apiUrl: a,
                apiKey: r,
            } = this.props;
            try {
                this.GhostApi =
                    this.props.api || ca({ siteUrl: t, apiUrl: a, apiKey: r });
                const { site: i, member: o } = await this.GhostApi.init(),
                    s = this.getColorOverride();
                return (
                    s && (i.accent_color = s),
                    this.setupFirstPromoter({ site: i, member: o }),
                    this.setupSentry({ site: i }),
                    { site: i, member: o }
                );
            } catch (i) {
                if (V(["dev", "test"], { customSiteUrl: n })) return {};
                throw i;
            }
        }
        setupSentry({ site: t }) {
            if (V(["test"])) return null;
            const { portal_sentry: n, portal_version: a, version: r } = t,
                o = `portal@2.36.2|ghost@${r}`;
            n &&
                n.dsn &&
                vw({
                    dsn: n.dsn,
                    environment: n.env || "development",
                    release: o,
                    beforeSend: (s) => (Yw({ event: s }) ? s : null),
                    allowUrls: [
                        /https?:\/\/((www)\.)?unpkg\.com\/@tryghost\/portal/,
                    ],
                });
        }
        setupFirstPromoter({ site: t, member: n }) {
            if (V(["test"])) return null;
            const a = Zw({ site: t });
            let r = Oc({ site: t });
            if (
                ((r =
                    r == null
                        ? void 0
                        : r.replace(/^(\S*\.)?(\S*\.\S*)$/i, ".$2")),
                a && r)
            ) {
                const i = document.createElement("script");
                (i.type = "text/javascript"),
                    (i.async = !0),
                    (i.src = "https://cdn.firstpromoter.com/fprom.js"),
                    (i.onload = i.onreadystatechange =
                        function () {
                            let s = this.readyState;
                            if (!s || s === "complete" || s === "loaded")
                                try {
                                    if (
                                        (window.$FPROM.init(a, r),
                                        cx({ member: n }))
                                    ) {
                                        const l = n.email,
                                            u = n.uuid;
                                        if (window.$FPROM)
                                            window.$FPROM.trackSignup({
                                                email: l,
                                                uid: u,
                                            });
                                        else {
                                            const m = window._fprom || [];
                                            (window._fprom = m),
                                                m.push(["event", "signup"]),
                                                m.push(["email", l]),
                                                m.push(["uid", u]);
                                        }
                                    }
                                } catch {}
                        });
                const o = document.getElementsByTagName("script")[0];
                o.parentNode.insertBefore(i, o);
            }
        }
        async dispatchAction(t, n) {
            clearTimeout(this.timeoutId),
                this.setState({ action: `${t}:running` });
            try {
                const a = await t1({
                    action: t,
                    data: n,
                    state: this.state,
                    api: this.GhostApi,
                });
                this.setState(a),
                    a &&
                        a.action &&
                        !a.action.includes(":failed") &&
                        (this.timeoutId = setTimeout(() => {
                            this.setState({ action: "" });
                        }, 2e3));
            } catch (a) {
                if (
                    (console.error(
                        `[Portal] Failed to dispatch action: ${t}`,
                        a
                    ),
                    n && n.throwErrors)
                )
                    throw a;
                const r = K({
                    type: `${t}:failed`,
                    autoHide: !0,
                    closeable: !0,
                    status: "error",
                    state: this.state,
                    meta: { error: a },
                });
                this.setState({ action: `${t}:failed`, popupNotification: r });
            }
        }
        updateStateForPreviewLinks() {
            const { site: t, ...n } = this.fetchPreviewData(),
                { site: a, ...r } = this.fetchLinkData(),
                i = {
                    site: {
                        ...this.state.site,
                        ...(a || {}),
                        ...(t || {}),
                        plans: {
                            ...(this.state.site && this.state.site.plans),
                            ...(a || {}).plans,
                            ...(t || {}).plans,
                        },
                    },
                    ...r,
                    ...n,
                };
            this.handleSignupQuery({ site: i.site, pageQuery: i.pageQuery }),
                this.setState(i);
        }
        async handleOfferQuery({
            site: t,
            offerId: n,
            member: a = this.state.member,
        }) {
            const { portal_button: r } = t;
            if ((Rc(), !it({ member: a })))
                try {
                    const i = await this.GhostApi.site.offer({ offerId: n }),
                        o = i == null ? void 0 : i.offers[0];
                    if (rx({ site: t, offer: o }))
                        if (r)
                            this.dispatchAction("openPopup", {
                                page: "offer",
                                pageData: i == null ? void 0 : i.offers[0],
                            });
                        else {
                            const s = aa({ site: t, productId: o.tier.id }),
                                l =
                                    o.cadence === "month"
                                        ? s.monthlyPrice
                                        : s.yearlyPrice;
                            if (
                                (this.dispatchAction("openPopup", {
                                    page: "loading",
                                }),
                                a)
                            ) {
                                const { tierId: u, cadence: m } = hn({
                                    site: t,
                                    priceId: l.id,
                                });
                                this.dispatchAction("checkoutPlan", {
                                    plan: l.id,
                                    offerId: n,
                                    tierId: u,
                                    cadence: m,
                                });
                            } else {
                                const { tierId: u, cadence: m } = hn({
                                    site: t,
                                    priceId: l.id,
                                });
                                this.dispatchAction("signup", {
                                    plan: l.id,
                                    offerId: n,
                                    tierId: u,
                                    cadence: m,
                                });
                            }
                        }
                } catch {}
        }
        handleSignupQuery({ site: t, pageQuery: n, member: a }) {
            const r = /^offers\/(\w+?)\/?$/;
            let i = n;
            if (r.test(n || "")) {
                const [, s] = n.match(r);
                this.handleOfferQuery({ site: t, offerId: s, member: a });
                return;
            }
            Kh({ site: t, pageQuery: n }) &&
                (i = Kh({ site: t, pageQuery: n }));
            const o = qw({ site: t, priceId: i });
            if (n && n !== "free") {
                Rc();
                const s = (o == null ? void 0 : o.id) || i;
                s !== "free" &&
                    this.dispatchAction("openPopup", { page: "loading" });
                const { tierId: l, cadence: u } = hn({ site: t, priceId: s });
                this.dispatchAction("signup", {
                    plan: s,
                    tierId: l,
                    cadence: u,
                });
            }
        }
        getPageFromLinkPath(t, n) {
            const a = /^signup\/?(?:\/(\w+?))?\/?$/,
                r = /^signup\/?(?:\/(\w+?))\/monthly\/?$/,
                i = /^signup\/?(?:\/(\w+?))\/yearly\/?$/,
                o = /^offers\/(\w+?)\/?$/,
                s = n ?? this.state.site ?? {};
            if (o.test(t)) return { pageQuery: t };
            if (t === "signup") return { page: "signup" };
            if (r.test(t)) {
                const [, l] = t.match(r);
                return { page: "signup", pageQuery: `${l}/monthly` };
            } else if (i.test(t)) {
                const [, l] = t.match(i);
                return { page: "signup", pageQuery: `${l}/yearly` };
            } else if (a.test(t)) {
                const [, l] = t.match(a);
                return { page: "signup", pageQuery: l };
            } else {
                if (t === "signup/free")
                    return { page: "signup", pageQuery: "free" };
                if (t === "signup/monthly")
                    return { page: "signup", pageQuery: "monthly" };
                if (t === "signup/yearly")
                    return { page: "signup", pageQuery: "yearly" };
                if (t === "signin") return { page: "signin" };
                if (t === "account") return { page: "accountHome" };
                if (t === "account/plans") return { page: "accountPlan" };
                if (t === "account/profile") return { page: "accountProfile" };
                if (t === "account/newsletters")
                    return { page: "accountEmail" };
                if (t === "support") return { page: "support" };
                if (t === "support/success") return { page: "supportSuccess" };
                if (t === "support/error") return { page: "supportError" };
                if (t === "recommendations" && Uh({ site: s }))
                    return {
                        page: "recommendations",
                        pageData: { signup: !1 },
                    };
            }
            return {};
        }
        getAccentColor() {
            const { accent_color: t } = this.state.site || {};
            return t;
        }
        getContextPage({ site: t, page: n, member: a }) {
            if (!n) {
                const r = ot({ site: t }) ? "signin" : "signup";
                n = a ? "accountHome" : r;
            }
            return (
                n === "accountPlan" &&
                    Vt({ member: a }) &&
                    !vr({ member: a }) &&
                    (n = "accountHome"),
                nu({ page: n })
            );
        }
        getContextMember({ page: t, member: n, customSiteUrl: a }) {
            return V(["dev", "preview"], { customSiteUrl: a })
                ? wS({ page: t }) || xS({ page: t })
                    ? V(["dev"], { customSiteUrl: a })
                        ? n || Yo.free
                        : V(["preview"])
                        ? Yo.preview
                        : Yo.paid
                    : null
                : n;
        }
        getContextFromState() {
            const {
                    site: t,
                    member: n,
                    action: a,
                    page: r,
                    lastPage: i,
                    showPopup: o,
                    pageQuery: s,
                    pageData: l,
                    popupNotification: u,
                    customSiteUrl: m,
                    t: p,
                } = this.state,
                d = this.getContextPage({ site: t, page: r, member: n }),
                b = this.getContextMember({
                    page: d,
                    member: n,
                    customSiteUrl: m,
                });
            return {
                api: this.GhostApi,
                site: t,
                action: a,
                brandColor: this.getAccentColor(),
                page: d,
                pageQuery: s,
                pageData: l,
                member: b,
                lastPage: i,
                showPopup: o,
                popupNotification: u,
                customSiteUrl: m,
                t: p,
                onAction: (y, v) => this.dispatchAction(y, v),
            };
        }
        getRecommendationButtons() {
            const t = "[data-recommendation]";
            return document.querySelectorAll(t) || [];
        }
        setupRecommendationButtons() {
            const t = (a) => {
                    const r = a.currentTarget.dataset.recommendation;
                    r
                        ? this.dispatchAction("trackRecommendationClicked", {
                              recommendationId: r,
                          }).catch(console.error)
                        : console.warn(
                              "[Portal] Invalid usage of data-recommendation attribute"
                          );
                },
                n = this.getRecommendationButtons();
            for (const a of n) a.addEventListener("click", t, { passive: !0 });
        }
        render() {
            return this.state.initStatus === "success"
                ? c.jsx(yE, {
                      site: this.state.site,
                      children: c.jsxs(_.Provider, {
                          value: this.getContextFromState(),
                          children: [
                              c.jsx(Vf, {}),
                              c.jsx(ef, {}),
                              c.jsx(rf, {}),
                          ],
                      }),
                  })
                : null;
        }
    }
    const hg = "ghost-portal-root";
    function vE() {
        const e = document.createElement("div");
        (e.id = hg), document.body.appendChild(e);
    }
    function wE() {
        const e = document.querySelector("script[data-ghost]");
        if (e) {
            const t = e.dataset.i18n === "true",
                n = e.dataset.ghost,
                a = e.dataset.key,
                r = e.dataset.api;
            return { siteUrl: n, apiKey: a, apiUrl: r, siteI18nEnabled: t };
        }
        return {};
    }
    function xE() {
        const e = new URL(window.location.href);
        e.searchParams.get("token") &&
            (e.searchParams.delete("token"),
            window.history.replaceState({}, document.title, e.href));
    }
    function SE() {
        vE(), xE();
    }
    function EE() {
        const { siteUrl: e, apiKey: t, apiUrl: n, siteI18nEnabled: a } = wE(),
            r = e || window.location.origin;
        SE(),
            Cy.render(
                c.jsx(R.StrictMode, {
                    children: c.jsx(kE, {
                        siteUrl: r,
                        customSiteUrl: e,
                        apiKey: t,
                        apiUrl: n,
                        siteI18nEnabled: a,
                    }),
                }),
                document.getElementById(hg)
            );
    }
    EE();
});
//# sourceMappingURL=portal.min.js.map
